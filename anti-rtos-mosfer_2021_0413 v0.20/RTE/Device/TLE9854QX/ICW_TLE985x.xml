<?xml version="1.0" encoding="UTF-8"?>
<ifxmlcfg version="2.1.8">
	<checksum>1f226c184978af26366e1d544f8a342178be06a8d330ac7f8d7017269676e065</checksum>
<!--file ICW_TLE985x.xml                                                            -->
<!--brief Embedded Power Modules configuration                                      -->
<!--                                                                                -->
<!--Copyright (c) 2017, Infineon Technologies AG                                    -->
<!--All rights reserved.                                                            -->
<!--                                                                                -->
<!--Redistribution and use in source and binary forms, with or without modification,-->
<!--are permitted provided that the following conditions are met:                   -->
<!--                                                                                -->
<!--  Redistributions of source code must retain the above copyright notice, this   -->
<!--  list of conditions and the following disclaimer.                              -->
<!--                                                                                -->
<!--  Redistributions in binary form must reproduce the above copyright notice,     -->
<!--  this list of conditions and the following disclaimer in the documentation     -->
<!--  and/or other materials provided with the distribution.                        -->
<!--                                                                                -->
<!--  Neither the name of the copyright holders nor the names of its contributors   -->
<!--  may be used to endorse or promote products derived from this software without -->
<!--  specific prior written permission.                                            -->
<!--                                                                                -->
<!--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND -->
<!--ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED   -->
<!--WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE          -->
<!--DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE    -->
<!--FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL      -->
<!--DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR      -->
<!--SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER      -->
<!--CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,   -->
<!--OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   -->
<!--OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.            -->
<!--                                                                                -->
<!--********************************************************************************-->
<!--      Infineon Embedded Power Family TLE985x Module Configuration File          -->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                        Author(s) Identity                                      -->
<!--********************************************************************************-->
<!--   Initials     Name                                                            -->
<!--   KC           Kay Claussen                                                    -->
<!--   DM           Daniel Mysliwitz                                                -->
<!--   TS           T&S                                                             -->
<!--   JO           Julia Ott                                                       -->
<!--   AP           Adriano Pereira                                                 -->
<!--   BG           Blandine Guillot                                                -->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                        Revision Control History                                -->
<!--********************************************************************************-->
<!--                                                                                -->
<!-- V0.0.4: 2018-06-29, KC:   Initial version                                      -->
<!-- V0.0.5: 2018-07-16, KC:   BDRV settings extended                               -->
<!-- V0.0.6: 2018-08-02, KC:   UART and PORT user interface improved                -->
<!-- V0.0.7: 2018-08-03, KC:   CSA user interface improved                          -->
<!-- V0.0.8: 2018-08-28, KC:   SSC and LIN user interface improved                  -->
<!--                           T2 and T21 input selection corrected                 -->
<!--                           BDRV: charge sequencer default values corrected      -->
<!-- V0.0.9: 2018-09-19, KC:   ADC1: Postprocessing interrupt selection corrected   -->
<!-- V0.1.0: 2018-09-20, KC:   SSCx lockon removed                                  -->
<!-- V0.1.1: 2018-10-03, DM:   ADC1 channel 10/11 removed as they are n/a           -->
<!--                           SCU.CMCON1.K1DIV removed                             -->
<!--                           SCU.CMCON1.CLKREL removed                            -->
<!--                           TIMER2: T2IN default value changed                   -->
<!--                           ADC1: DPP/ADC clock divider added, sample time calc. -->
<!--                           fixed                                                -->
<!--                           ADC1: ADC1.CLK replaced by ADC1.FADCI                -->
<!-- V0.1.2: 2018-10-17, TS:   ADC1 gain and offset calibration channels added      -->
<!--                           HS.PWMSRCSEL.HS1_SRC_SEL added                       -->
<!--                           PMU.HIGHSIDE_CTRL.HS1_CYC_EN added                   -->
<!-- V1.0.0: 2019-02-11, DM:   openmarket release                                   -->
<!--                           CCU6 channel passive state default set to fit to     -->
<!--                           bridge driver (CC6x passive state before compare,    -->
<!--                           COUT6x passive state after compare)                  -->
<!--                           BG_CLK added                                         -->
<!--                           CCU6 to BDRV default assignment updated              -->
<!--                           BDRV default charge/discharge time set to 1000ns     -->
<!--                           BDRV clock respected for sequencer timings           -->
<!-- V1.0.1: 2019-06-11, JO:   Removed spinboxes for ADC1.CAL_CHx_y                 -->                       
<!--                           as these registers are initialized by the BootROM    -->
<!-- V1.0.2: 2019-08-29, AP:   Corrected default values of                          --> 
<!--                           BDRV_CP_CTRL.DRVx_VCPLO_SDEN, BDRV Clock Divider,    --> 
<!--                           Filter Clock Divider, corrected value of LP_CLK for  --> 
<!--                           Charge Pump Clock calculation                        --> 
<!-- V1.0.3: 2019-09-03, JO:   Added note '- not applicable for TLE9852QX' for CSA  --> 
<!-- V1.0.4: 2019-10-17, BG:   EP-207: Removed "Predefined Baudrate" for SSC, UART  --> 
<!-- V1.0.5: 2019-10-18, BG:   EP-264: Put units along with labels, out of input    -->
<!--                           fields                                               --> 
<!-- V1.0.6: 2020-01-13, BG:   EP-274: Corrected dead time calculation              --> 
<!-- V1.0.7: 2020-02-04, JO:   EP-257: Added Bits ADC1.PP_MAP0_3.EN_PP_MAP0/1       --> 
<!-- V1.0.8: 2020-02-10, BG:   EP-315: Corrected dividing factor for LSB voltage    --> 
<!-- V1.0.9: 2020-02-14, BG:   EP-335: Updated disclaimer                           -->
<!-- V1.1.0: 2020-02-17, JO:   EP-318: Lock U_TX_CONDIS to 1 if TXD1 UART sending   -->
<!--                           is enabled, set LIN Trx Mode accordingly             -->
<!--********************************************************************************-->
	<version label="V1.1.0"/>
	<svd file="tle985x.svd"/>
	<migration file="TLE985x.mig"/>
	<tabcontainer>
		<treecontainer headerlabels="Structure;Settings;" label="Boot Strap Loader" columnwidths="300;250">
			<editbox label="Notes" define="TLE985x.NOTES" svd="0" size="400;100" default="Place your notes here!"/>
			<header file="bsl_defines.h">
				<checkbox label="NAC/NAD Configuration" define="BSL.NAC_NAD_EN" svd="0" uielement="branch" default="1">
					<combo label="BSL Active Time (NAC)" define="BSL.NAD_NAC[23:16]" svd="0" default="label=40 ms">
						<item label="BSL deactivated" value="0"/>
						<item label="5 ms"/>
						<item label="10 ms"/>
						<item label="15 ms"/>
						<item label="20 ms"/>
						<item label="25 ms"/>
						<item label="30 ms"/>
						<item label="35 ms"/>
						<item label="40 ms"/>
						<item label="45 ms"/>
						<item label="50 ms"/>
						<item label="55 ms"/>
						<item label="60 ms"/>
						<item label="65 ms"/>
						<item label="70 ms"/>
						<item label="75 ms"/>
						<item label="80 ms"/>
						<item label="85 ms"/>
						<item label="90 ms"/>
						<item label="95 ms"/>
						<item label="100 ms"/>
						<item label="105 ms"/>
						<item label="110 ms"/>
						<item label="115 ms"/>
						<item label="120 ms"/>
						<item label="125 ms"/>
						<item label="130 ms"/>
						<item label="135 ms"/>
						<item label="140 ms"/>
						<item label="infinite" value="255"/>
					</combo>
					<spinbox label="FastLIN Node Address (NAD)" define="BSL.NAD_NAC[31:24]" svd="0" range="1;0xFF" default="0x80"/>
				</checkbox>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="SCU" desc="System Control Unit" columnwidths="300;250">
			<header file="scu_defines.h">
				<math label="fSYS" define="SCU.PLL_fPLL" svd="0" unit="MHz" formula="(SCU.XTAL_EN&lt;1?5:SCU.XTAL_FREQ)*SCU.PLL_CON.NDIV/(SCU.CMCON1.K2DIV.label*SCU.CMCON1.PDIV)"/>
				<branch label="Clock Configuration">
					<math visible="false" define="SCU.OSC_CON[4:0]" formula="SCU.XTAL_EN&lt;1?0x10:0x01"/>
					<radio define="SCU.AUTO_FSYS_SEL" svd="0">
						<radiobutton label="Automatic Clock Configuration" lockon="SCU.XTAL_EN=0" uielement="branch">
							<combo label="fSYS" define="SCU.AUTO_FSYS[31:0]" svd="0" default="40000000">
								<item label="40 MHz" value="40000000" lockon="SCU.PLL_CON.NDIV=80;SCU.CMCON1.PDIV=5;SCU.CMCON1.K2DIV.label=2;SCU.APCLK.APCLK1FAC.label=fSYS / 2;SCU.APCLK.APCLK2FAC=19;SCU.APCLK.BGCLK_DIV.label=fSYS / 2"/>
								<item label="37.5 MHz" value="37500000" lockon="SCU.PLL_CON.NDIV=75;SCU.CMCON1.PDIV=5;SCU.CMCON1.K2DIV.label=2;SCU.APCLK.APCLK1FAC.label=fSYS / 2;SCU.APCLK.APCLK2FAC=18;SCU.APCLK.BGCLK_DIV.label=fSYS / 2"/>
								<item label="36 MHz" value="36000000" lockon="SCU.PLL_CON.NDIV=72;SCU.CMCON1.PDIV=5;SCU.CMCON1.K2DIV.label=2;SCU.APCLK.APCLK1FAC.label=fSYS;SCU.APCLK.APCLK2FAC=17;SCU.APCLK.BGCLK_DIV.label=fSYS / 2"/>
								<item label="25 MHz" value="25000000" lockon="SCU.PLL_CON.NDIV=50;SCU.CMCON1.PDIV=5;SCU.CMCON1.K2DIV.label=2;SCU.APCLK.APCLK1FAC.label=fSYS;SCU.APCLK.APCLK2FAC=11;SCU.APCLK.BGCLK_DIV.label=fSYS"/>
								<item label="20 MHz" value="20000000" lockon="SCU.PLL_CON.NDIV=60;SCU.CMCON1.PDIV=5;SCU.CMCON1.K2DIV.label=3;SCU.APCLK.APCLK1FAC.label=fSYS;SCU.APCLK.APCLK2FAC=9;SCU.APCLK.BGCLK_DIV.label=fSYS"/>
								<item label="16 MHz" value="16000000" lockon="SCU.PLL_CON.NDIV=64;SCU.CMCON1.PDIV=5;SCU.CMCON1.K2DIV.label=4;SCU.APCLK.APCLK1FAC.label=fSYS;SCU.APCLK.APCLK2FAC=7;SCU.APCLK.BGCLK_DIV.label=fSYS"/>
							</combo>
						</radiobutton>
						<radiobutton label="Manual Clock Configuration" uielement="branch">
							<checkbox define="SCU.XTAL_EN" svd="0" label="Enable external XTAL" uielement="branch">
								<doublespinbox define="SCU.XTAL_FREQ" svd="0" label="XTAL Frequency [MHz]" default="5.00" range="4;16"/>
							</checkbox>
							<branch label="PLL Setting">
								<spinbox label="N-Multiplier" define="SCU.PLL_CON.NDIV" range="39;200" default="80"/>
								<spinbox label="P-Divider" define="SCU.CMCON1.PDIV" range="4;16" default="5"/>
								<!--<combo label="K1-Divider" define="SCU.CMCON1.K1DIV">
                                </combo>-->
								<combo label="K2-Divider" define="SCU.CMCON1.K2DIV">
									<item label="2" override="div 2"/>
									<item label="3" override="div 3"/>
									<item label="4" override="div 4"/>
									<item label="5" override="div 5"/>
									<item label="6" override="div 6"/>
									<item label="7" override="div 7"/>
									<item label="8" override="div 8"/>
									<item label="9" override="div 9"/>
								</combo>
								<!--<combo label="Slow Down Clock Divider for fcclk" define="SCU.CMCON1.CLKREL">
                                </combo>-->
								<math label="fSYS" define="SCU.FSYS" svd="0" unit="Hz" formula="(SCU.XTAL_EN&lt;1?5:SCU.XTAL_FREQ)*1000000*SCU.PLL_CON.NDIV/(SCU.CMCON1.K2DIV.label*SCU.CMCON1.PDIV)"/>
							</branch>
							<branch label="Analog Clock Configuration">
								<combo label="MI_CLK (~20MHz)" define="SCU.APCLK.APCLK1FAC">
									<item label="fSYS" override="div 1"/>
									<item label="fSYS / 2" override="div 2"/>
									<item label="fSYS / 3" override="div 3"/>
									<item label="fSYS / 4" override="div 4"/>
								</combo>
								<math label="MI_CLK (should be ~20 MHz)" unit="MHz" define="SCU.APCLK_MI_CLK" svd="0" formula="SCU.PLL_fPLL/(SCU.APCLK.APCLK1FAC+1)"/>
								<spinbox label="Filter Clock Divider" define="SCU.APCLK.APCLK2FAC" default="3"/>
								<math label="Filter Clock (~2 MHz)" unit="MHz" define="SCU.APCLK_FILT_CLK" svd="0" formula="SCU.PLL_fPLL/(SCU.APCLK.APCLK2FAC+1)"/>
								<combo label="BG_CLK (Bandgap Clock) source select" define="SCU.APCLK.BGCLK_SEL"  header="scu_defines.h" default="label=fSYS">
									<item label="LP_CLK" override="LP_CLK" lockon="SCU.APCLK.BGCLK_DIV.label=fSYS"/>
									<item label="fSYS" override="f_sys"/>
								</combo>
								<combo label="BG_CLK (Bandgap Clock)" define="SCU.APCLK.BGCLK_DIV"  header="scu_defines.h" default="label=fSYS">
									<item label="fSYS" override="div 1"/>
									<item label="fSYS / 2" override="div 2"/>
								</combo>
								<math label="BG_CLK (should be ~24MHz)" svd="0" unit="MHz" define="SCU.APCLK_BG_CLK"  header="scu_defines.h" formula="SCU.APCLK.BGCLK_SEL&lt;1?18:SCU.PLL_fPLL/((SCU.APCLK.BGCLK_DIV.^1)+1)"/>
							</branch>
						</radiobutton>
					</radio>
				</branch>
				<checkbox define="SCU.COCON.EN" label="Clock out enable" uielement="branch">
					<radio define="SCU.COCON.COUTS1" default="0">
						<radiobutton label="Output f_CCLK"/>
						<radiobutton label="Select further" uielement="branch">
							<radio define="SCU.COCON.COUTS0" default="0">
								<radiobutton label="Output f_OSC"/>
								<radiobutton label="Output fSYS" uielement="branch">
									<combo define="SCU.COCON.COREL" label="Clock Out Divider [fSYS/n]" default="label=1">
										<item label="1" override="div 1"/>
										<item label="2" override="div 2"/>
										<item label="3" override="div 3"/>
										<item label="4" override="div 4"/>
										<item label="6" override="div 6"/>
										<item label="8" override="div 8"/>
										<item label="10" override="div 10"/>
										<item label="12" override="div 12"/>
										<item label="14" override="div 14"/>
										<item label="16" override="div 16"/>
										<item label="18" override="div 18"/>
										<item label="20" override="div 20"/>
										<item label="24" override="div 24"/>
										<item label="32" override="div 32"/>
										<item label="36" override="div 36"/>
										<item label="40" override="div 40"/>
									</combo>
									<checkbox label="Ensure 50% duty cycle" define="SCU.COCON.TLEN" default="0"/>
								</radiobutton>
							</radio>
						</radiobutton>
					</radio>
					<combo define="SCU.PINSEL" svd="0" label="Clock Out Pin Select">
						<item label="P0.4" lockon="PORT.P0_DIR.PP4.label=Output;PORT.P0_4_ALT[1:0].label=CLKOUT_0"/>
						<item label="P1.4" lockon="PORT.P1_DIR.PP4.label=Output;PORT.P1_4_ALT[1:0].label=CLKOUT_1"/>
					</combo>
					<math label="Clock Out Frequency at selected GPIO" unit="MHz" define="SCU.CKOUT_FREQ" svd="0" format ="%.3f" formula="SCU.COCON.COUTS1&lt;1?SCU.PLL_fPLL:SCU.COCON.COUTS0&lt;1?(SCU.XTAL_EN?SCU.XTAL_FREQ:5):(SCU.PLL_fPLL/(SCU.COCON.COREL.label*(SCU.COCON.TLEN&lt;1?1:2)))"/>
				</checkbox>
				<branch label="WDT1 (mandatory watchdog)">
					<spinbox label="Watchdog Period [ms]" define="SCUPM.WDT1_PERIOD_EDIT" svd="0" default="1008" range="16;1008"/>
					<math label="Watchdog Period effective" unit="ms" define="SCUPM.WDT1_PERIOD" svd="0" formula="trunc(SCUPM.WDT1_PERIOD_EDIT/16)*16"/>
					<math visible="false" define="SCUPM.WDT1_TRIG.WDP_SEL" formula="SCUPM.WDT1_PERIOD/16"/>
					<math visible="false" define="SCUPM.WDT1_TRIGGER" svd="0" formula="trunc(SCUPM.WDT1_PERIOD*0.694)"/>
				</branch>
				<checkbox define="SCU.WDTCON.WDTEN" label="WDT enable (optional watchdog)" uielement="branch" >
					<combo define="SCU.WDTCON.WDTIN" label="Clock Select" >
						<item label="fPCLK / 2" override="DIV 2"/>
						<item label="fPCLK / 128" override="DIV 128"/>
					</combo>
					<branch label="Reload Value">
						<radio define="SCU.WDT_TIME_SEL" svd="0">
							<radiobutton label="...as clock ticks" uielement="branch">
								<spinbox label="Value [ticks]" define="SCU.WDT_TIME_TICK[7:0]" svd="0" default="1"/>
							</radiobutton>
							<radiobutton label="...as time" uielement="branch">
								<doublespinbox label="Time [us]" define="SCU.WDT_TIME_TIME" svd="0" default="1.00"/>
							</radiobutton>
						</radio>
					</branch>
					<math label="WDT Period" unit="ticks" define="SCU.WDTREL.WDTREL" formula="SCU.WDT_TIME_SEL?floor(SCU.WDT_TIME_TIME*(SCU.PLL_fPLL/(SCU.WDTCON.WDTIN?128:2))):(SCU.WDT_TIME_TICK[7:0])"/>
					<checkbox define="SCU.WDTCON.WINBEN" label="Window Boundary Enable" header="scu_defines.h" uielement="branch">
						<spinbox define="SCU.WDTWINB.WDTWINB" label="Window Boundary Count [ticks]" header="scu_defines.h" default="0" range="0;255"/>
					</checkbox>
				</checkbox>
				<branch label="NVM Protection">
					<checkbox label="NVM Boot Protection" define="SCU.NVM_BOOT_PROT" svd="0" header="scu_defines.h"/>
					<checkbox label="NVM Code Protection" define="SCU.NVM_CODE_PROT" svd="0" header="scu_defines.h"/>
					<checkbox label="NVM Data Protection" define="SCU.NVM_DATA_PROT" svd="0" header="scu_defines.h"/>
					<spinbox label="Password [32bit]" define="SCU.NVM_PROT_PW[31:0]" svd="0" header="scu_defines.h"/>
				</branch>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="PMU" desc="Power Management Unit" columnwidths="300;250">
			<header file="pmu_defines.h">
				<branch label="VDDEXT">
					<checkbox label="Turned on" define="PMU.VDDEXT_CTRL.VDDEXT_ENABLE"/>
					<checkbox label="Cyclic Sense enable" define="PMU.VDDEXT_CTRL.VDDEXT_CYC_EN"/>
					<branch label="Fail Interrupt">
						<checkbox label="Under Voltage" define="PMU.VDDEXT_UV_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="PMU.VDDEXT_UV_EN" svd="0"/>
							<edit label="Call Back" define="PMU.VDDEXT_UV_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Over Temperature" define="PMU.VDDEXT_OT_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="PMU.VDDEXT_OT_EN" svd="0"/>
							<edit label="Call Back" define="PMU.VDDEXT_OT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<math visible="false" define="PMU.VDDEXT_CTRL.VDDEXT_FAIL_EN" formula="PMU.VDDEXT_UV_EN.+PMU.VDDEXT_OT_EN"/>
					</branch>
				</branch>
				<branch label="Wake Up Sources">
					<checkbox label="Cyclic Wake enable" define="PMU.SLEEP.CYC_WAKE_EN" default="1" uielement="branch">
						<spinbox label="Wake up after [ms]" define="PMU.CYC_WAKE_TIME" svd="0" default="1024" range="2;2048"/>
						<math label="Wake up Exp" define="PMU.SLEEP.CYC_WAKE_E01" formula="abs(PMU.CYC_WAKE_TIME/2)>=64?3:abs(PMU.CYC_WAKE_TIME/2)>=16?2:abs(PMU.CYC_WAKE_TIME/2)>=4?1:0"/>
						<math label="Wake up Man" define="PMU.SLEEP.CYC_WAKE_M03" formula="trunc((PMU.CYC_WAKE_TIME/(4^PMU.SLEEP.CYC_WAKE_E01))/2)-1"/>
						<math label="Wake up effective Time (4^EXP*(MAN+1)*2ms)" unit="ms" define="PMU.CYC_WAKE_EFF_TIME" svd="0" formula="4^PMU.SLEEP.CYC_WAKE_E01*(PMU.SLEEP.CYC_WAKE_M03+1)*2"/>
					</checkbox>
					<checkbox label="Cyclic Sense enable" define="PMU.SLEEP.CYC_SENSE_EN" uielement="branch">
						<spinbox label="Wake up after [ms]" define="PMU.CYC_SENSE_SLP_TIME" svd="0" default="2" range="2;2048"/>
						<math label="Cyclic Sense Exp" define="PMU.SLEEP.CYC_SENSE_E01" formula="abs(PMU.CYC_SENSE_SLP_TIME/2)>=64?3:abs(PMU.CYC_SENSE_SLP_TIME/2)>=16?2:abs(PMU.CYC_SENSE_SLP_TIME/2)>=4?1:0"/>
						<math label="Cyclic Sense Man" define="PMU.SLEEP.CYC_SENSE_M03" formula="trunc((PMU.CYC_SENSE_SLP_TIME/(4^PMU.SLEEP.CYC_SENSE_E01))/2)-1"/>
						<math label="Cyclic Sense effective Time (4^EXP*(MAN+1)*2ms)" unit="ms" define="PMU.CYC_SENSE_EFF_SLP_TIME" svd="0" formula="4^PMU.SLEEP.CYC_SENSE_E01*(PMU.SLEEP.CYC_SENSE_M03+1)*2"/>
						<spinbox label="Sense Time [us]" define="PMU.CYC_SENSE_ACT_TIME" svd="0" default="10" range="10;160"/>
						<math label="Sense Time Man" define="PMU.SLEEP.CYC_SENSE_S_DEL" formula="trunc(PMU.CYC_SENSE_ACT_TIME/10)-1"/>
						<math label="Sense effective Time ((MAN+1)*10us)" unit="us" define="PMU.SENSE_EFF_SLP_TIME" svd="0" formula="(PMU.SLEEP.CYC_SENSE_S_DEL+1)*10"/>
					</checkbox>
					<checkbox label="LIN wake up" define="PMU.LIN_WAKE_EN.LIN_WAKE_EN" uielement="branch">
						<combo label="Wake up Filter" define="PMU.CNF_WAKE_FILTER.CNF_LIN_FT">
							<item label="50 us" override="50_us"/>
							<item label="30 us" override="30_us"/>
						</combo>
					</checkbox>
					<branch label="MON wake up">
						<checkbox label="MON1 wake up" define="PMU.MON1_WAKE" svd="0" lockon="PMU.MON_CNF1.MON1_EN=1" default="1" uielement="branch">
							<checkbox label="wake on rising edge" define="PMU.MON1_WAKE_RISE" svd="0" lockon="PMU.MON_CNF1.MON1_RISE=1" default="1"/>
							<checkbox label="wake on falling edge" define="PMU.MON1_WAKE_FALL" svd="0" lockon="PMU.MON_CNF1.MON1_FALL=1" default="1"/>
							<checkbox label="cycle sense" define="PMU.MON1_CYCLE_SENSE" svd="0" lockon="PMU.MON_CNF1.MON1_CYC=1"/>
						</checkbox>
						<checkbox label="MON2 wake up" define="PMU.MON2_WAKE" svd="0" lockon="PMU.MON_CNF1.MON2_EN=1" default="1" uielement="branch">
							<checkbox label="wake on rising edge" define="PMU.MON2_WAKE_RISE" svd="0" lockon="PMU.MON_CNF1.MON2_RISE=1" default="1"/>
							<checkbox label="wake on falling edge" define="PMU.MON2_WAKE_FALL" svd="0" lockon="PMU.MON_CNF1.MON2_FALL=1" default="1"/>
							<checkbox label="cycle sense" define="PMU.MON2_CYCLE_SENSE" svd="0" lockon="PMU.MON_CNF1.MON2_CYC=1"/>
						</checkbox>
						<checkbox label="MON3 wake up" define="PMU.MON3_WAKE" svd="0" lockon="PMU.MON_CNF1.MON3_EN=1" default="1" uielement="branch">
							<checkbox label="wake on rising edge" define="PMU.MON3_WAKE_RISE" svd="0" lockon="PMU.MON_CNF1.MON3_RISE=1" default="1"/>
							<checkbox label="wake on falling edge" define="PMU.MON3_WAKE_FALL" svd="0" lockon="PMU.MON_CNF1.MON3_FALL=1" default="1"/>
							<checkbox label="cycle sense" define="PMU.MON3_CYCLE_SENSE" svd="0" lockon="PMU.MON_CNF1.MON3_CYC=1"/>
						</checkbox>
						<checkbox label="MON4 wake up" define="PMU.MON4_WAKE" svd="0" lockon="PMU.MON_CNF1.MON4_EN=1" default="1" uielement="branch">
							<checkbox label="wake on rising edge" define="PMU.MON4_WAKE_RISE" svd="0" lockon="PMU.MON_CNF1.MON4_RISE=1" default="1"/>
							<checkbox label="wake on falling edge" define="PMU.MON4_WAKE_FALL" svd="0" lockon="PMU.MON_CNF1.MON4_FALL=1" default="1"/>
							<checkbox label="cycle sense" define="PMU.MON4_CYCLE_SENSE" svd="0" lockon="PMU.MON_CNF1.MON4_CYC=1"/>
						</checkbox>
						<combo label="MONx Wake-up Filter Time" define="PMU.CNF_WAKE_FILTER.CNF_MON_FT">
							<item label="20 us" override="20_us"/>
							<item label="40 us" override="40_us"/>
						</combo>
					</branch>
					<branch label="GPIO wake up">
						<checkbox label="PORT0 wake up" define="PMU.PORT0_WAKE" svd="0" uielement="branch">
							<branch label="Pin0">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO0.RI_0"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO0.FA_0"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO0.CYC_0"/>
							</branch>
							<branch label="Pin1">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO0.RI_1"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO0.FA_1"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO0.CYC_1"/>
							</branch>
							<branch label="Pin2">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO0.RI_2"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO0.FA_2"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO0.CYC_2"/>
							</branch>
							<branch label="Pin3">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO0.RI_3"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO0.FA_3"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO0.CYC_3"/>
							</branch>
							<branch label="Pin4">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO0.RI_4"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO0.FA_4"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO0.CYC_4"/>
							</branch>
							<branch label="Pin5">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO0.RI_5"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO0.FA_5"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO0.CYC_5"/>
							</branch>
						</checkbox>
						<checkbox label="PORT1 wake up" define="PMU.PORT1_WAKE" svd="0" uielement="branch">
							<branch label="Pin0">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO1.RI_0"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO1.FA_0"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO1.CYC_0"/>
							</branch>
							<branch label="Pin1">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO1.RI_1"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO1.FA_1"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO1.CYC_1"/>
							</branch>
							<branch label="Pin2">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO1.RI_2"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO1.FA_2"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO1.CYC_2"/>
							</branch>
							<branch label="Pin4">
								<checkbox label="rising edge" define="PMU.WAKE_CNF_GPIO1.RI_4"/>
								<checkbox label="falling edge" define="PMU.WAKE_CNF_GPIO1.FA_4"/>
								<checkbox label="cyclic sense" define="PMU.WAKE_CNF_GPIO1.CYC_4"/>
							</branch>
						</checkbox>
						<combo label="Wake up Filter" define="PMU.CNF_WAKE_FILTER.CNF_GPIO_FT" default="label=10 us">
							<item label="5 us" override="5_us"/>
							<item label="10 us" override="10_us"/>
							<item label="20 us" override="20_us"/>
							<item label="40 us" override="40_us"/>
						</combo>
					</branch>
					<checkbox label="Wakeup Interrupt" define="PMU.WAKEUP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_WAKEUP=1" uielement="branch">
						<checkbox label="Enable Interrupt" define="SCU.WAKECON.WAKEUPEN" header="int_defines.h"/>
						<edit label="Call Back" define="PMU.WAKEUP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
				</branch>
				<branch label="Reset Settings">
					<combo label="Blind Time" define="PMU.CNF_RST_TFB.RST_TFB" default="label=31 us">
						<item label="0.5 us" override="RST_TFB_0"/>
						<item label="1 us" override="RST_TFB_1"/>
						<item label="5 us" override="RST_TFB_2"/>
						<item label="31 us" override="RST_TFB_3"/>
					</combo>
				</branch>
				<branch label="Power Saving Modes">
					<checkbox label="Sleep Mode" define="PMU.SLEEP_MODE" svd="0"/>
					<checkbox label="Stop Mode" define="PMU.STOP_MODE" svd="0" lockon="PMU.PORT0_WAKE=0;PMU.PORT1_WAKE=0" uielement="branch">
						<combo label="VDDC level in Stop Mode" define="PMU.SLEEP.EN_0V9_N" default="label=0.9 V">
							<item label="0.9 V" override="Enable"/>
							<item label="1.5 V" override="Disable"/>
						</combo>
						<checkbox label="Exit Stop Mode with Reset" define="PMU.SLEEP.WAKE_W_RST"/>
					</checkbox>
				</branch>
				<branch label="Supply Interrupt">
					<checkbox label="VDDC Over Voltage" define="PMU.VDDC_OV_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
						<checkbox label="Enable Interrupt" define="PMU.VDDC_OV_EN" svd="0"/>
						<edit label="Call Back" define="PMU.VDDC_OV_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<checkbox label="VDDC Over Load" define="PMU.VDDC_OL_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
						<checkbox label="Enable Interrupt" define="PMU.VDDC_OL_EN" svd="0"/>
						<edit label="Call Back" define="PMU.VDDC_OL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<math visible="false" define="PMU.SUPPLY_STS.PMU_1V5_FAIL_EN" formula="PMU.VDDC_OV_EN.+PMU.VDDC_OL_EN"/>
					<checkbox label="VDDP Over Voltage" define="PMU.VDDP_OV_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
						<checkbox label="Enable Interrupt" define="PMU.VDDP_OV_EN" svd="0"/>
						<edit label="Call Back" define="PMU.VDDP_OV_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<checkbox label="VDDP Over Load" define="PMU.VDDP_OL_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
						<checkbox label="Enable Interrupt" define="PMU.VDDP_OL_EN" svd="0"/>
						<edit label="Call Back" define="PMU.VDDP_OL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<math visible="false" define="PMU.SUPPLY_STS.PMU_5V_FAIL_EN" formula="PMU.VDDP_OV_EN.+PMU.VDDP_OL_EN"/>
					<checkbox label="PMU Overtemperature" define="PMU.PMU_OT_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
						<checkbox label="Enable Interrupt" define="PMU.OT_CTRL.PMU_OT_INT_EN"/>
						<edit label="Call Back" define="PMU.PMU_OT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
				</branch>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="MON" desc="High Voltage Monitor Input" columnwidths="300;250">
			<header file="mon_defines.h">
				<checkbox label="MON1 enable" define="PMU.MON_CNF1.MON1_EN" default="1" uielement="branch">
					<checkbox label="wake on rising edge" define="PMU.MON_CNF1.MON1_RISE"/>
					<checkbox label="wake on falling edge" define="PMU.MON_CNF1.MON1_FALL"/>
					<checkbox label="pull up enable" define="PMU.MON_CNF1.MON1_PU"/>
					<checkbox label="pull down enable" define="PMU.MON_CNF1.MON1_PD"/>
					<checkbox label="cycle sense enable" define="PMU.MON_CNF1.MON1_CYC"/>
					<checkbox label="Interrupt" define="SCU.MONIEN.MON1IE" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_MON=1" uielement="branch">
						<checkbox label="Rising Edge" define="MON1.RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON1.MON1[0]" header="int_defines.h"/>
							<edit label="Rising Edge Call Back" define="MON1.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Falling Edge" define="MON1.FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON1.MON1[1]" header="int_defines.h"/>
							<edit label="Falling Edge Call Back" define="MON1.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</checkbox>
				</checkbox>
				<checkbox label="MON2 enable" define="PMU.MON_CNF1.MON2_EN" default="1" uielement="branch">
					<checkbox label="wake on rising edge" define="PMU.MON_CNF1.MON2_RISE"/>
					<checkbox label="wake on falling edge" define="PMU.MON_CNF1.MON2_FALL"/>
					<checkbox label="pull up enable" define="PMU.MON_CNF1.MON2_PU"/>
					<checkbox label="pull down enable" define="PMU.MON_CNF1.MON2_PD"/>
					<checkbox label="cycle sense enable" define="PMU.MON_CNF1.MON2_CYC"/>
					<checkbox label="Interrupt" define="SCU.MONIEN.MON2IE" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_MON=1" uielement="branch">
						<checkbox label="Rising Edge" define="MON2.RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON1.MON2[0]" header="int_defines.h"/>
							<edit label="Rising Edge Call Back" define="MON2.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Falling Edge" define="MON2.FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON1.MON2[1]" header="int_defines.h"/>
							<edit label="Falling Edge Call Back" define="MON2.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</checkbox>
				</checkbox>
				<checkbox label="MON3 enable" define="PMU.MON_CNF1.MON3_EN" default="1" uielement="branch">
					<checkbox label="wake on rising edge" define="PMU.MON_CNF1.MON3_RISE"/>
					<checkbox label="wake on falling edge" define="PMU.MON_CNF1.MON3_FALL"/>
					<checkbox label="pull up enable" define="PMU.MON_CNF1.MON3_PU"/>
					<checkbox label="pull down enable" define="PMU.MON_CNF1.MON3_PD"/>
					<checkbox label="cycle sense enable" define="PMU.MON_CNF1.MON3_CYC"/>
					<checkbox label="Interrupt" define="SCU.MONIEN.MON3IE" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_MON=1" uielement="branch">
						<checkbox label="Rising Edge" define="MON3.RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON1.MON3[0]" header="int_defines.h"/>
							<edit label="Rising Edge Call Back" define="MON3.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Falling Edge" define="MON3.FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON1.MON3[1]" header="int_defines.h"/>
							<edit label="Falling Edge Call Back" define="MON3.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</checkbox>
				</checkbox>
				<checkbox label="MON4 enable" define="PMU.MON_CNF1.MON4_EN" default="1" uielement="branch">
					<checkbox label="wake on rising edge" define="PMU.MON_CNF1.MON4_RISE"/>
					<checkbox label="wake on falling edge" define="PMU.MON_CNF1.MON4_FALL"/>
					<checkbox label="pull up enable" define="PMU.MON_CNF1.MON4_PU"/>
					<checkbox label="pull down enable" define="PMU.MON_CNF1.MON4_PD"/>
					<checkbox label="cycle sense enable" define="PMU.MON_CNF1.MON4_CYC"/>
					<checkbox label="Interrupt" define="SCU.MONIEN.MON4IE" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_MON=1" uielement="branch">
						<checkbox label="Rising Edge" define="MON4.RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON1.MON4[0]" header="int_defines.h"/>
							<edit label="Rising Edge Call Back" define="MON4.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Falling Edge" define="MON4.FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON1.MON4[1]" header="int_defines.h"/>
							<edit label="Falling Edge Call Back" define="MON4.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</checkbox>
				</checkbox>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="Interrupt" desc="System Interrupts" columnwidths="300;250">
			<header file="int_defines.h">
				<checkbox label="Global Interrupt enable" define="SCU.IEN0.EA" header="scu_defines.h"/>
				<branch label="NMI">
					<checkbox label="WDT" define="SCU.NMI_WDT_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
						<checkbox label="Enable Interrupt" define="SCU.NMICON.NMIWDT"/>
						<edit label="Call Back" define="SCU.NMI_WDT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<checkbox label="PLL Loss-of-Lock" define="SCU.NMI_PLL_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
						<checkbox label="Enable Interrupt" define="SCU.NMICON.NMIPLL"/>
						<edit label="Call Back" define="SCU.NMI_PLL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<checkbox label="Over Temperature enable" define="SCU.NMICON.NMIOT"/>
					<checkbox label="Oscillator WDT" define="SCU.NMI_OWD_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
						<checkbox label="Enable Interrupt" define="SCU.NMICON.NMIOWD"/>
						<edit label="Call Back" define="SCU.NMI_OWD_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<checkbox label="NVM mapping error" define="SCU.NMI_MAP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
						<checkbox label="Enable Interrupt" define="SCU.NMICON.NMIMAP"/>
						<edit label="Call Back" define="SCU.NMI_MAP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<checkbox label="ECC enable" define="SCU.NMICON.NMIECC"/>
					<checkbox label="Supply Prewarning enable" define="SCU.NMICON.NMISUP"/>
					<checkbox label="NVM Stack Overflow" define="SCU.NMI_STOF_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
						<checkbox label="Enable Interrupt" define="SCU.NMICON.NMISTOF"/>
						<edit label="Call Back" define="SCU.NMI_STOF_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
				</branch>
				<branch label="ECC Interrupts">
					<checkbox label="RAM Double Bit ECC Error" define="SCU.ECC_RAM_DB_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIECC=1" uielement="branch">
						<checkbox label="Enable Interrupt" define="SCU.EDCCON.RIE"/>
						<edit label="Call Back" define="SCU.ECC_RAM_DB_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<checkbox label="NVM Double Bit ECC Error" define="SCU.ECC_NVM_DB_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIECC=1" uielement="branch">
						<checkbox label="Enable Interrupt" define="SCU.EDCCON.NVMIE"/>
						<edit label="Call Back" define="SCU.ECC_NVM_DB_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
				</branch>
				<branch label="External Interrupts">
					<checkbox label="EXINT0" define="SCU.MODIEN3.IE0" header="int_defines.h" lockon="CPU.NVIC_ISER.Int_EXINT0=1" uielement="branch">
						<checkbox label="Trigger Rising Edge" define="SCU.EXINT0_RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT0[0]" header="int_defines.h"/>
							<edit label="Rising Edge Call Back" define="EXINT0.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Trigger Falling Edge" define="SCU.EXINT0_FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT0[1]" header="int_defines.h"/>
							<edit label="Falling Edge Call Back" define="EXINT0.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<combo define="SCU.MODPISEL.EXINT0IS" header="scu_defines.h" label="Pin Select" default="label=EXINT0_0 (P0.5)">
							<item label="EXINT0_0 (P0.5)" override="EXINT0_0" lockon="PORT.P0_DIR.PP5.label=Input"/>
							<item label="EXINT0_1 (P1.2)" override="EXINT0_1" lockon="PORT.P1_DIR.PP2.label=Input"/>
							<item label="EXINT0_2 (P2.3)" override="EXINT0_2"/>
							<item label="EXINT0_3 (P0.1)" override="EXINT0_3" lockon="PORT.P0_DIR.PP1.label=Input"/>
						</combo>
					</checkbox>
					<checkbox label="EXINT1" define="SCU.MODIEN4.IE1" header="int_defines.h" lockon="CPU.NVIC_ISER.Int_EXINT1=1" uielement="branch">
						<checkbox label="Trigger Rising Edge" define="SCU.EXINT1_RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT1[0]" header="int_defines.h"/>
							<edit label="Rising Edge Call Back" define="EXINT1.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Trigger Falling Edge" define="SCU.EXINT1_FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT1[1]" header="int_defines.h"/>
							<edit label="Falling Edge Call Back" define="EXINT1.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<combo define="SCU.MODPISEL.EXINT1IS" header="scu_defines.h" label="Pin Select" default="label=EXINT1_0 (P2.1)">
							<item label="EXINT1_0 (P2.1)" override="EXINT1_0"/>
							<item label="EXINT1_1 (P2.0)" override="EXINT1_1"/>
							<item label="EXINT1_2 (P0.3)" override="EXINT1_2" lockon="PORT.P0_DIR.PP3.label=Input"/>
							<item label="EXINT1_3 (P0.2)" override="EXINT1_3" lockon="PORT.P0_DIR.PP2.label=Input"/>
						</combo>
					</checkbox>
					<checkbox label="EXINT2" define="SCU.MODIEN2.EXINT2_EN" header="int_defines.h" lockon="CPU.NVIC_ISER.Int_UART2=1" uielement="branch">
						<checkbox label="Trigger Rising Edge" define="SCU.EXINT2_RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT2[0]" header="int_defines.h"/>
							<edit label="Rising Edge Call Back" define="EXINT2.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Trigger Falling Edge" define="SCU.EXINT2_FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT2[1]" header="int_defines.h"/>
							<edit label="Falling Edge Call Back" define="EXINT2.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<combo define="SCU.MODPISEL.EXINT2IS" header="scu_defines.h" label="Pin Select" default="label=EXINT2_0 (P2.7)">
							<item label="EXINT2_0 (P2.7)" override="EXINT2_0"/>
							<item label="EXINT2_1 (P1.4)" override="EXINT2_1" lockon="PORT.P1_DIR.PP4.label=Input"/>
							<item label="EXINT2_2 (P0.4)" override="EXINT2_2" lockon="PORT.P0_DIR.PP4.label=Input"/>
							<item label="EXINT2_3 (P0.0)" override="EXINT2_3" lockon="PORT.P0_DIR.PP0.label=Input"/>
						</combo>
					</checkbox>
				</branch>
				<branch label="Core Exceptions">
					<checkbox label="HardFault Call Back" define="CPU.HARDFAULT_EN" svd="0" uielement="branch">
						<edit label="Call Back" define="CPU.HARDFAULT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
					<checkbox label="SysTick Call Back" define="CPU.SYSTICK_EN" svd="0" uielement="branch">
						<edit label="Call Back" define="CPU.SYSTICK_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</checkbox>
				</branch>
				<branch label="NVIC">
					<branch label="Interrupt enable">
						<checkbox label="GPT1" define="CPU.NVIC_ISER.Int_GPT1" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="GPT2" define="CPU.NVIC_ISER.Int_GPT2" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="ADC2" define="CPU.NVIC_ISER.Int_ADC2" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="ADC1" define="CPU.NVIC_ISER.Int_ADC1" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="CCU6 SR0" define="CPU.NVIC_ISER.Int_CCU6SR0" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="CCU6 SR1" define="CPU.NVIC_ISER.Int_CCU6SR1" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="CCU6 SR2" define="CPU.NVIC_ISER.Int_CCU6SR2" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="CCU6 SR3" define="CPU.NVIC_ISER.Int_CCU6SR3" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="SSC1" define="CPU.NVIC_ISER.Int_SSC1" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="SSC2" define="CPU.NVIC_ISER.Int_SSC2" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="UART1" define="CPU.NVIC_ISER.Int_UART1" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="UART2" define="CPU.NVIC_ISER.Int_UART2" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="EXINT0" define="CPU.NVIC_ISER.Int_EXINT0" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="EXINT1" define="CPU.NVIC_ISER.Int_EXINT1" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="WAKEUP" define="CPU.NVIC_ISER.Int_WAKEUP" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="Math Div" define="CPU.NVIC_ISER.Int_MATHDIV" lockon="SCU.IEN0.EA=1"/>
						<checkbox label="CP"       define="CPU.NVIC_ISER.Int_CP"      lockon="SCU.IEN0.EA=1"/>
						<checkbox label="BDRV"     define="CPU.NVIC_ISER.Int_BDRV"    lockon="SCU.IEN0.EA=1"/>
						<checkbox label="HS"       define="CPU.NVIC_ISER.Int_HS"      lockon="SCU.IEN0.EA=1"/>
						<checkbox label="CSA - not applicable for TLE9852QX"      define="CPU.NVIC_ISER.Int_OPA"     lockon="SCU.IEN0.EA=1"/>
						<checkbox label="DU"       define="CPU.NVIC_ISER.Int_DU"      lockon="SCU.IEN0.EA=1"/>
						<checkbox label="MONx"     define="CPU.NVIC_ISER.Int_MON"     lockon="SCU.IEN0.EA=1"/>
						<checkbox label="Port 2.x" define="CPU.NVIC_ISER.Int_PORT2"   lockon="SCU.IEN0.EA=1"/>
					</branch>
					<branch label="Interrupt Priority (0 = highest, 3 = lowest)">
						<spinbox label="GPT1   [0..3]" define="CPU.NVIC_IPR0.PRI_GPT1"/>
						<spinbox label="GPT2   [0..3]" define="CPU.NVIC_IPR0.PRI_GPT2"/>
						<spinbox label="ADC2   [0..3]" define="CPU.NVIC_IPR0.PRI_ADC2"/>
						<spinbox label="ADC1   [0..3]" define="CPU.NVIC_IPR0.PRI_ADC1"/>
						<spinbox label="CCU6 SR0 [0..3]" define="CPU.NVIC_IPR1.PRI_CCU6SR0"/>
						<spinbox label="CCU6 SR1 [0..3]" define="CPU.NVIC_IPR1.PRI_CCU6SR1"/>
						<spinbox label="CCU6 SR2 [0..3]" define="CPU.NVIC_IPR1.PRI_CCU6SR2"/>
						<spinbox label="CCU6 SR3 [0..3]" define="CPU.NVIC_IPR1.PRI_CCU6SR3"/>
						<spinbox label="SSC1    [0..3]" define="CPU.NVIC_IPR2.PRI_SSC1"/>
						<spinbox label="SSC2    [0..3]" define="CPU.NVIC_IPR2.PRI_SSC2"/>
						<spinbox label="UART1   [0..3]" define="CPU.NVIC_IPR2.PRI_UART1"/>
						<spinbox label="UART2   [0..3]" define="CPU.NVIC_IPR2.PRI_UART2"/>
						<spinbox label="EXINT0  [0..3]" define="CPU.NVIC_IPR3.PRI_EXINT0"/>
						<spinbox label="EXINT1  [0..3]" define="CPU.NVIC_IPR3.PRI_EXINT1"/>
						<spinbox label="WAKEUP    [0..3]" define="CPU.NVIC_IPR3.PRI_WAKEUP"/>
						<spinbox label="Math Div     [0..3]" define="CPU.NVIC_IPR3.PRI_MATHDIV"/>
						<spinbox label="CP    [0..3]" define="CPU.NVIC_IPR4.PRI_CP"/>
						<spinbox label="BDRV   [0..3]" define="CPU.NVIC_IPR4.PRI_BDRV"/>
						<spinbox label="HS   [0..3]" define="CPU.NVIC_IPR4.PRI_HS"/>
						<spinbox label="CSA  [0..3] - not applicable for TLE9852QX" define="CPU.NVIC_IPR5.PRI_OPA"/>
						<spinbox label="DU  [0..3]" define="CPU.NVIC_IPR5.PRI_DU"/>
						<spinbox label="MONx    [0..3]" define="CPU.NVIC_IPR5.PRI_MON"/>
						<spinbox label="Port 2.x     [0..3]" define="CPU.NVIC_IPR5.PRI_PORT2"/>
					</branch>
				</branch>
			</header>
		</treecontainer>
		<verticalcontainer label="PORT" desc="General Purpose IO Ports" >
			<header file="port_defines.h">
				<gridcontainer columns="6">
					<groupcontainer label="P0.0">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P0_DIR.PP0">
								<radiobutton label="Input"/>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P0_DATA.PP0" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P0_OD.PP0" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P0_0_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="T3OUT_0"/>
										<item label="EXF21_0"/>
										<item label="RXDO_2"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P0_0_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P0.1">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P0_DIR.PP1">
								<radiobutton label="Input"/>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P0_DATA.PP1" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P0_OD.PP1" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P0_1_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO" value="0"/>
										<item label="T6OUT_0" value="1"/>
										<item label="CC62_0" value="2"/>
										<item label="SSC12_M_SCK" value="3"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P0_1_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P0.2">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P0_DIR.PP2">
								<radiobutton label="Input">
								</radiobutton>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P0_DATA.PP2" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P0_OD.PP2" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P0_2_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="SSC12_S_MRST"/>
										<item label="UART1_TXD"/>
										<item label="EXF2_0"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P0_2_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P0.3">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P0_DIR.PP3">
								<radiobutton label="Input"/>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P0_DATA.PP3" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P0_OD.PP3" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P0_3_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="SSC1_M_SCK"/>
										<item label="T6OFL"/>
										<item label="T6OUT_1"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P0_3_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P0.4">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P0_DIR.PP4">
								<radiobutton label="Input"/>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P0_DATA.PP4" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P0_OD.PP4" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P0_4_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="SSC1_M_MTSR"/>
										<item label="CC60_0"/>
										<item label="CLKOUT_0"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P0_4_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P0.5">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P0_DIR.PP5">
								<radiobutton label="Input"/>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P0_DATA.PP5" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P0_OD.PP5" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P0_5_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="SSC1_S_MRST"/>
										<item label="COUT60_0"/>
										<item label="LIN_RXD"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P0_5_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P1.0">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P1_DIR.PP0">
								<radiobutton label="Input"/>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P1_DATA.PP0" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P1_OD.PP0" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P1_0_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="SSC2_M_SCK"/>
										<item label="CC61_0"/>
										<item label="UART2_TXD"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P1_0_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P1.1">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P1_DIR.PP1">
								<radiobutton label="Input">
								</radiobutton>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P1_DATA.PP1" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P1_OD.PP1" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P1_1_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="SSC2_M_MTSR"/>
										<item label="COUT61_0"/>
										<item label="EXF21_1"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P1_1_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P1.2">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P1_DIR.PP2">
								<radiobutton label="Input">
								</radiobutton>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P1_DATA.PP2" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P1_OD.PP2" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P1_2_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="SSC2_S_MRST"/>
										<item label="COUT63_0"/>
										<item label="T3OUT_1"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P1_2_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="    ">
					</groupcontainer>
					<groupcontainer label="P1.4">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P1_DIR.PP4">
								<radiobutton label="Input">
								</radiobutton>
								<radiobutton label="Output" uielement="branch">
									<combo define="PORT.P1_DATA.PP4" label="Data">
										<item label="Low (0)" override="0"/>
										<item label="High (1)" override="1"/>
									</combo>
									<combo define="PORT.P1_OD.PP4" label="Mode">
										<item label="Push-Pull" override="Normal Mode"/>
										<item label="Open-Drain" override="Open Drain Mode"/>
									</combo>
									<combo define="PORT.P1_4_ALT[1:0]" svd="0" label="Function">
										<item label="GPIO"/>
										<item label="CLKOUT_1"/>
										<item label="COUT62_0"/>
										<item label="SSC12_M_MTSR"/>
									</combo>
								</radiobutton>
							</radio>
							<combo define="PORT.P1_4_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="    ">
					</groupcontainer>
					<groupcontainer label="P2.0">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P2_DIR.PP0">
								<radiobutton label="Input"/>
								<radiobutton label="Disabled"/>
							</radio>
							<combo define="PORT.P2_0_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P2.1">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P2_DIR.PP1">
								<radiobutton label="Input"/>
								<radiobutton label="Disabled"/>
							</radio>
							<combo define="PORT.P2_1_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P2.2">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P2_DIR.PP2">
								<radiobutton label="Input"/>
								<radiobutton label="Disabled"/>
							</radio>
							<combo define="PORT.P2_2_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="P2.3">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P2_DIR.PP3">
								<radiobutton label="Input"/>
								<radiobutton label="Disabled"/>
							</radio>
							<combo define="PORT.P2_3_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<groupcontainer label="    ">
					</groupcontainer>
					<groupcontainer label="P2.7">
						<treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="100;100;0">
							<radio define="PORT.P2_DIR.PP7">
								<radiobutton label="Input"/>
								<radiobutton label="Disabled"/>
							</radio>
							<combo define="PORT.P2_7_PUD[1:0]" svd="0" label="Pull mode">
								<item label="None" value="0"/>
								<item label="Pull-Down" value="2"/>
								<item label="Pull-Up" value="3"/>
							</combo>
						</treecontainer>
					</groupcontainer>
					<text/>
				</gridcontainer>
			</header>
		</verticalcontainer>
		<treecontainer headerlabels="Structure;Settings;" label="ADC1" desc="10bit ADC" columnwidths="400;400">
			<header file="adc1_defines.h">
				<checkbox label="ADC1 enable" define="ADC1.CTRL3.MCM_PD_N" uielement="branch" lockon="ADC1.SQ0_1.SQ0[10]=0;ADC1.SQ0_1.SQ0[11]=0;ADC1.SQ0_1.SQ1[10]=0;ADC1.SQ0_1.SQ1[11]=0;ADC1.SQ2_3.SQ2[10]=0;ADC1.SQ2_3.SQ2[11]=0;ADC1.SQ2_3.SQ3[10]=0;ADC1.SQ2_3.SQ3[11]=0;ADC1.SQ4_5.SQ4[10]=0;ADC1.SQ4_5.SQ4[11]=0;ADC1.SQ4_5.SQ5[10]=0;ADC1.SQ4_5.SQ5[11]=0;ADC1.SQ6_7.SQ6[10]=0;ADC1.SQ6_7.SQ6[11]=0;ADC1.SQ6_7.SQ7[10]=0;ADC1.SQ6_7.SQ7[11]=0;ADC1.SQ8_9.SQ8[10]=0;ADC1.SQ8_9.SQ8[11]=0;ADC1.SQ8_9.SQ9[10]=0;ADC1.SQ8_9.SQ9[11]=0;ADC1.SQ10_11.SQ10[10]=0;ADC1.SQ10_11.SQ10[11]=0;ADC1.SQ10_11.SQ11[10]=0;ADC1.SQ10_11.SQ11[11]=0;ADC1.SQ12_13.SQ12[10]=0;ADC1.SQ12_13.SQ12[11]=0;ADC1.SQ12_13.SQ13[10]=0;ADC1.SQ12_13.SQ13[11]=0;ADC1.CHx_ESM.ESM_0[10]=0;ADC1.CHx_ESM.ESM_0[11]=0">
					<branch label="ADC1 Clock">
						<combo label="DPP Clock divider, DPP1_CLK = fSYS / n" define="SCU.ADC1_CLK.DPP1_CLK_DIV"/>
						<math label="DPP1 Clock" unit="MHz" define="ADC1.DPP1_CLK" svd="0" formula="(SCU.PLL_fPLL/(SCU.ADC1_CLK.DPP1_CLK_DIV.value+1))"/>
						<combo label="ADC1 Clock divider, ADC1_CLK = DPP1_CLK / n" define="SCU.ADC1_CLK.ADC1_CLK_DIV"/>
						<math label="ADC1 Clock" unit="MHz" define="ADC1.FADCI" svd="0" formula="ADC1.DPP1_CLK/(SCU.ADC1_CLK.ADC1_CLK_DIV.value+1)"/>
					</branch>
					<branch label="Sample Time Settings">
						<combo label="LV channel sample time [ADC1.CLK ticks per sample]" define="ADC1.CTRL3.SAMPLE_TIME_LVCH" default="label=8">
							<item label="4" override="ADCCLK4"/>
							<item label="6" override="ADCCLK6"/>
							<item label="8" override="ADCCLK8"/>
							<item label="10" override="ADCCLK10"/>
							<item label="12" override="ADCCLK12"/>
							<item label="14" override="ADCCLK14"/>
							<item label="16" override="ADCCLK16"/>
							<item label="18" override="ADCCLK18"/>
							<item label="20" override="ADCCLK20"/>
							<item label="22" override="ADCCLK22"/>
						</combo>
						<math label="LV channel sample time" unit="us" formula="1/ADC1.FADCI*ADC1.CTRL3.SAMPLE_TIME_LVCH.label"/>
						<combo label="HV channel sample time [ADC1.CLK ticks per sample]" define="ADC1.CTRL3.SAMPLE_TIME_HVCH" default="label=24">
							<item label="4" override="ADCCLK4"/>
							<item label="6" override="ADCCLK6"/>
							<item label="8" override="ADCCLK8"/>
							<item label="10" override="ADCCLK10"/>
							<item label="12" override="ADCCLK12"/>
							<item label="14" override="ADCCLK14"/>
							<item label="16" override="ADCCLK16"/>
							<item label="18" override="ADCCLK18"/>
							<item label="20" override="ADCCLK20"/>
							<item label="22" override="ADCCLK22"/>
							<item label="24" override="ADCCLK24"/>
							<item label="26" override="ADCCLK26"/>
							<item label="28" override="ADCCLK28"/>
							<item label="30" override="ADCCLK30"/>
							<item label="32" override="ADCCLK32"/>
							<item label="34" override="ADCCLK34"/>
							<item label="36" override="ADCCLK36"/>
							<item label="38" override="ADCCLK38"/>
							<item label="40" override="ADCCLK40"/>
							<item label="42" override="ADCCLK42"/>
							<item label="44" override="ADCCLK44"/>
							<item label="46" override="ADCCLK46"/>
							<item label="48" override="ADCCLK48"/>
							<item label="50" override="ADCCLK50"/>
							<item label="52" override="ADCCLK52"/>
							<item label="54" override="ADCCLK54"/>
							<item label="56" override="ADCCLK56"/>
							<item label="58" override="ADCCLK58"/>
							<item label="60" override="ADCCLK60"/>
							<item label="62" override="ADCCLK62"/>
						</combo>             
						<math label="HV channel sample time" unit="us" formula="1/ADC1.FADCI*ADC1.CTRL3.SAMPLE_TIME_HVCH.label"/>
					</branch>
					<radio define="ADC1.MODE_SELECT" svd="0">
						<radiobutton label="Software Mode" lockon="ADC1.CHx_ESM.ADC1_ESM_TRIG_SEL.label=none;ADC1.CHx_EIM.ADC1_EIM_TRIG_SEL.label=none"/>
						<radiobutton label="Sequencer Mode" uielement="branch">
							<branch label="Differential Mode">
								<checkbox label="Enable DCH1" define="ADC1.DUIN_SEL.DU1_EN" uielement="branch">
									<combo label="Result Mode" define="ADC1.DIFFCH_OUT1.DWFR1">
										<item label="overwrite" override="DISABLE"/>
										<item label="wait for read" override="ENABLE"/>
									</combo>
									<combo label="Use CCU Trigger 1" define="SCU.MODPISEL4.DU1TRIGGEN" default="0">
										<item label="CC60" override="CC60"/>
										<item label="CC61" override="CC61"/>
										<item label="CC62" override="CC62"/>
										<item label="COUT60" override="COUT60"/>
										<item label="COUT61" override="COUT61"/>
										<item label="COUT62" override="COUT62"/>
										<item label="T3OUT" override="T3OUT"/>
										<item label="COUT63" override="COUT63"/>
									</combo>
									<combo label="Use CCU Trigger 2" define="SCU.MODPISEL4.DU2TRIGGEN" default="1">
										<item label="CC60" override="CC60"/>
										<item label="CC61" override="CC61"/>
										<item label="CC62" override="CC62"/>
										<item label="COUT60" override="COUT60"/>
										<item label="COUT61" override="COUT61"/>
										<item label="COUT62" override="COUT62"/>
										<item label="T3OUT" override="T3OUT"/>
										<item label="COUT63" override="COUT63"/>
									</combo>
									<combo label="Use CCU Trigger 3" define="SCU.MODPISEL4.DU3TRIGGEN" default="3">
										<item label="CC60" override="CC60"/>
										<item label="CC61" override="CC61"/>
										<item label="CC62" override="CC62"/>
										<item label="COUT60" override="COUT60"/>
										<item label="COUT61" override="COUT61"/>
										<item label="COUT62" override="COUT62"/>
										<item label="T3OUT" override="T3OUT"/>
										<item label="COUT63" override="COUT63"/>
									</combo>
									<combo label="Use CCU Trigger 4" define="SCU.MODPISEL4.DU4TRIGGEN" default="4">
										<item label="CC60" override="CC60"/>
										<item label="CC61" override="CC61"/>
										<item label="CC62" override="CC62"/>
										<item label="COUT60" override="COUT60"/>
										<item label="COUT61" override="COUT61"/>
										<item label="COUT62" override="COUT62"/>
										<item label="T3OUT" override="T3OUT"/>
										<item label="COUT63" override="COUT63"/>
									</combo>
								</checkbox>
							</branch>
							<horizontalcontainer label="Channel">
								<text label="0"/>
								<text label="1"/>
								<text label="2"/>
								<text label="3"/>
								<text label="4"/>
								<text label="5"/>
								<text label="6"/>
								<text label="7"/>
								<text label="8"/>
								<text label="9"/>
								<text label="10"/>
								<text label="11"/>
								<text label="12"/>
								<text label="13"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 0">
								<checkbox define="ADC1.SQ0_1.SQ0[0]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[1]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[2]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[3]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[4]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[5]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[6]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[7]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[8]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[9]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[10]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[11]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[12]"/>
								<checkbox define="ADC1.SQ0_1.SQ0[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 1">
								<checkbox define="ADC1.SQ0_1.SQ1[0]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[1]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[2]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[3]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[4]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[5]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[6]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[7]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[8]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[9]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[10]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[11]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[12]"/>
								<checkbox define="ADC1.SQ0_1.SQ1[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 2">
								<checkbox define="ADC1.SQ2_3.SQ2[0]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[1]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[2]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[3]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[4]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[5]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[6]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[7]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[8]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[9]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[10]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[11]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[12]"/>
								<checkbox define="ADC1.SQ2_3.SQ2[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 3">
								<checkbox define="ADC1.SQ2_3.SQ3[0]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[1]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[2]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[3]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[4]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[5]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[6]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[7]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[8]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[9]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[10]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[11]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[12]"/>
								<checkbox define="ADC1.SQ2_3.SQ3[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 4">
								<checkbox define="ADC1.SQ4_5.SQ4[0]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[1]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[2]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[3]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[4]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[5]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[6]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[7]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[8]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[9]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[10]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[11]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[12]"/>
								<checkbox define="ADC1.SQ4_5.SQ4[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 5">
								<checkbox define="ADC1.SQ4_5.SQ5[0]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[1]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[2]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[3]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[4]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[5]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[6]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[7]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[8]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[9]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[10]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[11]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[12]"/>
								<checkbox define="ADC1.SQ4_5.SQ5[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 6">
								<checkbox define="ADC1.SQ6_7.SQ6[0]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[1]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[2]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[3]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[4]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[5]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[6]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[7]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[8]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[9]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[10]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[11]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[12]"/>
								<checkbox define="ADC1.SQ6_7.SQ6[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 7">
								<checkbox define="ADC1.SQ6_7.SQ7[0]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[1]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[2]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[3]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[4]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[5]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[6]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[7]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[8]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[9]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[10]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[11]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[12]"/>
								<checkbox define="ADC1.SQ6_7.SQ7[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 8">
								<checkbox define="ADC1.SQ8_9.SQ8[0]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[1]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[2]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[3]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[4]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[5]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[6]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[7]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[8]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[9]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[10]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[11]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[12]"/>
								<checkbox define="ADC1.SQ8_9.SQ8[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 9">
								<checkbox define="ADC1.SQ8_9.SQ9[0]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[1]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[2]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[3]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[4]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[5]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[6]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[7]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[8]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[9]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[10]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[11]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[12]"/>
								<checkbox define="ADC1.SQ8_9.SQ9[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 10">
								<checkbox define="ADC1.SQ10_11.SQ10[0]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[1]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[2]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[3]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[4]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[5]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[6]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[7]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[8]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[9]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[10]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[11]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[12]"/>
								<checkbox define="ADC1.SQ10_11.SQ10[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 11">
								<checkbox define="ADC1.SQ10_11.SQ11[0]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[1]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[2]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[3]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[4]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[5]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[6]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[7]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[8]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[9]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[10]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[11]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[12]"/>
								<checkbox define="ADC1.SQ10_11.SQ11[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 12">
								<checkbox define="ADC1.SQ12_13.SQ12[0]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[1]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[2]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[3]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[4]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[5]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[6]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[7]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[8]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[9]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[10]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[11]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[12]"/>
								<checkbox define="ADC1.SQ12_13.SQ12[13]"/>
							</horizontalcontainer>
							<horizontalcontainer label="Sequence 13">
								<checkbox define="ADC1.SQ12_13.SQ13[0]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[1]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[2]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[3]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[4]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[5]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[6]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[7]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[8]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[9]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[10]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[11]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[12]"/>
								<checkbox define="ADC1.SQ12_13.SQ13[13]"/>
							</horizontalcontainer>
						</radiobutton>
					</radio>
					<math define="ADC1.CTRL3.SW_MODE" visible="false" formula="ADC1.MODE_SELECT&lt;1?1:0"/>
					<branch label="Channel Configuration">
						<branch label="Channel 0 (VBAT_SENSE)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[0]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH0">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT0.WFR0">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[0]"/>
						</branch>
						<branch label="Channel 1 (VS)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[1]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH1">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT1.WFR1">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[1]"/>
						</branch>
						<branch label="Channel 2 (MON1)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[2]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH2">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT2.WFR2">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[2]"/>
						</branch>
						<branch label="Channel 3 (MON2)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[3]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH3">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT3.WFR3">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[3]"/>
						</branch>
						<branch label="Channel 4 (MON3)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[4]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH4">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT4.WFR4">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[4]"/>
						</branch>
						<branch label="Channel 5 (MON4)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[5]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH5">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT5.WFR5">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[5]"/>
						</branch>
						<branch label="Channel 6 (P2.0)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[6]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH6">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT6.WFR6">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[6]"/>
						</branch>
						<branch label="Channel 7 (P2.1)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[7]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH7">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT7.WFR7">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[7]"/>
						</branch>
						<branch label="Channel 8 (P2.2)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[8]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH8">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT8.WFR8">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[8]"/>
						</branch>
						<branch label="Channel 9 (P2.3)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[9]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH9">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT9.WFR9">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[9]"/>
						</branch>
						<branch label="Channel 10 (n/a)">
							<math define="ADC1.FILT_OUT10.WFR10" formula="0"/><!--this is a dummy assignment to make the define ADC1_FILT_OUT10 appear in the header file -->
						</branch>
						<branch label="Channel 11 (n/a)">
							<math define="ADC1.FILT_OUT11.WFR11" formula="0"/><!--this is a dummy assignment to make the define ADC1_FILT_OUT11 appear in the header file -->
						</branch>
						<!--<branch label="Channel 10 (P2.5)">
					 <checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[10]" uielement="branch">
						  <combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH10">
								<item label="1/2 weight of current sample" override="1/2"/>
								<item label="1/4 weight of current sample" override="1/4"/>
								<item label="1/8 weight of current sample" override="1/8"/>
								<item label="1/16 weight of current sample" override="1/16"/>
						  </combo>
						  <combo label="Result Mode" define="ADC1.FILT_OUT10.WFR10">
								<item label="overwrite" override="DISABLE"/>
								<item label="wait for read" override="ENABLE"/>
						  </combo>
					 </checkbox>
					 <checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[10]"/>
				</branch>
				<branch label="Channel 11 (P2.6)">
					 <checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[11]" uielement="branch">
						  <combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH11">
								<item label="1/2 weight of current sample" override="1/2"/>
								<item label="1/4 weight of current sample" override="1/4"/>
								<item label="1/8 weight of current sample" override="1/8"/>
								<item label="1/16 weight of current sample" override="1/16"/>
						  </combo>
						  <combo label="Result Mode" define="ADC1.FILT_OUT11.WFR11">
								<item label="overwrite" override="DISABLE"/>
								<item label="wait for read" override="ENABLE"/>
						  </combo>
					 </checkbox>
					 <checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[11]"/>
				</branch>-->
						<branch label="Channel 12 (P2.7)">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[12]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH12">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT12.WFR12">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[12]"/>
						</branch>
						<branch label="Channel 13 (CSA) - not applicable for TLE9852QX">
							<checkbox label="Filter" define="ADC1.CTRL5.FILT_OUT_SEL_13_0[13]" uielement="branch">
								<combo label="Coefficient" define="ADC1.FILTCOEFF0_13.CH13">
									<item label="1/2 weight of current sample" override="1/2"/>
									<item label="1/4 weight of current sample" override="1/4"/>
									<item label="1/8 weight of current sample" override="1/8"/>
									<item label="1/16 weight of current sample" override="1/16"/>
								</combo>
								<combo label="Result Mode" define="ADC1.FILT_OUT13.WFR13">
									<item label="overwrite" override="DISABLE"/>
									<item label="wait for read" override="ENABLE"/>
								</combo>
							</checkbox>
							<checkbox label="Calibration enable" define="ADC1.CTRL2.CAL_EN[13]"/>
						</branch>
					</branch>
					<branch label="Exceptional Sequencer Mode - ESM">
						<combo label="Trigger" define="ADC1.CHx_ESM.ADC1_ESM_TRIG_SEL" default="label=none">
							<item label="none"         override="NONE"/>
							<item label="CCU6 COUT63"  override="COUT63"/>
							<item label="GPT12E T6OUT" override="GPT12_T6OUT"/>
							<item label="GPT12E T3OUT" override="GPT12_T3OUT"/>
							<item label="Timer2"       override="T2"/>
							<item label="Timer21"      override="T21"/>
						</combo>
						<branch label="ESM Sequence">
							<checkbox label="Channel 0 (VBAT_SENSE)" define="ADC1.CHx_ESM.ESM_0[0]"/>
							<checkbox label="Channel 1 (VS)" define="ADC1.CHx_ESM.ESM_0[1]"/>
							<checkbox label="Channel 2 (MON1)" define="ADC1.CHx_ESM.ESM_0[2]"/>
							<checkbox label="Channel 3 (MON2)" define="ADC1.CHx_ESM.ESM_0[3]"/>
							<checkbox label="Channel 4 (MON3)" define="ADC1.CHx_ESM.ESM_0[4]"/>
							<checkbox label="Channel 5 (MON4)" define="ADC1.CHx_ESM.ESM_0[5]"/>
							<checkbox label="Channel 6 (P2.0)" define="ADC1.CHx_ESM.ESM_0[6]"/>
							<checkbox label="Channel 7 (P2.1)" define="ADC1.CHx_ESM.ESM_0[7]"/>
							<checkbox label="Channel 8 (P2.2)" define="ADC1.CHx_ESM.ESM_0[8]"/>
							<checkbox label="Channel 9 (P2.3)" define="ADC1.CHx_ESM.ESM_0[9]"/>
							<!--<checkbox label="Channel 10 (P2.5) " define="ADC1.CHx_ESM.ESM_0[10]"/>
					 <checkbox label="Channel 11 (P2.6) " define="ADC1.CHx_ESM.ESM_0[11]"/>-->
							<checkbox label="Channel 10 (n/a) " define="ADC1.CHx_ESM.ESM_0[10]"/>
							<checkbox label="Channel 11 (n/a) " define="ADC1.CHx_ESM.ESM_0[11]"/>
							<checkbox label="Channel 12 (P2.7)" define="ADC1.CHx_ESM.ESM_0[12]"/>
							<checkbox label="Channel 13 (CSA) - not applicable for TLE9852QX" define="ADC1.CHx_ESM.ESM_0[13]"/>
						</branch>
					</branch>
					<branch label="Exceptional Interrupt Mode - EIM">
						<combo label="Trigger" define="ADC1.CHx_EIM.ADC1_EIM_TRIG_SEL" default="label=none">
							<item label="none"         override="NONE"/>
							<item label="CCU6 COUT63"  override="COUT63"/>
							<item label="GPT12E T6OUT" override="GPT12_T6OUT"/>
							<item label="GPT12E T3OUT" override="GPT12_T3OUT"/>
							<item label="Timer2"       override="T2"/>
							<item label="Timer21"      override="T21"/>
						</combo>
						<combo label="Channel" define="ADC1.CHx_EIM.EIM_CHx" default="label=Channel 0 (VBAT_SENSE)">
							<item label="Channel 0 (VBAT_SENSE)" override="CH0_EN"/>
							<item label="Channel 1 (VS)"         override="CH1_EN"/>
							<item label="Channel 2 (MON1)"       override="CH2_EN"/>
							<item label="Channel 3 (MON2)"       override="CH3_EN"/>
							<item label="Channel 4 (MON3)"       override="CH4_EN"/>
							<item label="Channel 5 (MON4)"       override="CH5_EN"/>
							<item label="Channel 6 (P2.0)"       override="CH6_EN"/>
							<item label="Channel 7 (P2.1)"          override="CH7_EN"/>
							<item label="Channel 8 (P2.2)"       override="CH8_EN"/>
							<item label="Channel 9 (P2.3)"       override="CH9_EN"/>
							<item label="Channel 12 (P2.7)"      override="CH12_EN"/>
							<item label="Channel 13 (CSA) - not applicable for TLE9852QX"       override="CH13_EN"/>
						</combo>
						<combo label="Repetitive Measurements" define="ADC1.CHx_EIM.EIM_REP" default="label=Continuous Mode">
							<item label="Continuous Mode"   override="1"/>
							<item label="2"   override="2"/>
							<item label="4"   override="4"/>
							<item label="8"   override="8"/>
							<item label="16"  override="16"/>
							<item label="32"  override="32"/>
							<item label="64"  override="64"/>
							<item label="128" override="128"/>
						</combo>
						<combo label="Result Mode" define="ADC1.FILT_OUTEIM.WFR_EIM">
							<item label="overwrite" override="DISABLE"/>
							<item label="wait for read" override="ENABLE"/>
						</combo>
					</branch>
					<branch label="Interrupts (Conversion done)">
						<checkbox label="Channel 0 (VBAT_SENSE)" define="ADC1.CH0_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH0_IEN"/>
							<edit label="Call Back" define="ADC1.CH0_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 1 (VS)" define="ADC1.CH1_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.VS_IEN"/>
							<edit label="Call Back" define="ADC1.CH1_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 2 (MON1)" define="ADC1.CH2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH2_IEN"/>
							<edit label="Call Back" define="ADC1.CH2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 3 (MON2)" define="ADC1.CH3_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH3_IEN"/>
							<edit label="Call Back" define="ADC1.CH3_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 4 (MON3)" define="ADC1.CH4_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH4_IEN"/>
							<edit label="Call Back" define="ADC1.CH4_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 5 (MON4)" define="ADC1.CH5_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH5_IEN"/>
							<edit label="Call Back" define="ADC1.CH5_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 6 (P2.0)" define="ADC1.CH6_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH6_IEN"/>
							<edit label="Call Back" define="ADC1.CH6_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 7 (P2.1)" define="ADC1.CH7_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH7_IEN"/>
							<edit label="Call Back" define="ADC1.CH7_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 8 (P2.2)" define="ADC1.CH8_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH8_IEN"/>
							<edit label="Call Back" define="ADC1.CH8_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 9 (P2.3)" define="ADC1.CH9_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH9_IEN"/>
							<edit label="Call Back" define="ADC1.CH9_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<branch label="Channel 10 (n/a)"/>
						<branch label="Channel 11 (n/a)"/>
						<!--<checkbox label="Channel 10 (P2.5)" define="ADC1.CH10_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
					 <checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH10_IEN"/>
					 <edit label="Call Back" define="ADC1.CH10_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
				</checkbox>
				<checkbox label="Channel 11 (P2.6)" define="ADC1.CH11_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
					 <checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH11_IEN"/>
					 <edit label="Call Back" define="ADC1.CH11_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
				</checkbox>-->
						<checkbox label="Channel 12 (P2.7)" define="ADC1.CH12_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH12_IEN"/>
							<edit label="Call Back" define="ADC1.CH12_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Channel 13 (CSA) - not applicable for TLE9852QX" define="ADC1.CH13_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.IIR_CH13_IEN"/>
							<edit label="Call Back" define="ADC1.CH13_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="EIM" define="ADC1.EIM_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.EIM_IEN"/>
							<edit label="Call Back" define="ADC1.EIM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="ESM" define="ADC1.ESM_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.ESM_IEN"/>
							<edit label="Call Back" define="ADC1.ESM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Differential Unit Interrupt">
						<checkbox label="DU1UP" define="ADC1.DU1UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_DU=1" uielement="branch">
							<doublespinbox label="Upper Threshold [V]" define="ADC1_DCH1_UPTH_VOLT" svd="0" range="0.0;31.05" default="31.05"/>
							<math label="Upper Threshold value" define="ADC1.DCHTH1_4_UPPER.DCH1_UP" formula="trunc(ADC1_DCH1_UPTH_VOLT*0.039*255/1.21)"/>
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.DU1UP_IEN"/>
							<edit label="Call Back" define="ADC1.DU1UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="DU1LO" define="ADC1.DU1LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_DU=1" uielement="branch">
							<doublespinbox label="Lower Threshold [V]" define="ADC1_DCH1_LOTH_VOLT" svd="0" range="0.0;31.05" default="0.00"/>
							<math label="Lower Threshold value" define="ADC1.DCHTH1_4_LOWER.DCH1_LOW" formula="trunc(ADC1_DCH1_LOTH_VOLT*0.039*255/1.21)"/>
							<checkbox label="Enable Interrupt" define="ADC1.IRQEN_1.DU1LO_IEN"/>
							<edit label="Call Back" define="ADC1.DU1LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Post-Processing Interrupt">
						<branch label="Post-Processing Channel 0 (VBAT_SENSE)">
							<checkbox label="Upper/Lower Threshold Filter"  define="ADC1.FILT_UPLO_CTRL.FUL_PP_CH0_EN"/>
							<checkbox label="Enable Selection" define="ADC1.PP_MAP0_3.EN_PP_MAP0" uielement="branch">
								<checkbox label="Post-Processing-Channel 0 (VBAT) Upper" define="ADC1.PP_CH0_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<doublespinbox label="Upper Threshold [V]" define="ADC1_CH0_UPTH_VOLT" svd="0" range="0.0;25.75" default="19.38"/>
									<math label="Upper Threshold value" define="ADC1.TH0_3_UPPER.PP_CH0_UP" formula="trunc(ADC1_CH0_UPTH_VOLT*0.047*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH0_UP_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH0_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Post-Processing-Channel 0 (VBAT) Lower" define="ADC1.PP_CH0_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<doublespinbox label="Lower Threshold [V]" define="ADC1_CH0_LOTH_VOLT" svd="0" range="0.0;25.75" default="5.85"/>
									<math label="Lower Threshold value" define="ADC1.TH0_3_LOWER.PP_CH0_LOW" formula="trunc(ADC1_CH0_LOTH_VOLT*0.047*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH0_LO_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH0_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</checkbox>
						</branch>
						<branch label="Post-Processing Channel 1 (VS)">
							<checkbox label="Upper/Lower Threshold Filter" define="ADC1.FILT_UPLO_CTRL.FUL_PP_CH1_EN"/>
							<checkbox label="Enable Selection" define="ADC1.PP_MAP0_3.EN_PP_MAP1" uielement="branch">
								<checkbox label="Post-Processing-Channel 1 (VS) Upper" define="ADC1.PP_CH1_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<doublespinbox label="Upper Threshold [V]" define="ADC1_CH1_UPTH_VOLT" svd="0" range="0.0;25.75" default="19.89"/>
									<math label="Upper Threshold value" define="ADC1.TH0_3_UPPER.PP_CH1_UP" formula="trunc(ADC1_CH1_UPTH_VOLT*0.047*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.VS_UP_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH1_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Post-Processing-Channel 1 (VS) Lower" define="ADC1.PP_CH1_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<doublespinbox label="Lower Threshold [V]" define="ADC1_CH1_LOTH_VOLT" svd="0" range="0.0;25.75" default="6.66"/>
									<math label="Lower Threshold value" define="ADC1.TH0_3_LOWER.PP_CH1_LOW" formula="trunc(ADC1_CH1_LOTH_VOLT*0.047*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.VS_LO_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH1_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</checkbox>
						</branch>
						<branch label="Post-Processing Channel 2">
							<checkbox label="Upper/Lower Threshold Filter" define="ADC1.FILT_UPLO_CTRL.FUL_PP_CH2_EN"/>
							<checkbox label="Enable Selection" define="ADC1.PP_MAP0_3.EN_PP_MAP2" uielement="branch">
								<combo label="Interrupt Selection" define="ADC1.PP_MAP0_3.PP_MAP2" >
									<item label="Channel 2 (MON1)" value="2" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 3 (MON2)" value="3" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 4 (MON3)" value="4" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 5 (MON4)" value="5" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 6 (P2.0)" value="6" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 7 (P2.1)" value="7" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 8 (P2.2)" value="8" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 9 (P2.3)" value="9" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<!--<item label="Channel 10 (P2.5)" value="10" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
								<item label="Channel 11 (P2.6)" value="11" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>-->
									<item label="Channel 12 (P2.7)" value="12" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 13 (CSA) - not applicable for TLE9852QX" value="13" lockon="CPU.NVIC_ISER.Int_OPA=1"/>
									<item hide="Ch0"/>
									<item hide="Ch13"/>
								</combo>
								<checkbox label="Post-Processing-Channel 2 Upper" define="ADC1.PP_CH2_UP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Upper Threshold [V]" define="ADC1_CH2_UPTH_VOLT" svd="0" range="0.0;31.05" default="31.05"/>
									<math define="ADC1_PP_CH2_GAIN" svd="0" visible="false" formula="ADC1.PP_MAP0_3.PP_MAP2&lt;6?0.039:ADC1.PP_MAP0_3.PP_MAP2&lt;13?0.227:0.352"/>
									<math label="Upper Threshold value" define="ADC1.TH0_3_UPPER.PP_CH2_UP" formula="trunc(ADC1_CH2_UPTH_VOLT*ADC1_PP_CH2_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH2_UP_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH2_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Post-Processing-Channel 2 Lower" define="ADC1.PP_CH2_LO_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Lower Threshold [V]" define="ADC1_CH2_LOTH_VOLT" svd="0" range="0.0;31.05" default="00.00"/>
									<math label="Lower Threshold value" define="ADC1.TH0_3_LOWER.PP_CH2_LOW" formula="trunc(ADC1_CH2_LOTH_VOLT*ADC1_PP_CH2_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH2_LO_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH2_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</checkbox>
						</branch>
						<branch label="Post-Processing Channel 3">
							<checkbox label="Upper/Lower Threshold Filter" define="ADC1.FILT_UPLO_CTRL.FUL_PP_CH3_EN"/>
							<checkbox label="Enable Selection" define="ADC1.PP_MAP0_3.EN_PP_MAP3" uielement="branch">
								<combo label="Interrupt Selection" define="ADC1.PP_MAP0_3.PP_MAP3" >
									<item label="Channel 2 (MON1)" value="2" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 3 (MON2)" value="3" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 4 (MON3)" value="4" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 5 (MON4)" value="5" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 6 (P2.0)" value="6" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 7 (P2.1)" value="7" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 8 (P2.2)" value="8" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 9 (P2.3)" value="9" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<!--<item label="Channel 10 (P2.5)" value="10" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
								<item label="Channel 11 (P2.6)" value="11" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>-->
									<item label="Channel 12 (P2.7)" value="12" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 13 (CSA) - not applicable for TLE9852QX" value="13" lockon="CPU.NVIC_ISER.Int_OPA=1"/>
									<item hide="Ch0"/>
									<item hide="Ch13"/>
								</combo>
								<checkbox label="Post-Processing-Channel 3 Upper" define="ADC1.PP_CH3_UP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Upper Threshold [V]" define="ADC1_CH3_UPTH_VOLT" svd="0" range="0.0;31.05" default="31.05"/>
									<math define="ADC1_PP_CH3_GAIN" svd="0" visible="false" formula="ADC1.PP_MAP0_3.PP_MAP3&lt;6?0.039:ADC1.PP_MAP0_3.PP_MAP3&lt;13?0.227:0.352"/>
									<math label="Upper Threshold value" define="ADC1.TH0_3_UPPER.PP_CH3_UP" formula="trunc(ADC1_CH3_UPTH_VOLT*ADC1_PP_CH3_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH3_UP_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH3_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Post-Processing-Channel 3 Lower" define="ADC1.PP_CH3_LO_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Lower Threshold [V]" define="ADC1_CH3_LOTH_VOLT" svd="0" range="0.0;31.05" default="00.00"/>
									<math label="Lower Threshold value" define="ADC1.TH0_3_LOWER.PP_CH3_LOW" formula="trunc(ADC1_CH3_LOTH_VOLT*ADC1_PP_CH3_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH3_LO_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH3_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</checkbox>
						</branch>
						<branch label="Post-Processing Channel 4">
							<checkbox label="Upper/Lower Threshold Filter" define="ADC1.FILT_UPLO_CTRL.FUL_PP_CH4_EN"/>
							<checkbox label="Enable Selection" define="ADC1.PP_MAP4_7.EN_PP_MAP4" uielement="branch">
								<combo label="Interrupt Selection" define="ADC1.PP_MAP4_7.PP_MAP4" >
									<item label="Channel 2 (MON1)" value="2" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 3 (MON2)" value="3" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 4 (MON3)" value="4" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 5 (MON4)" value="5" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 6 (P2.0)" value="6" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 7 (P2.1)" value="7" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 8 (P2.2)" value="8" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 9 (P2.3)" value="9" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<!--<item label="Channel 10 (P2.5)" value="10" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
								<item label="Channel 11 (P2.6)" value="11" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>-->
									<item label="Channel 12 (P2.7)" value="12" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 13 (CSA) - not applicable for TLE9852QX" value="13" lockon="CPU.NVIC_ISER.Int_OPA=1"/>
									<item hide="Ch0"/>
									<item hide="Ch13"/>
								</combo>
								<checkbox label="Post-Processing-Channel 4 Upper" define="ADC1.PP_CH4_UP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Upper Threshold [V]" define="ADC1_CH4_UPTH_VOLT" svd="0" range="0.0;31.05" default="31.05"/>
									<math define="ADC1_PP_CH4_GAIN" svd="0" visible="false" formula="ADC1.PP_MAP4_7.PP_MAP4&lt;6?0.039:ADC1.PP_MAP4_7.PP_MAP4&lt;13?0.227:0.352"/>
									<math label="Upper Threshold value" define="ADC1.TH4_7_UPPER.PP_CH4_UP" formula="trunc(ADC1_CH4_UPTH_VOLT*ADC1_PP_CH4_GAIN*255/1.227)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH4_UP_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH4_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Post-Processing-Channel 4 Lower" define="ADC1.PP_CH4_LO_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Lower Threshold [V]" define="ADC1_CH4_LOTH_VOLT" svd="0" range="0.0;31.05" default="00.00"/>
									<math label="Lower Threshold value" define="ADC1.TH4_7_LOWER.PP_CH4_LOW" formula="trunc(ADC1_CH4_LOTH_VOLT*ADC1_PP_CH4_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH4_LO_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH4_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</checkbox>
						</branch>
						<branch label="Post-Processing Channel 5">
							<checkbox label="Upper/Lower Threshold Filter" define="ADC1.FILT_UPLO_CTRL.FUL_PP_CH5_EN"/>
							<checkbox label="Enable Selection" define="ADC1.PP_MAP4_7.EN_PP_MAP5" uielement="branch">
								<combo label="Interrupt Selection" define="ADC1.PP_MAP4_7.PP_MAP5" >
									<item label="Channel 2 (MON1)" value="2" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 3 (MON2)" value="3" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 4 (MON3)" value="4" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 5 (MON4)" value="5" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 6 (P2.0)" value="6" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 7 (P2.1)" value="7" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 8 (P2.2)" value="8" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 9 (P2.3)" value="9" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<!--<item label="Channel 10 (P2.5)" value="10" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
								<item label="Channel 11 (P2.6)" value="11" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>-->
									<item label="Channel 12 (P2.7)" value="12" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 13 (CSA) - not applicable for TLE9852QX" value="13" lockon="CPU.NVIC_ISER.Int_OPA=1"/>
									<item hide="Ch0"/>
									<item hide="Ch13"/>
								</combo>
								<checkbox label="Post-Processing-Channel 5 Upper" define="ADC1.PP_CH5_UP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Upper Threshold [V]" define="ADC1_CH5_UPTH_VOLT" svd="0" range="0.0;31.05" default="31.05"/>
									<math define="ADC1_PP_CH5_GAIN" svd="0" visible="false" formula="ADC1.PP_MAP4_7.PP_MAP5&lt;6?0.039:ADC1.PP_MAP4_7.PP_MAP5&lt;13?0.227:0.352"/>
									<math label="Upper Threshold value" define="ADC1.TH4_7_UPPER.PP_CH5_UP" formula="trunc(ADC1_CH5_UPTH_VOLT*ADC1_PP_CH5_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH5_UP_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH5_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Post-Processing-Channel 5 Lower" define="ADC1.PP_CH5_LO_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Lower Threshold [V]" define="ADC1_CH5_LOTH_VOLT" svd="0" range="0.0;31.05" default="00.00"/>
									<math label="Lower Threshold value" define="ADC1.TH4_7_LOWER.PP_CH5_LOW" formula="trunc(ADC1_CH5_LOTH_VOLT*ADC1_PP_CH5_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH5_LO_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH5_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</checkbox>
						</branch>
						<branch label="Post-Processing Channel 6">
							<checkbox label="Upper/Lower Threshold Filter" define="ADC1.FILT_UPLO_CTRL.FUL_PP_CH6_EN"/>
							<checkbox label="Enable Selection" define="ADC1.PP_MAP4_7.EN_PP_MAP6" uielement="branch">
								<combo label="Interrupt Selection" define="ADC1.PP_MAP4_7.PP_MAP6" >
									<item label="Channel 2 (MON1)" value="2" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 3 (MON2)" value="3" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 4 (MON3)" value="4" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 5 (MON4)" value="5" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 6 (P2.0)" value="6" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 7 (P2.1)" value="7" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 8 (P2.2)" value="8" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 9 (P2.3)" value="9" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<!--<item label="Channel 10 (P2.5)" value="10" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
								<item label="Channel 11 (P2.6)" value="11" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>-->
									<item label="Channel 12 (P2.7)" value="12" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 13 (CSA) - not applicable for TLE9852QX" value="13" lockon="CPU.NVIC_ISER.Int_OPA=1"/>
									<item hide="Ch0"/>
									<item hide="Ch13"/>
								</combo>
								<checkbox label="Post-Processing-Channel 6 Upper" define="ADC1.PP_CH6_UP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Upper Threshold [V]" define="ADC1_CH6_UPTH_VOLT" svd="0" range="0.0;31.05" default="31.05"/>
									<math define="ADC1_PP_CH6_GAIN" svd="0" visible="false" formula="ADC1.PP_MAP4_7.PP_MAP6&lt;6?0.039:ADC1.PP_MAP4_7.PP_MAP6&lt;13?0.227:0.352"/>
									<math label="Upper Threshold value" define="ADC1.TH4_7_UPPER.PP_CH6_UP" formula="trunc(ADC1_CH6_UPTH_VOLT*ADC1_PP_CH6_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH6_UP_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH6_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Post-Processing-Channel 6 Lower" define="ADC1.PP_CH6_LO_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Lower Threshold [V]" define="ADC1_CH6_LOTH_VOLT" svd="0" range="0.0;31.05" default="00.00"/>
									<math label="Lower Threshold value" define="ADC1.TH4_7_LOWER.PP_CH6_LOW" formula="trunc(ADC1_CH6_LOTH_VOLT*ADC1_PP_CH6_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH6_LO_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH6_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</checkbox>    
						</branch>
						<branch label="Post-Processing Channel 7">
							<checkbox label="Upper/Lower Threshold Filter" define="ADC1.FILT_UPLO_CTRL.FUL_PP_CH7_EN"/>
							<checkbox label="Enable Selection" define="ADC1.PP_MAP4_7.EN_PP_MAP7" uielement="branch">
								<combo label="Interrupt Selection" define="ADC1.PP_MAP4_7.PP_MAP7" >
									<item label="Channel 2 (MON1)" value="2" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 3 (MON2)" value="3" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 4 (MON3)" value="4" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 5 (MON4)" value="5" lockon="CPU.NVIC_ISER.Int_MON=1"/>
									<item label="Channel 6 (P2.0)" value="6" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 7 (P2.1)" value="7" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 8 (P2.2)" value="8" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 9 (P2.3)" value="9" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<!--<item label="Channel 10 (P2.5)" value="10" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
								<item label="Channel 11 (P2.6)" value="11" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>-->
									<item label="Channel 12 (P2.7)" value="12" lockon="CPU.NVIC_ISER.Int_PORT2=1"/>
									<item label="Channel 13 (CSA) - not applicable for TLE9852QX" value="13" lockon="CPU.NVIC_ISER.Int_OPA=1"/>
									<item hide="Ch0"/>
									<item hide="Ch13"/>
								</combo>
								<checkbox label="Post-Processing-Channel 7 Upper" define="ADC1.PP_CH7_UP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Upper Threshold [V]" define="ADC1_CH7_UPTH_VOLT" svd="0" range="0.0;31.05" default="31.05"/>
									<math define="ADC1_PP_CH7_GAIN" svd="0" visible="false" formula="ADC1.PP_MAP4_7.PP_MAP7&lt;6?0.039:ADC1.PP_MAP4_7.PP_MAP7&lt;13?0.227:0.352"/>
									<math label="Upper Threshold value" define="ADC1.TH4_7_UPPER.PP_CH7_UP" formula="trunc(ADC1_CH7_UPTH_VOLT*ADC1_PP_CH7_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH7_UP_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH7_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Post-Processing-Channel 7 Lower" define="ADC1.PP_CH7_LO_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
									<doublespinbox label="Lower Threshold [V]" define="ADC1_CH7_LOTH_VOLT" svd="0" range="0.0;31.05" default="00.00"/>
									<math label="Lower Threshold value" define="ADC1.TH4_7_LOWER.PP_CH7_LOW" formula="trunc(ADC1_CH7_LOTH_VOLT*ADC1_PP_CH7_GAIN*255/1.21)"/>
									<checkbox label="Enable Interrupt" define="ADC1.IRQEN_2.PP_CH7_LO_IEN"/>
									<edit label="Call Back" define="ADC1.PP_CH7_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</checkbox>    
						</branch>
					</branch>
				</checkbox>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="ADC2" desc="8bit ADC" columnwidths="300;250">
			<header file="adc2_defines.h">
				<checkbox label="Configure ADC2" define="ADC2.CTRL2.MCM_PD_N" uielement="branch">
					<math label="ADC2 Clock" unit="MHz" define="ADC2.CLK" svd="0" formula="SCU.APCLK_MI_CLK"/>
					<math label="Single Channel Conversion time" define="ADC2.CONV_TIME" svd="0" unit=" us" formula="1/SCU.APCLK_MI_CLK*(ADC2.CTRL2.SAMPLE_TIME_int.label+10)"/>
					<combo label="Sample Time [MI_Clock ticks]" define="ADC2.CTRL2.SAMPLE_TIME_int" default="label=12">
						<item label="4" override="MICLK4"/>
						<item label="6" override="MICLK6"/>
						<item label="8" override="MICLK8"/>
						<item label="10" override="MICLK10"/>
						<item label="12" override="MICLK12"/>
						<item label="14" override="MICLK14"/>
						<item label="16" override="MICLK16"/>
						<item label="18" override="MICLK18"/>
						<item label="20" override="MICLK20"/>
						<item label="22" override="MICLK22"/>
					</combo>
					<branch label="Channel Configuration">
						<branch label="Channel 0 - VS">
							<doublespinbox label="Upper Threshold [V]" define="ADC2.CH0_UPTH_VOLT" svd="0" range="0.0;31.00" default="28.36"/>
							<branch label="Lower Threshold - protected, cannot be changed"/>
							<math label="Upper Threshold value" define="ADC2.TH0_3_UPPER.THUP_CH0" formula="trunc(ADC2.CH0_UPTH_VOLT*0.039*255/1.21)"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT0_3_UPPER.HYST_UP_CH0">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT0_3_UPPER.CNT_UP_CH0">
									</combo>
								</branch>
								<branch label="Lower Hysteresis - protected, cannot be changed"/>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[0]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch0"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Upper Threshold" define="ADC2.VS_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VS_OV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VS_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Lower Threshold" define="ADC2.VS_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VS_UV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VS_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
						<branch label="Channel 1 - VSD">
							<doublespinbox label="Upper Threshold [V]" define="ADC2.CH1_UPTH_VOLT" svd="0" range="0.0;31.00" default="28.36"/>
							<doublespinbox label="Lower Threshold [V]" define="ADC2.CH1_LOTH_VOLT" svd="0" range="0.0;31.00" default="5.21"/>
							<math label="Upper Threshold value" define="ADC2.TH0_3_UPPER.THUP_CH1" formula="trunc(ADC2.CH1_UPTH_VOLT*0.039*255/1.21)"/>
							<math label="Lower Threshold value" define="ADC2.TH0_3_LOWER.THLO_CH1" formula="trunc(ADC2.CH1_LOTH_VOLT*0.039*255/1.21)"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT0_3_UPPER.HYST_UP_CH1">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT0_3_UPPER.CNT_UP_CH1">
									</combo>
								</branch>
								<branch label="Lower Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT0_3_LOWER.HYST_LO_CH1">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT0_3_LOWER.CNT_LO_CH1">
									</combo>
								</branch>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[1]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch1"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Upper Threshold" define="ADC2.VSD_UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_CP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="BDRV.CP_IRQEN.VSD_UPTH_IEN" header="bdrv_defines.h"/>
									<edit label="Call Back" define="ADC2.VSD_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Lower Threshold" define="ADC2.VSD_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_CP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="BDRV.CP_IRQEN.VSD_LOTH_IEN" header="bdrv_defines.h"/>
									<edit label="Call Back" define="ADC2.VSD_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
						<branch label="Channel 2 - VCP">
							<doublespinbox label="Upper Threshold [V]" define="ADC2.CH2_UPTH_VOLT" svd="0" range="0.0;52.60" default="46.62"/>
							<doublespinbox label="Lower Threshold [V]" define="ADC2.CH2_LOTH_VOLT" svd="0" range="0.0;52.60" default="9.45"/>
							<math label="Upper Threshold value" define="ADC2.TH0_3_UPPER.THUP_CH2" formula="trunc(ADC2.CH2_UPTH_VOLT*0.023*255/1.21)"/>
							<math label="Lower Threshold value" define="ADC2.TH0_3_LOWER.THLO_CH2" formula="trunc(ADC2.CH2_LOTH_VOLT*0.023*255/1.21)"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT0_3_UPPER.HYST_UP_CH2">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT0_3_UPPER.CNT_UP_CH2">
									</combo>
								</branch>
								<branch label="Lower Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT0_3_LOWER.HYST_LO_CH2">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT0_3_LOWER.CNT_LO_CH2">
									</combo>
								</branch>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[2]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch2"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Upper Threshold" define="ADC2.VCP_UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_CP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="BDRV.CP_IRQEN.VCP_UPTH_IEN" header="bdrv_defines.h"/>
									<edit label="Call Back" define="ADC2.VCP_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Lower Threshold" define="ADC2.VCP_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_CP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="BDRV.CP_IRQEN.VCP_LOTH1_IEN" header="bdrv_defines.h"/>
									<edit label="Call Back" define="ADC2.VCP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
						<branch label="Channel 3 - VDDEXT">
							<doublespinbox label="Upper Threshold [V]" define="ADC2.CH3_UPTH_VOLT" svd="0" range="0.0;5.96" default="5.12"/>
							<doublespinbox label="Lower Threshold [V]" define="ADC2.CH3_LOTH_VOLT" svd="0" range="0.0;5.96" default="4.54"/>
							<math label="Upper Threshold value" define="ADC2.TH0_3_UPPER.THUP_CH3" formula="trunc(ADC2.CH3_UPTH_VOLT*0.203*255/1.21)"/>
							<math label="Lower Threshold value" define="ADC2.TH0_3_LOWER.THLO_CH3" formula="trunc(ADC2.CH3_LOTH_VOLT*0.203*255/1.21)"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT0_3_UPPER.HYST_UP_CH3">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT0_3_UPPER.CNT_UP_CH3">
									</combo>
								</branch>
								<branch label="Lower Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT0_3_LOWER.HYST_LO_CH3">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT0_3_LOWER.CNT_LO_CH3">
									</combo>
								</branch>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[3]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch3"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Upper Threshold" define="ADC2.VDDEXT_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDDEXT_OV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VDDEXT_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Lower Threshold" define="ADC2.VDDEXT_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDDEXT_UV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VDDEXT_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
						<branch label="Channel 4 - VDDP">
							<doublespinbox label="Upper Threshold [V]" define="ADC2.CH4_UPTH_VOLT" svd="0" range="0.0;5.96" default="5.02"/>
							<branch label="Lower Threshold - protected, cannot be changed"/>
							<math label="Upper Threshold value" define="ADC2.TH4_7_UPPER.THUP_CH4" formula="trunc(ADC2.CH4_UPTH_VOLT*0.203*255/1.21)"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT4_7_UPPER.HYST_UP_CH4">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT4_7_UPPER.CNT_UP_CH4">
									</combo>
								</branch>
								<branch label="Lower Hysteresis - protected, cannot be changed"/>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[4]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch4"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Upper Threshold" define="ADC2.VDDP_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDD5V_OV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VDDP_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Lower Threshold" define="ADC2.VDDP_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDD5V_UV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VDDP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
						<branch label="Channel 5 - VBG">
							<branch label="Upper Threshold - protected, cannot be changed"/>
							<branch label="Lower Threshold - protected, cannot be changed"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis - protected, cannot be changed"/>
								<branch label="Lower Hysteresis - protected, cannot be changed"/>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[5]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch5"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Upper Threshold" define="ADC2.VBG_UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC2=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.VREF1V2_OV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VBG_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Lower Threshold" define="ADC2.VBG_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_ADC2=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.VREF1V2_UV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VBG_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
						<branch label="Channel 6 - VDDC">
							<doublespinbox label="Upper Threshold [V]" define="ADC2.CH6_UPTH_VOLT" svd="0" range="0.0;1.61" default="1.60"/>
							<branch label="Lower Threshold - protected, cannot be changed"/>
							<math label="Upper Threshold value" define="ADC2.TH4_7_UPPER.THUP_CH6" formula="trunc(ADC2.CH6_UPTH_VOLT*0.75*255/1.21)"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT4_7_UPPER.HYST_UP_CH6">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT4_7_UPPER.CNT_UP_CH6">
									</combo>
								</branch>
								<branch label="Lower Hysteresis - protected, cannot be changed"/>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[6]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch6"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Upper Threshold" define="ADC2.VDDC_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDD1V5_OV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VDDC_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Lower Threshold" define="ADC2.VDDC_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDD1V5_UV_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.VDDC_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
						<branch label="Channel 7 - Temperature Sensor 1">
							<branch label="Upper Threshold - protected, cannot be changed"/>
							<doublespinbox label="Prewarning Threshold [°C]" define="ADC2.CH7_LOTH_DEG" svd="0" range="-40;242" default="126.55"/>
							<math label="Prewarning Threshold value" define="ADC2.TH4_7_LOWER.THLO_CH7" formula="trunc(ADC2.CH7_LOTH_DEG*0.482+139)"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis - protected, cannot be changed"/>
								<branch label="Lower Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT4_7_LOWER.HYST_LO_CH7">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT4_7_LOWER.CNT_LO_CH7">
									</combo>
								</branch>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[7]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch7"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Over Temperature" define="ADC2.SYS_TEMP_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIOT=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.SYS_OT_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.SYS_TEMP_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Prewarning Temperature" define="ADC2.SYS_TEMP_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIOT=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.SYS_OTWARN_IE" header="int_defines.h"/>
									<edit label="Call Back" define="ADC2.SYS_TEMP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
						<branch label="Channel 8 - Temperature Sensor 2">
							<branch label="Upper Threshold - protected, cannot be changed"/>
							<doublespinbox label="Prewarning Threshold [°C]" define="ADC2.CH8_LOTH_DEG" svd="0" range="-40;242" default="126.55"/>
							<math label="Prewarning Threshold value" define="ADC2.TH8_11_LOWER.THLO_CH8" formula="trunc(ADC2.CH8_LOTH_DEG*0.482+139)"/>
							<branch label="Mode">
								<branch label="Measurement Mode - protected, cannot be changed"/>
								<branch label="Upper Hysteresis - protected, cannot be changed"/>
								<branch label="Lower Hysteresis">
									<combo label="Hysteresis" define="ADC2.CNT8_11_LOWER.HYST_LO_CH8">
										<item label="hysteresis off" override="HYSTOFF"/>
									</combo>
									<combo label="Event Count" define="ADC2.CNT8_11_LOWER.CNT_LO_CH8">
									</combo>
								</branch>
							</branch>
							<checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_8_0[8]" uielement="branch">
								<checkbox label="Upper/Lower Threshold Filter" define="ADC2.FILT_UPLO_CTRL.UPLOEN_Ch8"/>
								<branch label="Coefficient - protected, cannot be changed"/>
							</checkbox>
							<branch label="Calibration - protected, cannot be changed"/>
							<branch label="Interrupt">
								<checkbox label="Over Temperature" define="ADC2.CP_TEMP_UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_CP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="BDRV.CP_IRQEN.VCP_OTSD_IEN" header="bdrv_defines.h"/>
									<edit label="Call Back" define="ADC2.CP_TEMP_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
								<checkbox label="Prewarning Temperature" define="ADC2.CP_TEMP_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_CP=1" uielement="branch">
									<checkbox label="Enable Interrupt" define="BDRV.CP_IRQEN.VCP_OTW_IEN" header="bdrv_defines.h"/>
									<edit label="Call Back" define="ADC2.CP_TEMP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
								</checkbox>
							</branch>
						</branch>
					</branch>
				</checkbox>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="HS" desc="High-Side Switch" columnwidths="300;250">
			<header file="hs_defines.h">
				<checkbox define="HS.CTRL.HS1_EN" label="HS1 Settings" uielement="branch">
					<branch label="Configuration">
						<checkbox label="High Side 1 PWM" define="HS.CTRL.HS1_PWM"/>
						<checkbox label="High Side 1 On" define="HS.CTRL.HS1_ON"/>
						<checkbox label="High Side 1 Open Load Detection" define="HS.CTRL.HS1_OL_EN"/>
						<checkbox label="High Side 1 Cyclic-ON Driver" define="PMU.HIGHSIDE_CTRL.HS1_CYC_EN"/>                        
						<combo label="High Side 1 Slew Rate Control" define="HS.CTRL.HS1_SR_CTRL_SEL" default="label=Slew Rate 1, Slow Slew Rate 3V/us">
							<item label="Slew Rate 1, Slow Slew Rate 3V/us" override="Slew Rate 1"/>
							<item label="Slew Rate 2, Fast Slew Rate 40V/us" override="Slew Rate 2"/>
							<item label="Slew Rate 3, Low EMC Slew Rate 1V/us" override="Slew Rate 3"/>
						</combo>
						<combo label="High Side 1 Overcurrent Threshold" define="HS.CTRL.HS1_OC_SEL" default="label=IOCTH3, 150 mA min">
							<item label="IOCTH0, 25 mA min" override="IOCTH0"/>
							<item label="IOCTH1, 50 mA min" override="IOCTH1"/>
							<item label="IOCTH2, 100 mA min" override="IOCTH2"/>
							<item label="IOCTH3, 150 mA min" override="IOCTH3"/>
						</combo>
						<combo label="Blanking Time Filter Select for HS1 open Load" define="HS.TRIM.HS1_OL_BTFILT_SEL" default="label=8 us">
							<item label="4 us" override="4_us"/>
							<item label="8 us" override="8_us"/>
							<item label="16 us" override="16_us"/>
							<item label="32 us" override="32_us"/>
						</combo>
						<combo label="Blanking Time Filter Select for HS1 overcurrent/overtemperature" define="HS.TRIM.HS1_OC_OT_BTFILT_SEL" default="label=4 us">
							<item label="4 us" override="4_us"/>
							<item label="8 us" override="8_us"/>
							<item label="16 us" override="16_us"/>
							<item label="32 us" override="32_us"/>
						</combo>
						<combo label="Source Select (PWM Output)" define="HS.PWMSRCSEL.HS1_SRC_SEL" default="label=CCU6 CC60">
							<item label="CCU6 CC60" override="CC60"/>
							<item label="CCU6 CC61" override="CC61"/>
							<item label="CCU6 CC62" override="CC62"/>
							<item label="CCU6 COUT60" override="COUT60"/>
							<item label="CCU6 COUT61" override="COUT61"/>
							<item label="CCU6 COUT62" override="COUT62"/>
							<item label="GPT12 T3OUT" override="T3OUT"/>
						</combo>                        
					</branch>
					<branch label="Interrupts">
						<checkbox label="HS1 Over Temperature" define="HS.HS1_OT_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_HS=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="HS.IRQEN.HS1_OT_IEN"/>
							<edit label="Call Back" define="HS.HS1_OT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="HS1 Over Load" define="HS.HS1_OL_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_HS=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="HS.IRQEN.HS1_OL_IEN"/>
							<edit label="Call Back" define="HS.HS1_OL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="HS1 Over Current" define="HS.HS1_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_HS=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="HS.IRQEN.HS1_OC_IEN"/>
							<edit label="Call Back" define="HS.HS1_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
				</checkbox>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="BDRV" desc="Bridge Driver (incl. Charge Pump)" columnwidths="300;250">
			<header file="bdrv_defines.h">
				<branch label="BDRV Clock Configuration">
					<combo label="Bridge Driver Clock Divider" define="SCU.BRDRV_CLK.BRDRV_CLK_DIV" default="label=fSYS / 2">
						<item label="fSYS" override="div 1"/>
						<item label="fSYS / 2" override="div 2"/>
						<item label="fSYS / 3" override="div 3"/>
						<item label="fSYS / 4" override="div 4"/>
					</combo>
					<math label="Bridge Driver Clock" unit="MHz" define="SCU.BDRV_CLK" svd="0" formula="SCU.PLL_fPLL/(SCU.BRDRV_CLK.BRDRV_CLK_DIV+1)"/>
					<spinbox label="Filter Clock Divider" define="SCU.BRDRV_CLK.BRDRV_TFILT_DIV" default="9"/>
					<math label="Bridge Driver Filter Clock" unit="MHz" define="SCU.BRDRV_TFILT_CLK" svd="0" formula="SCU.PLL_fPLL/(SCU.BRDRV_CLK.BRDRV_TFILT_DIV+1)"/>
				</branch>            
				<checkbox define="BDRV.CP_CTRL.CP_EN" label="Charge Pump Settings" uielement="branch">
					<checkbox label="Charge Pump Clock" define="BDRV.CP_CLK_CTRL.CPCLK_EN" default="1" uielement="branch">
						<branch label="Clock Source">
							<radio define="SCU.APCLK.CPCLK_SEL" header="scu_defines.h">
								<radiobutton label="LP_CLK (~20 MHz)"/>
								<radiobutton label="fSYS" uielement="branch">
									<combo label="Clock Divider" define="SCU.APCLK.CPCLK_DIV" header="scu_defines.h" default="label=fSYS / 2">
										<item label="fSYS" value="1" override="div 1"/>
										<item label="fSYS / 2" value="0" override="div 2"/>
									</combo>
								</radiobutton>
							</radio>
						</branch>
						<math visible="false" define="BDRV.CP_CLK_SRC" svd="0" formula="SCU.APCLK.CPCLK_SEL&lt;1?20000000:SCU.APCLK.CPCLK_DIV&lt;1?SCU.FSYS/2:SCU.FSYS"/>
						<math label="Charge Pump Clock" unit="kHz" define="BDRV.CP_CLK" svd="0" formula="BDRV.CP_CLK_SRC/80000"/>
						<spinbox label="Upper Dither Freq. [kHz]" define="BDRV.UP_DITH_FREQ" svd="0" default="243"/>
						<spinbox label="Lower Dither Freq. [kHz]" define="BDRV.LO_DITH_FREQ" svd="0" default="209"/>
						<math label="Upper Dither Freq. (eff.)" unit="kHz" define="BDRV.UP_DITH" svd="0" formula="(BDRV.CP_CLK_SRC/((BDRV.CP_CLK_CTRL.F_CP*32)+BDRV.CP_CLK_CTRL.DITH_UPPER))/1000"/>
						<math label="Lower Dither Freq. (eff.)" unit="kHz" define="BDRV.LO_DITH" svd="0" formula="(BDRV.CP_CLK_SRC/((BDRV.CP_CLK_CTRL.F_CP*32)+BDRV.CP_CLK_CTRL.DITH_LOWER))/1000"/>
						<branch label="Register Values">
							<math label="F_CP (max. 0x3)" define="BDRV.CP_CLK_CTRL.F_CP" format="%1X" formula="trunc((BDRV.CP_CLK_SRC/(BDRV.UP_DITH_FREQ*1000))/32)"/>
							<math label="DITH_UPPER (max. 0x1F)" define="BDRV.CP_CLK_CTRL.DITH_UPPER" format="%02X" formula="(BDRV.CP_CLK_SRC/(BDRV.UP_DITH_FREQ*1000)).*31"/>
							<math label="DITH_LOWER (max. 0x1F)" define="BDRV.CP_CLK_CTRL.DITH_LOWER" format="%02X" formula="(BDRV.CP_CLK_SRC/(BDRV.LO_DITH_FREQ*1000)).*31"/>
						</branch>
					</checkbox>
					<checkbox label="Charge Pump Settings If Disabled"  define="BDRV.CPCLKDIS_En" svd="0" lockon="BDRV.CP_CLK_CTRL.CPCLK_EN=0" uielement="branch">
						<combo label="Charge Pump Clock If Disabled" define="BDRV.CP_CLK_CTRL.CPCLKDIS_SET" default="label=Low">
							<item label="Low" override="LOW"/>
							<item label="High" override="HIGH"/>
						</combo>
					</checkbox>
					<branch label="Charge Pump Output">
						<combo label="Stage Configuration" define="BDRV.CP_CTRL.CP_STAGE_SEL">
							<item label="both stages" override="2-stage"/>
							<item label="1st stage" override="1-stage1"/>
							<item label="2nd stage" override="1-stage2"/>
							<item label="automatic" override="auto"/>
						</combo>
						<radio define="BDRV.OUT_VOLT" svd="0">
							<radiobutton label="15 V" value="1"/>
							<radiobutton label="14 V" value="0"/>
							<radiobutton label=" 9 V" value="2" lockon="BDRV.CP_CTRL.CPLOPWRM_EN=1" uielement="branch">
								<checkbox label="Low Power Enable" define="BDRV.CP_CTRL.CPLOPWRM_EN"/>
							</radiobutton>
						</radio>
						<math define="BDRV.CP_CTRL.VCP14_15V_SEL" visible="false" formula="BDRV.OUT_VOLT.*0x1"/>
						<math define="BDRV.CP_CTRL.VCP9V_SET" visible="false" formula="BDRV.OUT_VOLT/2"/>
					</branch>
				</checkbox>
				<branch label="Diagnosis Settings">
					<branch label="Charge Pump Diagnosis">
						<combo label="Driver shutdown on VSD upper voltage" define="BDRV.CP_CTRL.DRVx_VSDUP_DIS" default="label=enabled">
							<item label="enabled" override="Driver Enable"/>
							<item label="disable" override="Driver Disable"/>
						</combo>
						<combo label="Driver shutdown on VSD lower voltage" define="BDRV.CP_CTRL.DRVx_VSDLO_DIS" default="label=enabled">
							<item label="enabled" override="Driver Enable"/>
							<item label="disable" override="Driver Disable"/>
						</combo>
						<combo label="Driver shutdown on VCP upper voltage" define="BDRV.CP_CTRL.DRVx_VCPUP_DIS" default="label=enabled">
							<item label="enabled" override="Driver Enable"/>
							<item label="disable" override="Driver Disable"/>
						</combo>
						<combo label="Driver shutdown on VCP lower voltage" define="BDRV.CP_CTRL.DRVx_VCPLO_DIS" default="label=enabled">
							<item label="enabled" override="Driver Enable"/>
							<item label="disable" override="Driver Disable"/>
						</combo>
						<math define="BDRV.CP_CTRL.DRVx_VCPLO_SDEN" visible="false" formula="1"/>
						<combo label="VCP Low Voltage Threshold" define="BDRV.CP_CTRL.VCP_LOWTH2" default="label=7.325 V">
							<item label="7.325 V" override="7.325_V"/>
							<item label="7.654 V" override="7.654_V"/>
							<item label="7.982 V" override="7.982_V"/>
							<item label="8.309 V" override="8.309_V"/>
							<item label="8.638 V" override="8.638_V"/>
							<item label="8.966 V" override="8.966_V"/>
							<item label="9.293 V" override="9.293_V"/>
							<item label="9.620 V" override="9.620_V"/>
						</combo>
						<combo label="VCP Low Voltage Filter Time" define="BDRV.TRIM_DRVx.CPLOW_TFILT_SEL" default="label=4 us">
							<item label="4 us" override="4_us"/>
							<item label="8 us" override="8_us"/>
							<item label="16 us" override="16_us"/>
							<item label="32 us" override="32_us"/>
						</combo>
						<checkbox label="VCP Low Voltage Interrupt" define="BDRV.VCP_LO2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_CP=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.CP_IRQEN.VCP_LOTH2_IEN"/>
							<edit label="Call Back" define="BDRV.VCP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Fast Discharge">
						<checkbox label="LS1 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.LS1DRV_FDISCHG_DIS"/>
						<checkbox label="LS2 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.LS2DRV_FDISCHG_DIS"/>
						<checkbox label="HS1 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.HS1DRV_FDISCHG_DIS"/>
						<checkbox label="HS2 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.HS2DRV_FDISCHG_DIS"/>
					</branch>
					<branch label="Over-Current Shutdown">
						<checkbox label="LS1 Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.LS1DRV_OCSDN_DIS"/>
						<checkbox label="LS2 Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.LS2DRV_OCSDN_DIS"/>
						<checkbox label="HS1 Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.HS1DRV_OCSDN_DIS"/>
						<checkbox label="HS2 Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.HS2DRV_OCSDN_DIS"/>
					</branch>
					<branch label="Drain-Source Monitoring">
						<combo label="HS DS-Monitoring Filter Time" define="BDRV.TRIM_DRVx.HSDRV_DS_TFILT_SEL" default="label=1 us">
							<item label="1 us" override="1_us"/>
							<item label="2 us" override="2_us"/>
							<item label="4 us" override="4_us"/>
							<item label="8 us" override="8_us"/>
						</combo>
						<combo label="LS DS-Monitoring Filter Time" define="BDRV.TRIM_DRVx.LSDRV_DS_TFILT_SEL" default="label=1 us">
							<item label="1 us" override="1_us"/>
							<item label="2 us" override="2_us"/>
							<item label="4 us" override="4_us"/>
							<item label="8 us" override="8_us"/>
						</combo>
						<combo label="DS-Monitoring Blanking Time" define="BDRV.TRIM_DRVx.LS_HS_BT_TFILT_SEL" default="label=1 us">
							<item label="1 us" override="1_us"/>
							<item label="2 us" override="2_us"/>
							<item label="4 us" override="4_us"/>
							<item label="8 us" override="8_us"/>
						</combo>
						<combo label="DS-Monitoring Threshold" define="BDRV.CTRL3.DSMONVTH" default="label=0.25 V">
							<item label="0.125 V" override="0.125_V"/>
							<item label="0.25 V"  override="0.25_V"/>
							<item label="0.50 V"  override="0.50_V"/>
							<item label="0.75 V"  override="0.75_V"/>
							<item label="1.00 V"  override="1.00_V"/>
							<item label="1.25 V"  override="1.25_V"/>
							<item label="1.50 V"  override="1.50_V"/>
							<item label="1.75 V"  override="1.75_V"/>
						</combo>
					</branch>
					<branch label="Interrupts">
						<checkbox label="HS1 Over Current" define="BDRV.HS1_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.HS1_OC_IEN"/>
							<edit label="Call Back" define="BDRV.HS1_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="LS1 Over Current" define="BDRV.LS1_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.LS1_OC_IEN"/>
							<edit label="Call Back" define="BDRV.LS1_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="HS2 Over Current" define="BDRV.HS2_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.HS2_OC_IEN"/>
							<edit label="Call Back" define="BDRV.HS2_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="LS2 Over Current" define="BDRV.LS2_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.LS2_OC_IEN"/>
							<edit label="Call Back" define="BDRV.LS2_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="HS1 Drain Source Monitoring" define="BDRV.HS1_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.HS1_DS_IEN"/>
							<edit label="Call Back" define="BDRV.HS1_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="LS1 Drain Source Monitoring" define="BDRV.LS1_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.LS1_DS_IEN"/>
							<edit label="Call Back" define="BDRV.LS1_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="HS2 Drain Source Monitoring" define="BDRV.HS2_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.HS2_DS_IEN"/>
							<edit label="Call Back" define="BDRV.HS2_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="LS2 Drain Source Monitoring" define="BDRV.LS2_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.LS2_DS_IEN"/>
							<edit label="Call Back" define="BDRV.LS2_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Driver Sequence Error" define="BDRV.SEQ_ERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_BDRV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="BDRV.IRQEN.SEQ_ERR_IEN"/>
							<edit label="Call Back" define="BDRV.SEQ_ERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<checkbox label="Cross-Current Protection" role="inverted" define="BDRV.CTRL3.DRV_CCP_DIS" uielement="branch">
						<combo label="Time Multiplier" define="BDRV.CTRL3.DRV_CCP_TMUL" default="label=1x">
							<item label="1x" override="MUL1"/>
							<item label="2x" override="MUL2"/>
							<item label="4x" override="MUL4"/>
							<item label="8x" override="MUL8"/>
						</combo>
						<combo label="Time" define="BDRV.CTRL3.DRV_CCP_TIMSEL" default="label=0.2 us">
							<item label="0.2 us" override="0.2us"/>
							<item label="0.4 us" override="0.4us"/>
							<item label="0.8 us" override="0.8us"/>
							<item label="1.6 us" override="1.6us"/>
						</combo>
					</checkbox>
				</branch>
				<branch label="Half-Bridge 1">
					<combo label="PWM Source for HS1" define="BDRV.PWMSRCSEL.HS1_SRC_SEL" default="label=CC60">
						<item label="CC60" override="CC60"/>
						<item label="CC61" override="CC61"/>
						<item label="COUT60" override="COUT60"/>
						<item label="COUT61" override="COUT61"/>
					</combo>
					<combo label="PWM Source for LS1" define="BDRV.PWMSRCSEL.LS1_SRC_SEL" default="label=COUT60">
						<item label="CC60" override="CC60"/>
						<item label="CC61" override="CC61"/>
						<item label="COUT60" override="COUT60"/>
						<item label="COUT61" override="COUT61"/>
					</combo>
					<checkbox label="Hold Mode for Sleep Mode" define="PMU.DRV_CTRL.GL1_HOLD_ON" header="pmu_defines.h"/>
					<checkbox label="Cyclic On in Sleep Mode" define="PMU.DRV_CTRL.GL1_CYC_ON" header="pmu_defines.h"/>
					<combo label="Sequencer Mapping" define="BDRV.SEQMAP.HB1_SEQMAP">
						<item label="LS1" override="LS1"/>
						<item label="HS1" override="HS1"/>
					</combo>
					<branch label="Charge Sequencer" >
						<combo label="Mode" define="BDRV.CTRL2.HB1ONSEQCNF">
							<item label="Normal" override="Normal Mode" lockon="BDRV.ONSEQHB1IC.HB1_I2ON=3;BDRV.ONSEQHB1TC_HB1_T2ON_Value=150;BDRV.ONSEQHB1IC.HB1_I3ON=3;BDRV.ONSEQHB1TC_HB1_T3ON_Value=150;BDRV.ONSEQHB1IC.HB1_I4ON=32;BDRV.ONSEQHB1TC_HB1_T4ON_Value=200;BDRV.SEQAFHB1IC.HB1AF_ION=32;BDRV.SEQAFHB1CD_HB1_AF_ON_Value=3250"/>
							<item label="Sequencer" override="Sequencer Mode"/>
						</combo>
						<spinbox label="Step 1 - Current [mA]" define="BDRV.ONSEQHB1IC.HB1_I1ON" default="32"/>
						<spinbox label="Step 1 - Duration [ns]" define="BDRV.ONSEQHB1TC_HB1_T1ON_Value" svd ="0" range="50;12800" step="50" default="1000"/>
						<math define="BDRV.ONSEQHB1TC.HB1_T1ON" visible="false" formula="trunc((BDRV.ONSEQHB1TC_HB1_T1ON_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 2 - Current [mA]" define="BDRV.ONSEQHB1IC.HB1_I2ON" default="3"/>
						<spinbox label="Step 2 - Duration [ns]" define="BDRV.ONSEQHB1TC_HB1_T2ON_Value" svd ="0" range="50;3200" step="50" default="150"/>
						<math define="BDRV.ONSEQHB1TC.HB1_T2ON" visible="false" formula="trunc((BDRV.ONSEQHB1TC_HB1_T2ON_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 3 - Current [mA]" define="BDRV.ONSEQHB1IC.HB1_I3ON" default="3"/>
						<spinbox label="Step 3 - Duration [ns]" define="BDRV.ONSEQHB1TC_HB1_T3ON_Value" svd ="0" range="50;3200" step="50" default="150"/>
						<math define="BDRV.ONSEQHB1TC.HB1_T3ON" visible="false" formula="trunc((BDRV.ONSEQHB1TC_HB1_T3ON_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 4 - Current [mA]" define="BDRV.ONSEQHB1IC.HB1_I4ON" default="32"/>
						<spinbox label="Step 4 - Duration [ns]" define="BDRV.ONSEQHB1TC_HB1_T4ON_Value" svd ="0" range="50;12800" step="50" default="200"/>
						<math define="BDRV.ONSEQHB1TC.HB1_T4ON" visible="false" formula="trunc((BDRV.ONSEQHB1TC_HB1_T4ON_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Clamping - Current [mA]" define="BDRV.IGATECLMPONC.HB1_ICLMPON" default="7"/>
						<spinbox label="Active Free Wheeling - Current [mA]" define="BDRV.SEQAFHB1IC.HB1AF_ION" default="32"/>
						<spinbox label="Active Free Wheeling - Duration [ns]" define="BDRV.SEQAFHB1CD_HB1_AF_ON_Value" svd ="0" range="50;12800" step="50" default="3250"/>
						<math define="BDRV.SEQAFHB1CD.HB1AF_TDICLMPON" visible="false" formula="trunc((BDRV.SEQAFHB1CD_HB1_AF_ON_Value*SCU.BDRV_CLK/1000)-1)"/>
					</branch>
					<branch label="Discharge Sequencer" >
						<combo label="Mode" define="BDRV.CTRL2.HB1OFFSEQCNF">
							<item label="Normal" override="Normal Mode" lockon="BDRV.OFFSEQHB1IC.HB1_I2OFF=0;BDRV.OFFSEQHB1TC_HB1_T2OFF_Value=150;BDRV.OFFSEQHB1IC.HB1_I3OFF=0;BDRV.OFFSEQHB1TC_HB1_T3OFF_Value=150;BDRV.OFFSEQHB1IC.HB1_I4OFF=0;BDRV.OFFSEQHB1TC_HB1_T4OFF_Value=200;BDRV.SEQAFHB1IC.HB1AF_IOFF=32;BDRV.SEQAFHB1CD_HB1_AF_OFF_Value=3250"/>
							<item label="Sequencer" override="Sequencer Mode"/>
						</combo>
						<spinbox label="Step 1 - Current [mA]" define="BDRV.OFFSEQHB1IC.HB1_I1OFF" default="32"/>
						<spinbox label="Step 1 - Duration [ns]" define="BDRV.OFFSEQHB1TC_HB1_T1OFF_Value" svd ="0" range="50;12800" step="50" default="1000"/>
						<math define="BDRV.OFFSEQHB1TC.HB1_T1OFF" visible="false" formula="trunc((BDRV.OFFSEQHB1TC_HB1_T1OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 2 - Current [mA]" define="BDRV.OFFSEQHB1IC.HB1_I2OFF"/>
						<spinbox label="Step 2 - Duration [ns]" define="BDRV.OFFSEQHB1TC_HB1_T2OFF_Value" svd ="0" range="50;3200" step="50" default="150"/>
						<math define="BDRV.OFFSEQHB1TC.HB1_T2OFF" visible="false" formula="trunc((BDRV.OFFSEQHB1TC_HB1_T2OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 3 - Current [mA]" define="BDRV.OFFSEQHB1IC.HB1_I3OFF"/>
						<spinbox label="Step 3 - Duration [ns]" define="BDRV.OFFSEQHB1TC_HB1_T3OFF_Value" svd ="0" range="50;3200" step="50" default="150"/>
						<math define="BDRV.OFFSEQHB1TC.HB1_T3OFF" visible="false" formula="trunc((BDRV.OFFSEQHB1TC_HB1_T3OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 4 - Current [mA]" define="BDRV.OFFSEQHB1IC.HB1_I4OFF"/>
						<spinbox label="Step 4 - Duration [ns]" define="BDRV.OFFSEQHB1TC_HB1_T4OFF_Value" svd ="0" range="50;12800" step="50" default="200"/>
						<math define="BDRV.OFFSEQHB1TC.HB1_T4OFF" visible="false" formula="trunc((BDRV.OFFSEQHB1TC_HB1_T4OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Clamping - Current [mA]" define="BDRV.IGATECLMPOFFC.HB1_ICLMPOFF" default="7"/>
						<spinbox label="Active Free Wheeling - Current [mA]" define="BDRV.SEQAFHB1IC.HB1AF_IOFF" default="32"/>
						<spinbox label="Active Free Wheeling - Duration [ns]" define="BDRV.SEQAFHB1CD_HB1_AF_OFF_Value" svd ="0" range="50;12800" step="50" default="3250"/>
						<math define="BDRV.SEQAFHB1CD.HB1AF_TDICLMPOFF" visible="false" formula="trunc((BDRV.SEQAFHB1CD_HB1_AF_OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
					</branch>
				</branch>
				<branch label="Half-Bridge 2">
					<combo label="PWM Source for HS2" define="BDRV.PWMSRCSEL.HS2_SRC_SEL" default="label=CC61">
						<item label="CC60" override="CC60"/>
						<item label="CC61" override="CC61"/>
						<item label="COUT60" override="COUT60"/>
						<item label="COUT61" override="COUT61"/>
					</combo>
					<combo label="PWM Source for LS2" define="BDRV.PWMSRCSEL.LS2_SRC_SEL" default="label=COUT61">
						<item label="CC60" override="CC60"/>
						<item label="CC61" override="CC61"/>
						<item label="COUT60" override="COUT60"/>
						<item label="COUT61" override="COUT61"/>
					</combo>
					<checkbox label="Hold Mode for Sleep Mode" define="PMU.DRV_CTRL.GL2_HOLD_ON" header="pmu_defines.h"/>
					<checkbox label="Cyclic On in Sleep Mode" define="PMU.DRV_CTRL.GL2_CYC_ON" header="pmu_defines.h"/>
					<combo label="Sequencer Mapping" define="BDRV.SEQMAP.HB2_SEQMAP">
						<item label="LS2" override="LS2"/>
						<item label="HS2" override="HS2"/>
					</combo>
					<branch label="Charge Sequencer" >
						<combo label="Mode" define="BDRV.CTRL2.HB2ONSEQCNF">
							<item label="Normal" override="Normal Mode" lockon="BDRV.ONSEQHB2IC.HB2_I2ON=0;BDRV.ONSEQHB2TC_HB2_T2ON_Value=150;BDRV.ONSEQHB2IC.HB2_I3ON=0;BDRV.ONSEQHB2TC_HB2_T3ON_Value=150;BDRV.ONSEQHB2IC.HB2_I4ON=0;BDRV.ONSEQHB2TC_HB2_T4ON_Value=200;BDRV.SEQAFHB2IC.HB2AF_ION=32;BDRV.SEQAFHB2CD_HB2_AF_ON_Value=3250"/>
							<item label="Sequencer" override="Sequencer Mode"/>
						</combo>
						<spinbox label="Step 1 - Current [mA]" define="BDRV.ONSEQHB2IC.HB2_I1ON" default="32"/>
						<spinbox label="Step 1 - Duration [ns]" define="BDRV.ONSEQHB2TC_HB2_T1ON_Value" svd ="0" range="50;12800" step="50" default="1000"/>
						<math define="BDRV.ONSEQHB2TC.HB2_T1ON" visible="false" formula="trunc((BDRV.ONSEQHB2TC_HB2_T1ON_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 2 - Current [mA]" define="BDRV.ONSEQHB2IC.HB2_I2ON" default="3"/>
						<spinbox label="Step 2 - Duration [ns]" define="BDRV.ONSEQHB2TC_HB2_T2ON_Value" svd ="0" range="50;3200" step="50" default="150"/>
						<math define="BDRV.ONSEQHB2TC.HB2_T2ON" visible="false" formula="trunc((BDRV.ONSEQHB2TC_HB2_T2ON_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 3 - Current [mA]" define="BDRV.ONSEQHB2IC.HB2_I3ON" default="3"/>
						<spinbox label="Step 3 - Duration [ns]" define="BDRV.ONSEQHB2TC_HB2_T3ON_Value" svd ="0" range="50;3200" step="50" default="150"/>
						<math define="BDRV.ONSEQHB2TC.HB2_T3ON" visible="false" formula="trunc((BDRV.ONSEQHB2TC_HB2_T3ON_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 4 - Current [mA]" define="BDRV.ONSEQHB2IC.HB2_I4ON" default="32"/>
						<spinbox label="Step 4 - Duration [ns]" define="BDRV.ONSEQHB2TC_HB2_T4ON_Value" svd ="0" range="50;12800" step="50" default="200"/>
						<math define="BDRV.ONSEQHB2TC.HB2_T4ON" visible="false" formula="trunc((BDRV.ONSEQHB2TC_HB2_T4ON_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Clamping - Current [mA]" define="BDRV.IGATECLMPONC.HB2_ICLMPON" default="7"/>
						<spinbox label="Active Free Wheeling - Current [mA]" define="BDRV.SEQAFHB2IC.HB2AF_ION" default="32"/>
						<spinbox label="Active Free Wheeling - Duration [ns]" define="BDRV.SEQAFHB2CD_HB2_AF_ON_Value" svd ="0" range="50;12800" step="50" default="3250"/>
						<math define="BDRV.SEQAFHB2CD.HB2AF_TDICLMPON" visible="false" formula="trunc((BDRV.SEQAFHB2CD_HB2_AF_ON_Value*SCU.BDRV_CLK/1000)-1)"/>
					</branch>
					<branch label="Discharge Sequencer" >
						<combo label="Mode" define="BDRV.CTRL2.HB2OFFSEQCNF">
							<item label="Normal" override="Normal Mode" lockon="BDRV.OFFSEQHB2IC.HB2_I2OFF=0;BDRV.OFFSEQHB2TC_HB2_T2OFF_Value=150;BDRV.OFFSEQHB2IC.HB2_I3OFF=0;BDRV.OFFSEQHB2TC_HB2_T3OFF_Value=150;BDRV.OFFSEQHB2IC.HB2_I4OFF=0;BDRV.OFFSEQHB2TC_HB2_T4OFF_Value=200;BDRV.SEQAFHB2IC.HB2AF_IOFF=32;BDRV.SEQAFHB2CD_HB2_AF_OFF_Value=3250"/>
							<item label="Sequencer" override="Sequencer Mode"/>
						</combo>
						<spinbox label="Step 1 - Current [mA]" define="BDRV.OFFSEQHB2IC.HB2_I1OFF" default="32"/>
						<spinbox label="Step 1 - Duration [ns]" define="BDRV.OFFSEQHB2TC_HB2_T1OFF_Value" svd ="0" range="50;12800" step="50" default="1000"/>
						<math define="BDRV.OFFSEQHB2TC.HB2_T1OFF" visible="false" formula="trunc((BDRV.OFFSEQHB2TC_HB2_T1OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 2 - Current [mA]" define="BDRV.OFFSEQHB2IC.HB2_I2OFF"/>
						<spinbox label="Step 2 - Duration [ns]" define="BDRV.OFFSEQHB2TC_HB2_T2OFF_Value" svd ="0" range="50;3200" step="50" default="150"/>
						<math define="BDRV.OFFSEQHB2TC.HB2_T2OFF" visible="false" formula="trunc((BDRV.OFFSEQHB2TC_HB2_T2OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 3 - Current [mA]" define="BDRV.OFFSEQHB2IC.HB2_I3OFF"/>
						<spinbox label="Step 3 - Duration [ns]" define="BDRV.OFFSEQHB2TC_HB2_T3OFF_Value" svd ="0" range="50;3200" step="50" default="150"/>
						<math define="BDRV.OFFSEQHB2TC.HB2_T3OFF" visible="false" formula="trunc((BDRV.OFFSEQHB2TC_HB2_T3OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Step 4 - Current [mA]" define="BDRV.OFFSEQHB2IC.HB2_I4OFF"/>
						<spinbox label="Step 4 - Duration [ns]" define="BDRV.OFFSEQHB2TC_HB2_T4OFF_Value" svd ="0" range="50;12800" step="50" default="200"/>
						<math define="BDRV.OFFSEQHB2TC.HB2_T4OFF" visible="false" formula="trunc((BDRV.OFFSEQHB2TC_HB2_T4OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
						<spinbox label="Clamping - Current [mA]" define="BDRV.IGATECLMPOFFC.HB2_ICLMPOFF" default="7"/>
						<spinbox label="Active Free Wheeling - Current [mA]" define="BDRV.SEQAFHB2IC.HB2AF_IOFF" default="32"/>
						<spinbox label="Active Free Wheeling - Duration [ns]" define="BDRV.SEQAFHB2CD_HB2_AF_OFF_Value" svd ="0" range="50;12800" step="50" default="3250"/>
						<math define="BDRV.SEQAFHB2CD.HB2AF_TDICLMPOFF" visible="false" formula="trunc((BDRV.SEQAFHB2CD_HB2_AF_OFF_Value*SCU.BDRV_CLK/1000)-1)"/>
					</branch>
				</branch>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="CCU6" desc="Capture Compare Unit 6" columnwidths="300;400">
			<header file="ccu6_defines.h">
				<branch label="Timer12/13 Configuration">
					<branch label="Timer12">
						<math label="Timer12 Clock" unit="MHz" define="CCU6.T12_CLK" svd="0" formula="SCU.PLL_fPLL/((2^CCU6.TCTR0.T12CLK)*(CCU6.TCTR0.T12PRE?256:1))"/>
						<math label="Max. Period" unit="us" define="CCU6.T12_MAX_PERIOD" svd="0" formula="65535/CCU6.T12_CLK"/>
						<branch label="Clock Prescaler">
							<combo label="Clock Divider" define="CCU6.TCTR0.T12CLK" default="label=div 1">
								<item label="div 1" override="1"/>
								<item label="div 2" override="2"/>
								<item label="div 4" override="4"/>
								<item label="div 8" override="8"/>
								<item label="div 16" override="16"/>
								<item label="div 32" override="32"/>
								<item label="div 64" override="64"/>
								<item label="div 128" override="128"/>
							</combo>
							<checkbox label="additional /256 Clock Prescaler enable" define="CCU6.TCTR0.T12PRE"/>
						</branch>
						<branch label="Period Value">
							<radio define="CCU6.T12_PERIOD_SEL" svd="0" default="label=...as time">
								<radiobutton label="...as clock ticks" uielement="branch">
									<spinbox label="Period Value [ticks]" define="CCU6.T12_TICK[15:0]" svd="0" default="1"/>
								</radiobutton>
								<radiobutton label="...as time" uielement="branch">
									<doublespinbox label="Time [us]" define="CCU6.T12_TIME" svd="0" default="1.00"/>
								</radiobutton>
								<radiobutton label="...as frequency" uielement="branch">
									<spinbox label="Frequency [Hz]" define="CCU6.T12_FREQ" svd="0" default="20000"/>
								</radiobutton>
							</radio>
							<math visible="false" define="CCU6.T12PERIOD[15:0]" svd="0" formula="CCU6.T12_PERIOD_SEL&lt;1?CCU6.T12_TICK[15:0]:CCU6.T12_PERIOD_SEL&lt;2?CCU6.T12_CLK*CCU6.T12_TIME/(1+1*CCU6.TCTR0.CTM):((CCU6.T12_CLK*1e6)/CCU6.T12_FREQ)/(1+1*CCU6.TCTR0.CTM)"/>
							<math label="Period (ticks)" define="CCU6.T12PR.T12PV" formula="CCU6.T12_PERIOD_SEL&lt;1?CCU6.T12_TICK[15:0]-1:CCU6.T12_PERIOD_SEL&lt;2?CCU6.T12_CLK*CCU6.T12_TIME/(1+1*CCU6.TCTR0.CTM)-1:((CCU6.T12_CLK*1e6)/CCU6.T12_FREQ)/(1+1*CCU6.TCTR0.CTM)-1"/>
						</branch>
						<combo label="Operation Mode" define="CCU6.TCTR0.CTM">
							<item label="Edge-aligned" override="Edge-aligned Mode"/>
							<item label="Center-aligned" override="Center-aligned Mode"/>
						</combo>
						<combo label="Single Shot" define="CCU6.TCTR2.T12SSC">
							<item label="disabled" override="Disabled"/>
							<item label="enabled" override="Enabled"/>
						</combo>
						<combo label="Trigger External Run Select" define="CCU6.TCTR2.T12RSEL">
							<item label="disabled" override="Disabled"/>
							<item label="on rising edge on T12HR" override="Rising edge"/>
							<item label="on falling edge on T12HR" override="Falling edge"/>
							<item label="on any edge on T12HR" override="Edge"/>
						</combo>
						<branch label="Dead Time Control">
							<doublespinbox label="Dead Time [us]" define="CCU6.DEADTIME" svd="0" default="0.00"/>
							<math label="Dead Time" unit="ticks" define="CCU6.T12DTC.DTM" formula="CCU6.T12_CLK*CCU6.DEADTIME"/>
							<checkbox label="Channel 0 enabled" define="CCU6.T12DTC.DTE0"/>
							<checkbox label="Channel 1 enabled" define="CCU6.T12DTC.DTE1"/>
							<checkbox label="Channel 2 enabled" define="CCU6.T12DTC.DTE2"/>
						</branch>
					</branch>
					<branch label="Timer13">
						<math label="Timer13 Clock" unit="MHz" define="CCU6.T13_CLK" svd="0" formula="SCU.PLL_fPLL/((2^CCU6.TCTR0.T13CLK)*(CCU6.TCTR0.T13PRE?256:1))"/>
						<math label="Max. Period" unit="us" define="CCU6.T13_MAX_PERIOD" svd="0" formula="65535/CCU6.T13_CLK"/>
						<branch label="Clock Prescaler">
							<combo label="Clock Divider" define="CCU6.TCTR0.T13CLK" default="label=div 1">
								<item label="div 1" override="1"/>
								<item label="div 2" override="2"/>
								<item label="div 4" override="4"/>
								<item label="div 8" override="8"/>
								<item label="div 16" override="16"/>
								<item label="div 32" override="32"/>
								<item label="div 64" override="64"/>
								<item label="div 128" override="128"/>
							</combo>
							<checkbox label="additional /256 Clock Prescaler enable" define="CCU6.TCTR0.T13PRE"/>
						</branch>
						<branch label="Period Value">
							<radio define="CCU6.T13_PERIOD_SEL" svd="0" default="label=...as time">
								<radiobutton label="...as clock ticks" uielement="branch">
									<spinbox label="Period Value [ticks]" define="CCU6.T13_TICK[15:0]" svd="0" default="1"/>
								</radiobutton>
								<radiobutton label="...as time" uielement="branch">
									<doublespinbox label="Time [us]" define="CCU6.T13_TIME" svd="0" default="1.00"/>
								</radiobutton>
								<radiobutton label="...as frequency" uielement="branch">
									<spinbox label="Frequency [Hz]" define="CCU6.T13_FREQ" svd="0" default="20000"/>
								</radiobutton>
							</radio>
							<math visible="false" define="CCU6.T13PERIOD[15:0]" svd="0" formula="CCU6.T13_PERIOD_SEL&lt;1?CCU6.T13_TICK[15:0]:CCU6.T13_PERIOD_SEL&lt;2?CCU6.T13_CLK*CCU6.T13_TIME:(CCU6.T13_CLK*1e6)/CCU6.T13_FREQ"/>
							<math label="Period (ticks)" define="CCU6.T13PR.T13PV" formula="CCU6.T13_PERIOD_SEL&lt;1?CCU6.T13_TICK[15:0]-1:CCU6.T13_PERIOD_SEL&lt;2?CCU6.T13_CLK*CCU6.T13_TIME-1:(CCU6.T13_CLK*1e6)/CCU6.T13_FREQ-1"/>
						</branch>
						<combo label="Single Shot" define="CCU6.TCTR2.T13SSC">
							<item label="disabled" override="No action"/>
							<item label="enabled" override="Enabled"/>
						</combo>
						<combo label="Trigger Select" define="CCU6.TCTR2.T13TEC">
							<item label="no trigger" override="No action"/>
							<item label="T12 Compare Match on Ch0 " override="Channel 0"/>
							<item label="T12 Compare Match on Ch1 " override="Channel 1"/>
							<item label="T12 Compare Match on Ch2 " override="Channel 2"/>
							<item label="T12 Compare Match on any channel" override="Channel 0,1,2"/>
							<item label="T12 Period Match" override="Period-match"/>
							<item label="T12 Zero Match" override="Zero-match"/>
							<item label="any edge on CCPOSx inputs" override="CCPOSx"/>
						</combo>
						<combo label="Trigger Event Direction" define="CCU6.TCTR2.T13TED">
							<item label="no action" override="No action"/>
							<item label="T12 counting up" override="Up"/>
							<item label="T12 counting down" override="Down"/>
							<item label="T12 any counting direction" override="Independent"/>
						</combo>
						<combo label="Trigger External Run Select" define="CCU6.TCTR2.T13RSEL">
							<item label="disabled" override="Disabled"/>
							<item label="on rising edge on T13HR" override="Rising edge"/>
							<item label="on falling edge on T13HR" override="Falling edge"/>
							<item label="on any edge on T13HR" override="Edge"/>
						</combo>
					</branch>
				</branch>
				<branch label="Channel Configuration">
					<branch label="Channel 0">
						<branch label="Compare Value">
							<radio define="CCU6.CH0_CMP_SEL" svd="0">
								<radiobutton label="...as timer ticks" lockon="CCU6.CH0_CMP_TIME=0;CCU6.CH0_CMP_DC=0" uielement="branch">
									<spinbox label="Compare Value [ticks]" define="CCU6.CH0_CMP_TICK" svd="0" range="0;0xFFFF"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="CCU6.CH0_CMP_TICK=0;CCU6.CH0_CMP_DC=0" uielement="branch">
									<doublespinbox label="Time [us]" define="CCU6.CH0_CMP_TIME" svd="0"/>
								</radiobutton>
								<radiobutton label="...as duty cycle" lockon="CCU6.CH0_CMP_TICK=0;CCU6.CH0_CMP_TIME=0" uielement="branch">
									<spinbox label="Duty Cycle [%]" define="CCU6.CH0_CMP_DC" svd="0"/>
								</radiobutton>
							</radio>
							<math label="Compare Value" unit="ticks" define="CCU6.CC60SR.CCS" formula="CCU6.CH0_CMP_TICK+(CCU6.T12_CLK*CCU6.CH0_CMP_TIME)+(CCU6.T12PR.T12PV*CCU6.CH0_CMP_DC/100)"/>
						</branch>
						<combo label="Capture/Compare Mode" define="CCU6.T12MSEL[3:0]" svd="0">
							<item label="(0b0000) Compare outputs disabled"/>
							<item label="(0b0001) Compare output on CC60"/>
							<item label="(0b0010) Compare output on COUT60"/>
							<item label="(0b0011) Compare output on CC60/COUT60"/>
							<item label="(0b0100) Capture T12 into CC60R/COUT60R on input CC60"/>
							<item label="(0b0101) CC60SR -> CC60R on rising edge CC60 input, T12 capture"/>
							<item label="(0b0110) CC60SR -> CC60R on falling edge CC60 input, T12 capture"/>
							<item label="(0b0111) CC60SR -> CC60R on any edge CC60 input, T12 capture"/>
							<item label="(0b1000) Hall-Sensor Mode"/>
							<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
							<item label="(0b1010) T12 -> CC60R on rising edge CC60 input, T12 -> CC60SR on falling edge CCPOS60"/>
							<item label="(0b1011) T12 -> CC60R on falling edge CC60 input, T12 -> CC60SR on rising edge CCPOS60"/>
							<item label="(0b1100) T12 -> CC60R on rising edge CC60 input, T12 -> CC60SR on rising edge CCPOS60"/>
							<item label="(0b1101) T12 -> CC60R on falling edge CC60 input, T12 -> CC60SR on falling edge CCPOS60"/>
							<item label="(0b1110) T12 -> CC60R on any edge CC60 input, T12 -> CC60SR on any edge CCPOS60"/>
						</combo>
						<branch label="Passive State">
							<branch label="CC60">
								<combo label="Passive State Select" define="CCU6.CMPSTAT.CC60PS" default="label=Passive State before Compare">
									<item label="Passive State before Compare" override="Zero"/>
									<item label="Passive State after Compare" override="One"/>
								</combo>
								<combo label="Passive State Level" define="CCU6.PSLR.PSL[0]" default="label=Low">
									<item label="Low"/>
									<item label="High"/>
								</combo>
							</branch>
							<branch label="COUT60">
								<combo label="Passive State Select" define="CCU6.CMPSTAT.COUT60PS" default="label=Passive State after Compare">
									<item label="Passive State before Compare" override="Zero"/>
									<item label="Passive State after Compare" override="One"/>
								</combo>
								<combo label="Passive State Level" define="CCU6.PSLR.PSL[1]" default="label=Low">
									<item label="Low"/>
									<item label="High"/>
								</combo>
							</branch>
						</branch>
						<branch label="Modulation">
							<checkbox label="Timer12 modulates CC60" define="CCU6.MODCTR.T12MODEN[0]"/>
							<checkbox label="Timer12 modulates COUT60" define="CCU6.MODCTR.T12MODEN[1]"/>
							<checkbox label="Timer13 modulates CC60" define="CCU6.MODCTR.T13MODEN[0]"/>
							<checkbox label="Timer13 modulates COUT60" define="CCU6.MODCTR.T13MODEN[1]"/>
						</branch>
					</branch>
					<branch label="Channel 1">
						<branch label="Compare Value">
							<radio define="CCU6.CH1_CMP_SEL" svd="0">
								<radiobutton label="...as timer ticks" lockon="CCU6.CH1_CMP_TIME=0;CCU6.CH1_CMP_DC=0" uielement="branch">
									<spinbox label="Compare Value [ticks]" define="CCU6.CH1_CMP_TICK" svd="0" range="0;0xFFFF"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="CCU6.CH1_CMP_TICK=0;CCU6.CH1_CMP_DC=0" uielement="branch">
									<doublespinbox label="Time [us]" define="CCU6.CH1_CMP_TIME" svd="0"/>
								</radiobutton>
								<radiobutton label="...as duty cycle" lockon="CCU6.CH1_CMP_TICK=0;CCU6.CH1_CMP_TIME=0" uielement="branch">
									<spinbox label="Duty Cycle [%]" define="CCU6.CH1_CMP_DC" svd="0"/>
								</radiobutton>
							</radio>
							<math label="Compare Value" unit="ticks" define="CCU6.CC61SR.CCS" formula="CCU6.CH1_CMP_TICK+(CCU6.T12_CLK*CCU6.CH1_CMP_TIME)+(CCU6.T12PR.T12PV*CCU6.CH1_CMP_DC/100)"/>
						</branch>
						<combo label="Capture/Compare Mode" define="CCU6.T12MSEL[7:4]" svd="0">
							<item label="(0b0000) Compare outputs disabled"/>
							<item label="(0b0001) Compare output on CC61"/>
							<item label="(0b0010) Compare output on COUT61"/>
							<item label="(0b0011) Compare output on CC61/COUT61"/>
							<item label="(0b0100) Capture T12 into CC61R/COUT61R on input CC61"/>
							<item label="(0b0101) CC61SR -> CC61R on rising edge CC61 input, T12 capture"/>
							<item label="(0b0110) CC61SR -> CC61R on falling edge CC61 input, T12 capture"/>
							<item label="(0b0111) CC61SR -> CC61R on any edge CC61 input, T12 capture"/>
							<item label="(0b1000) Hall-Sensor Mode"/>
							<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
							<item label="(0b1010) T12 -> CC61R on rising edge CC61 input, T12 -> CC61SR on falling edge CCPOS61"/>
							<item label="(0b1011) T12 -> CC61R on falling edge CC61 input, T12 -> CC61SR on rising edge CCPOS61"/>
							<item label="(0b1100) T12 -> CC61R on rising edge CC61 input, T12 -> CC61SR on rising edge CCPOS61"/>
							<item label="(0b1101) T12 -> CC61R on falling edge CC61 input, T12 -> CC61SR on falling edge CCPOS61"/>
							<item label="(0b1110) T12 -> CC61R on any edge CC61 input, T12 -> CC61SR on any edge CCPOS61"/>
						</combo>
						<branch label="Passive State">
							<branch label="CC61">
								<combo label="Passive State Select" define="CCU6.CMPSTAT.CC61PS" default="label=Passive State before Compare">
									<item label="Passive State before Compare" override="Zero"/>
									<item label="Passive State after Compare" override="One"/>
								</combo>
								<combo label="Passive State Level" define="CCU6.PSLR.PSL[2]" default="label=Low">
									<item label="Low"/>
									<item label="High"/>
								</combo>
							</branch>
							<branch label="COUT61">
								<combo label="Passive State Select" define="CCU6.CMPSTAT.COUT61PS" default="label=Passive State after Compare">
									<item label="Passive State before Compare" override="Zero"/>
									<item label="Passive State after Compare" override="One"/>
								</combo>
								<combo label="Passive State Level" define="CCU6.PSLR.PSL[3]" default="label=Low">
									<item label="Low"/>
									<item label="High"/>
								</combo>
							</branch>
						</branch>
						<branch label="Modulation">
							<checkbox label="Timer12 modulates CC61" define="CCU6.MODCTR.T12MODEN[2]"/>
							<checkbox label="Timer12 modulates COUT61" define="CCU6.MODCTR.T12MODEN[3]"/>
							<checkbox label="Timer13 modulates CC61" define="CCU6.MODCTR.T13MODEN[2]"/>
							<checkbox label="Timer13 modulates COUT61" define="CCU6.MODCTR.T13MODEN[3]"/>
						</branch>
					</branch>
					<branch label="Channel 2">
						<branch label="Compare Value">
							<radio define="CCU6.CH2_CMP_SEL" svd="0">
								<radiobutton label="...as timer ticks" lockon="CCU6.CH2_CMP_TIME=0;CCU6.CH2_CMP_DC=0" uielement="branch">
									<spinbox label="Compare Value [ticks]" define="CCU6.CH2_CMP_TICK" svd="0" range="0;0xFFFF"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="CCU6.CH2_CMP_TICK=0;CCU6.CH2_CMP_DC=0" uielement="branch">
									<doublespinbox label="Time [us]" define="CCU6.CH2_CMP_TIME" svd="0"/>
								</radiobutton>
								<radiobutton label="...as duty cycle" lockon="CCU6.CH2_CMP_TICK=0;CCU6.CH2_CMP_TIME=0" uielement="branch">
									<spinbox label="Duty Cycle [%]" define="CCU6.CH2_CMP_DC" svd="0"/>
								</radiobutton>
							</radio>
							<math label="Compare Value" unit="ticks" define="CCU6.CC62SR.CCS" formula="CCU6.CH2_CMP_TICK+(CCU6.T12_CLK*CCU6.CH2_CMP_TIME)+(CCU6.T12PR.T12PV*CCU6.CH2_CMP_DC/100)"/>
						</branch>
						<combo label="Capture/Compare Mode" define="CCU6.T12MSEL[11:8]" svd="0">
							<item label="(0b0000) Compare outputs disabled"/>
							<item label="(0b0001) Compare output on CC62"/>
							<item label="(0b0010) Compare output on COUT62"/>
							<item label="(0b0011) Compare output on CC62/COUT62"/>
							<item label="(0b0100) Capture T12 into CC62R/COUT62R on input CC62"/>
							<item label="(0b0101) CC62SR -> CC62R on rising edge CC62 input, T12 capture"/>
							<item label="(0b0110) CC62SR -> CC62R on falling edge CC62 input, T12 capture"/>
							<item label="(0b0111) CC62SR -> CC62R on any edge CC62 input, T12 capture"/>
							<item label="(0b1000) Hall-Sensor Mode"/>
							<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
							<item label="(0b1010) T12 -> CC62R on rising edge CC62 input, T12 -> CC62SR on falling edge CCPOS62"/>
							<item label="(0b1011) T12 -> CC62R on falling edge CC62 input, T12 -> CC62SR on rising edge CCPOS62"/>
							<item label="(0b1100) T12 -> CC62R on rising edge CC62 input, T12 -> CC62SR on rising edge CCPOS62"/>
							<item label="(0b1101) T12 -> CC62R on falling edge CC62 input, T12 -> CC62SR on falling edge CCPOS62"/>
							<item label="(0b1110) T12 -> CC62R on any edge CC62 input, T12 -> CC62SR on any edge CCPOS62"/>
						</combo>
						<branch label="Passive State">
							<branch label="CC62">
								<combo label="Passive State Select" define="CCU6.CMPSTAT.CC62PS" default="label=Passive State before Compare">
									<item label="Passive State before Compare" override="Zero"/>
									<item label="Passive State after Compare" override="One"/>
								</combo>
								<combo label="Passive State Level" define="CCU6.PSLR.PSL[4]" default="label=Low">
									<item label="Low"/>
									<item label="High"/>
								</combo>
							</branch>
							<branch label="COUT62">
								<combo label="Passive State Select" define="CCU6.CMPSTAT.COUT62PS" default="label=Passive State after Compare">
									<item label="Passive State before Compare" override="Zero"/>
									<item label="Passive State after Compare" override="One"/>
								</combo>
								<combo label="Passive State Level" define="CCU6.PSLR.PSL[5]" default="label=Low">
									<item label="Low"/>
									<item label="High"/>
								</combo>
							</branch>
						</branch>
						<branch label="Modulation">
							<checkbox label="Timer12 modulates CC62" define="CCU6.MODCTR.T12MODEN[4]"/>
							<checkbox label="Timer12 modulates COUT62" define="CCU6.MODCTR.T12MODEN[5]"/>
							<checkbox label="Timer13 modulates CC62" define="CCU6.MODCTR.T13MODEN[4]"/>
							<checkbox label="Timer13 modulates COUT62" define="CCU6.MODCTR.T13MODEN[5]"/>
						</branch>
					</branch>
					<branch label="Channel 3">
						<branch label="Compare Value">
							<radio define="CCU6.CH3_CMP_SEL" svd="0">
								<radiobutton label="...as timer ticks" lockon="CCU6.CH3_CMP_TIME=0;CCU6.CH3_CMP_DC=0" uielement="branch">
									<spinbox label="Compare Value [ticks]" define="CCU6.CH3_CMP_TICK" svd="0" range="0;0xFFFF"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="CCU6.CH3_CMP_TICK=0;CCU6.CH3_CMP_DC=0" uielement="branch">
									<doublespinbox label="Time [us]" define="CCU6.CH3_CMP_TIME" svd="0"/>
								</radiobutton>
								<radiobutton label="...as duty cycle" lockon="CCU6.CH3_CMP_TICK=0;CCU6.CH3_CMP_TIME=0" uielement="branch">
									<spinbox label="Duty Cycle [%]" define="CCU6.CH3_CMP_DC" svd="0"/>
								</radiobutton>
							</radio>
							<math label="Compare Value" unit="ticks" define="CCU6.CC63SR.CCS" formula="CCU6.CH3_CMP_TICK+(CCU6.T13_CLK*CCU6.CH3_CMP_TIME)+(CCU6.T13PR.T13PV*CCU6.CH3_CMP_DC/100)"/>
						</branch>
						<branch label="Passive State - COUT63">
							<combo label="Passive State Select" define="CCU6.CMPSTAT.COUT63PS">
								<item label="Passive State before Compare" override="Zero"/>
								<item label="Passive State after Compare" override="One"/>
							</combo>
							<combo label="Passive State Level" define="CCU6.PSLR.PSL63">
								<item label="Low" override="Level 0"/>
								<item label="High" override="Level 1"/>
							</combo>
						</branch>
						<checkbox label="Invert COUT63" define="CCU6.CMPSTAT.T13IM"/>
						<branch label="Modulation">
							<checkbox label="Timer13 modulates COUT63" define="CCU6.MODCTR.ECT13O"/>
						</branch>
					</branch>
				</branch>
				<branch label="HALL Configuration">
					<combo label="HALL Synchronization" define="CCU6.T12MSEL.HSYNC">
						<item label="(0b000) any edge on CCPOS0(1,2)" override="Any"/>
						<item label="(0b001) T13 compare match" override="T13 compare-match"/>
						<item label="(0b010) T13 period match" override="T13 period-match"/>
						<item label="(0b011) HALL sampling switched off" override="Hall"/>
						<item label="(0b100) T12 period match (counting up)" override="T12 period-match"/>
						<item label="(0b101) T12 one-match (counting down)" override="T12 one-match"/>
						<item label="(0b110) T12 compare match on Channel 0 (counting up)" override="T12 compare-match UP"/>
						<item label="(0b111) T12 compare match on Channel 0 (counting down)" override="T12 compare-match DOWN"/>
					</combo>
					<checkbox label="Delay Bypass" define="CCU6.T12MSEL.DBYP"/>
					<checkbox label="Enable Idle Mode in case of Wrong HALL Event" define="CCU6.IEN.ENIDLE"/>
				</branch>
				<branch label="Interrupt Configuration">
					<branch label="Interrupt Enable">
						<checkbox label="Capture, Compare-Match Rising Edge for Channel 0 " define="CCU6.CH0_CM_R_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC60R"/>
							<edit label="Call Back" define="CCU6.CH0_CM_R_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Capture, Compare-Match Falling Edge for Channel 0" define="CCU6.CH0_CM_F_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC60F"/>
							<edit label="Call Back" define="CCU6.CH0_CM_F_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Capture, Compare-Match Rising Edge for Channel 1 " define="CCU6.CH1_CM_R_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC61R"/>
							<edit label="Call Back" define="CCU6.CH1_CM_R_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Capture, Compare-Match Falling Edge for Channel 1" define="CCU6.CH1_CM_F_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC61F"/>
							<edit label="Call Back" define="CCU6.CH1_CM_F_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Capture, Compare-Match Rising Edge for Channel 2 " define="CCU6.CH2_CM_R_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC62R"/>
							<edit label="Call Back" define="CCU6.CH2_CM_R_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Capture, Compare-Match Falling Edge for Channel 2" define="CCU6.CH2_CM_F_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC62F"/>
							<edit label="Call Back" define="CCU6.CH2_CM_F_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Timer12 One-Match" define="CCU6.T12_OM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENT12OM"/>
							<edit label="Call Back" define="CCU6.T12_OM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Timer12 Period-Match" define="CCU6.T12_PM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENT12PM"/>
							<edit label="Call Back" define="CCU6.T12_PM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Timer13 Compare-Match" define="CCU6.T13_CM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENT13CM"/>
							<edit label="Call Back" define="CCU6.T13_CM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Timer13 Period-Match" define="CCU6.T13_PM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENT13PM"/>
							<edit label="Call Back" define="CCU6.T13_PM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Trap Flag" define="CCU6.TRAP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENTRPF"/>
							<edit label="Call Back" define="CCU6.TRAP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Correct Hall Event" define="CCU6.CHE_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENCHE"/>
							<edit label="Call Back" define="CCU6.CORRECT_HALL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Wrong Hall Event" define="CCU6.WHE_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENWHE"/>
							<edit label="Call Back" define="CCU6.WRONG_HALL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Multi-Channel Mode Shadow Transfer" define="CCU6.MCM_STR_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
							<checkbox label="Enable Interrupt" define="CCU6.IEN.ENSTR"/>
							<edit label="Call Back" define="CCU6.MCM_STR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Interrupt Node Selection">
						<combo label="Channel 0" define="CCU6.INP.INPCC60">
							<item label="SR0" override="SR0"/>
							<item label="SR1" override="SR1"/>
							<item label="SR2" override="SR2"/>
							<item label="SR3" override="SR3"/>
						</combo>
						<combo label="Channel 1" define="CCU6.INP.INPCC61">
							<item label="SR0" override="SR0"/>
							<item label="SR1" override="SR1"/>
							<item label="SR2" override="SR2"/>
							<item label="SR3" override="SR3"/>
						</combo>
						<combo label="Channel 2" define="CCU6.INP.INPCC62">
							<item label="SR0" override="SR0"/>
							<item label="SR1" override="SR1"/>
							<item label="SR2" override="SR2"/>
							<item label="SR3" override="SR3"/>
						</combo>
						<combo label="Correct Hall Event" define="CCU6.INP.INPCHE">
							<item label="SR0" override="SR0"/>
							<item label="SR1" override="SR1"/>
							<item label="SR2" override="SR2"/>
							<item label="SR3" override="SR3"/>
						</combo>
						<combo label="Error" define="CCU6.INP.INPERR">
							<item label="SR0" override="SR0"/>
							<item label="SR1" override="SR1"/>
							<item label="SR2" override="SR2"/>
							<item label="SR3" override="SR3"/>
						</combo>
						<combo label="Timer 12" define="CCU6.INP.INPT12">
							<item label="SR0" override="SR0"/>
							<item label="SR1" override="SR1"/>
							<item label="SR2" override="SR2"/>
							<item label="SR3" override="SR3"/>
						</combo>
						<combo label="Timer 13" define="CCU6.INP.INPT13">
							<item label="SR0" override="SR0"/>
							<item label="SR1" override="SR1"/>
							<item label="SR2" override="SR2"/>
							<item label="SR3" override="SR3"/>
						</combo>
					</branch>
					<branch label="Interrupt Node Enable">
						<checkbox label="SR0 enable" define="CCU6.NVIC[0]" svd="0" default="1" lockon="CPU.NVIC_ISER.Int_CCU6SR0=1"/>
						<checkbox label="SR1 enable" define="CCU6.NVIC[1]" svd="0" lockon="CPU.NVIC_ISER.Int_CCU6SR1=1"/>
						<checkbox label="SR2 enable" define="CCU6.NVIC[2]" svd="0" lockon="CPU.NVIC_ISER.Int_CCU6SR2=1"/>
						<checkbox label="SR3 enable" define="CCU6.NVIC[3]" svd="0" lockon="CPU.NVIC_ISER.Int_CCU6SR3=1"/>
					</branch>
				</branch>
				<checkbox label="Multi-Channel Configuration" define="CCU6.MODCTR.MCMEN" uielement="branch">
					<combo label="Switching Selection" define="CCU6.MCMCTR.SWSEL">
						<item label="no action" override="No request"/>
						<item label="correct HALL pattern detected" override="Correct pattern"/>
						<item label="Timer13 period match" override="T13 period-match"/>
						<item label="Timer12 one match" override="T12 one-match"/>
						<item label="Timer12 Channel 1 compare match" override="T12 channel1 compare-match"/>
						<item label="Timer12 period match" override="T12 period-match"/>
					</combo>
					<combo label="Switching Synchronization" define="CCU6.MCMCTR.SWSYN">
						<item label="direct trigger of shadow transfer" override="Direct"/>
						<item label="Timer13 zero match triggers shadow transfer" override="T13 zero-match"/>
						<item label="Timer12 zero match triggers shadow transfer" override="T12 zero-match"/>
					</combo>
					<checkbox label="Shadow transfer for Timer12 up counting" define="CCU6.MCMCTR.STE12U"/>
					<checkbox label="Shadow transfer for Timer12 down counting" define="CCU6.MCMCTR.STE12D"/>
					<checkbox label="Shadow transfer for Timer13 up counting" define="CCU6.MCMCTR.STE13U"/>
				</checkbox>
				<branch label="Trap Control">
					<combo label="Trap Mode" define="CCU6.TRPCTR.TRPM10">
						<item label="trap state left on Timer12 zero match" override="T12 zero-match"/>
						<item label="trap state left on Timer13 zero match" override="T13 zero-match"/>
						<item label="trap state left immediately" override="Immediately"/>
					</combo>
					<combo label="Trap Mode 2" define="CCU6.TRPCTR.TRPM2">
						<item label="trap state left on /CTRAP input inactive" override="Hardware reset"/>
						<item label="trap state left on TRPF reset by SW and /CTRAP input inactive" override="Software reset"/>
					</combo>
					<checkbox label="Trap on CC60" define="CCU6.TRPCTR.TRPEN[0]"/>
					<checkbox label="Trap on COUT60" define="CCU6.TRPCTR.TRPEN[1]"/>
					<checkbox label="Trap on CC61" define="CCU6.TRPCTR.TRPEN[2]"/>
					<checkbox label="Trap on COUT61" define="CCU6.TRPCTR.TRPEN[3]"/>
					<checkbox label="Trap on CC62" define="CCU6.TRPCTR.TRPEN[4]"/>
					<checkbox label="Trap on COUT62" define="CCU6.TRPCTR.TRPEN[5]"/>
					<checkbox label="Trap for Timer13" define="CCU6.TRPCTR.TRPEN13"/>
					<checkbox label="Trap Pin (CTRAP)" define="CCU6.TRPCTR.TRPPEN"/>
				</branch>
				<branch label="Pin Select">
					<branch label="Inputs">
						<branch label="Channels">
							<checkbox label="CC60" define="CCU6.ISCC60" svd="0" uielement="branch">
								<combo label="CC60" define="CCU6.PISEL0.ISCC60" default="label=CC60_0 (P0.4)">
									<item label="CC60_0 (P0.4)" lockon="PORT.P0_DIR.PP4.label=Input" override="CC60_0"/>
									<item label="CC60_1 (P2.3)" override="CC60_1"/>
								</combo>
							</checkbox>
							<checkbox label="CC61" define="CCU6.ISCC61" svd="0" uielement="branch">
								<combo label="CC61" define="CCU6.PISEL0.ISCC61" default="label=CC61_0 (P1.0)">
									<item label="CC61_0 (P1.0)" lockon="PORT.P1_DIR.PP0.label=Input" override="CC61_0"/>
									<item label="CC61_1 (P2.1)" override="CC61_1"/>
								</combo>
							</checkbox>
							<checkbox label="CC62" define="CCU6.ISCC62" svd="0" uielement="branch">
								<combo label="CC62" define="CCU6.PISEL0.ISCC62" default="label=CC62_0 (P0.1)">
									<item label="CC62_0 (P0.1)" lockon="PORT.P0_DIR.PP1.label=Input" override="CC62_0"/>
									<item label="CC62_1 (P2.7)" override="CC62_1"/>
								</combo>
							</checkbox>
							<checkbox label="CTRAP" define="CCU6.ISTRP" svd="0" uielement="branch">
								<combo label="CTRAP" define="CCU6.PISEL0.ISTRP" default="label=CTRAP_0 (P0.2)">
									<item label="CTRAP_0 (P0.2)" lockon="PORT.P0_DIR.PP2.label=Input" override="CTRAP_0"/>
									<item label="CTRAP_1 (P2.3)" override="CTRAP_1"/>
									<item label="CTRAP_2 (P2.2)" override="CTRAP_2"/>
									<item hide="DU1_UP_STS"/>
								</combo>
							</checkbox>
							<checkbox label="CCPOS0" define="CCU6.ISPOS0" svd="0" uielement="branch">
								<combo label="CCPOS0" define="CCU6.PISEL0.ISPOS0" default="label=CCPOS0_0 (P2.1)">
									<item label="CCPOS0_0 (P2.1)" override="CCPOS0_0"/>
									<item label="CCPOS0_1 (P0.3)" lockon="PORT.P0_DIR.PP3.label=Input" override="CCPOS0_1"/>
									<item label="CCPOS0_2 (P2.0)" override="CCPOS0_2"/>
								</combo>
							</checkbox>
							<checkbox label="CCPOS1" define="CCU6.ISPOS1" svd="0" uielement="branch">
								<combo label="CCPOS1" define="CCU6.PISEL0.ISPOS1" default="label=CCPOS1_0 (P2.3)">
									<item label="CCPOS1_0 (P2.3)" override="CCPOS1_0"/>
									<item label="CCPOS1_1 (P0.4)" lockon="PORT.P0_DIR.PP4.label=Input" override="CCPOS1_1"/>
									<item label="CCPOS1_2 (P1.4)" lockon="PORT.P1_DIR.PP4.label=Input" override="CCPOS1_2"/> 
								</combo>
							</checkbox>
							<checkbox label="CCPOS2" define="CCU6.ISPOS2" svd="0" uielement="branch">
								<combo label="CCPOS2" define="CCU6.PISEL0.ISPOS2" default="label=CCPOS2_0 (P2.7)">
									<item label="CCPOS2_0 (P2.7)" override="CCPOS2_0"/>
									<item label="CCPOS2_1 (P0.5)" lockon="PORT.P0_DIR.PP5.label=Input" override="CCPOS2_1"/>
									<item label="CCPOS2_2 (P1.2)" lockon="PORT.P1_DIR.PP2.label=Input" override="CCPOS2_2"/>
								</combo>
							</checkbox>
						</branch>
						<branch label="Timers">
							<checkbox label="T12HR" define="CCU6.IST12HR" svd="0" uielement="branch">
								<combo label="T12HR" define="CCU6.PISEL0.IST12HR" default="label=T12HR_0 (P0.0)">
									<item label="T12HR_0 (P0.0)" lockon="PORT.P0_DIR.PP0.label=Input" override="T12HRA"/>
									<item label="T12HR_1 (P2.1)" override="T12HRB"/>
									<item label="T12HR_2 (P2.2)" override="T12HRC"/>
									<item hide="T12HRD"/>
								</combo>
							</checkbox>
							<checkbox label="T13HR" define="CCU6.IST13HR" svd="0" uielement="branch">
								<combo label="T13HR" define="CCU6.PISEL2.IST13HR" default="label=T13HR_0 (P0.1)">
									<item label="T13HR_0 (P0.1)" lockon="PORT.P0_DIR.PP1.label=Input" override="T13HRA"/>
									<item label="T13HR_1 (P2.7)" override="T13HRB"/>
									<item label="T13HR_2 (P2.0)" override="T13HRC"/>
									<item hide="T13HRD"/>
								</combo>
							</checkbox>
							<combo label="Timer12 Counting Input" define="CCU6.PISEL2.ISCNT12">
								<item label="T12 prescaler" override="T12 prescaler"/>
								<item label="TCTR4.T12CNT" override="TCTR4.T12CNT"/>
								<item label="rising edge on T12HR" override="Rising edge"/>
								<item label="falling edge on T12HR" override="Falling edge"/>
							</combo>
							<combo label="Timer13 Counting Inputs" define="CCU6.PISEL2.ISCNT13">
								<item label="T13 prescaler" override="T13 prescaler"/>
								<item label="TCTR4.T13CNT" override="TCTR4.T13CNT"/>
								<item label="rising edge on T13HR" override="Rising edge"/>
								<item label="falling edge on T13HR" override="Falling Edge"/>
							</combo>
						</branch>
					</branch>
					<branch label="Outputs">
						<branch label="Channels">
							<combo label="CC60" define="CCU6.TEMP_CC60_OUT" svd="0" default="label=none">
								<item label="none"/>
								<item label="CC60_0 (P0.4)" lockon="PORT.P0_DIR.PP4.label=Output;PORT.P0_4_ALT[1:0].label=CC60_0"/>
							</combo>
							<combo label="COUT60" define="CCU6.TEMP_COUT60_OUT" svd="0" default="label=none">
								<item label="none"/>
								<item label="COUT60_0 (P0.5)" lockon="PORT.P0_DIR.PP5.label=Output;PORT.P0_5_ALT[1:0].label=COUT60_0"/>
							</combo>
							<combo label="CC61" define="CCU6.TEMP_CC61_OUT" svd="0" default="label=none">
								<item label="none"/>
								<item label="CC61_0 (P1.0)" lockon="PORT.P1_DIR.PP0.label=Output;PORT.P1_0_ALT[1:0].label=CC61_0"/>
							</combo>
							<combo label="COUT61" define="CCU6.TEMP_COUT61_OUT" svd="0" default="label=none">
								<item label="none"/>
								<item label="COUT61_0 (P1.1)" lockon="PORT.P1_DIR.PP1.label=Output;PORT.P1_1_ALT[1:0].label=COUT61_0"/>
							</combo>
							<combo label="CC62" define="CCU6.TEMP_CC62_OUT" svd="0" default="label=none">
								<item label="none"/>
								<item label="CC62_0 (P0.1)" lockon="PORT.P0_DIR.PP1.label=Output;PORT.P0_1_ALT[1:0].label=CC62_0"/>
							</combo>
							<combo label="COUT62" define="CCU6.TEMP_COUT62_OUT" svd="0" default="label=none">
								<item label="none"/>
								<item label="COUT62_0 (P1.4)" lockon="PORT.P1_DIR.PP4.label=Output;PORT.P1_4_ALT[1:0].label=COUT62_0"/>
							</combo>
							<combo label="COUT63" define="CCU6.TEMP_COUT63_OUT" svd="0" default="label=none">
								<item label="none"/>
								<item label="COUT63_0 (P1.2)" lockon="PORT.P1_DIR.PP2.label=Output;PORT.P1_2_ALT[1:0].label=COUT63_0"/>
							</combo>
						</branch>
					</branch>
				</branch>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="GPT12E" desc="General Purpose Timer 12E" columnwidths="300;250">
			<header file="gpt12e_defines.h">
				<branch label="GPT1">
					<branch label="Clock">
						<combo label="Block Prescaler" define="GPT12E.T3CON.BPS1" default="label=fGPT / 8">
							<item label="fGPT / 8" override="8"/>
							<item label="fGPT / 4" override="4"/>
							<item label="fGPT / 32" override="32"/>
							<item label="fGPT / 16" override="16"/>
						</combo>
						<math label="GPT1 Clock" unit="MHz" define="GPT1.BASE_CLK" svd="0" formula="SCU.PLL_fPLL/(4*(2^(GPT12E.T3CON.BPS1.^1)))"/>
					</branch>
					<branch label="Aux. Timer2">
						<math label="GPT1 Timer2 Clock" unit="MHz" define="GPT1.T2_CLK" svd="0" formula="GPT12E.T2CON.T2M&lt;1?(GPT1.BASE_CLK/2^(GPT12E.T2CON_T2I_TIMER)):(GPT12E.T2CON.T2M&lt;2?GPT1.BASE_CLK:(GPT12E.T2CON.T2M&lt;3?(GPT1.BASE_CLK/2^(GPT12E.T2CON_T2I_GATED_TIMER_LOW)):(GPT12E.T2CON.T2M&lt;4?(GPT1.BASE_CLK/2^(GPT12E.T2CON_T2I_GATED_TIMER_HIGH)):GPT1.BASE_CLK)))"/>
						<branch label="Mode Select">
							<radio define="GPT12E.T2CON.T2M">
								<radiobutton label="Timer Mode" value="0" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T2CON_T2I_TIMER" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Counter Mode" value="1" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T2CON_T2I_COUNTER" svd="0">
										<item label="None. Counter T2 is disabled" value="0"/>
										<item label="Rising edge on T2IN" value="1"/>
										<item label="Falling edge on T2IN" value="2"/>
										<item label="Rising or Falling edge on T2IN" value="3"/>
										<item label="Rising edge on T3OTL" value="5"/>
										<item label="Falling edge on T3OTL" value="6"/>
										<item label="Rising or Falling edge on T3OTL" value="7"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T2CON_T2I_GATED_TIMER_LOW" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T2CON_T2I_GATED_TIMER_HIGH" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Reload Mode" value="4" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T2CON_T2I_RELOAD" svd="0">
										<item label="None. Counter T2 is disabled" value="0"/>
										<item label="Rising edge on T2IN" value="1"/>
										<item label="Falling edge on T2IN" value="2"/>
										<item label="Rising or Falling edge on T2IN" value="3"/>
										<item label="Rising edge on T3OTL" value="5"/>
										<item label="Falling edge on T3OTL" value="6"/>
										<item label="Rising or Falling edge on T3OTL" value="7"/>
									</combo>
								</radiobutton>
								<radiobutton label="Capture Mode" value="5" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T2CON_T2I_CAPTURE" svd="0">
										<item label="None. Counter T2 is disabled" value="0"/>
										<item label="Rising edge on T2IN" value="1"/>
										<item label="Falling edge on T2IN" value="2"/>
										<item label="Rising or Falling edge on T2IN" value="3"/>
										<item label="Rising edge on T3OTL" value="5"/>
										<item label="Falling edge on T3OTL" value="6"/>
										<item label="Rising or Falling edge on T3OTL" value="7"/>
									</combo>
								</radiobutton>
								<radiobutton label="Inc. Interface Mode, rotation detection" value="6" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T2CON_T2I_INC_ROT" svd="0">
										<item label="None. Counter T2 stopped"/>
										<item label="Rising or Falling edge on T2IN"/>
										<item label="Rising or Falling edge on T2EUD"/>
										<item label="Rising or Falling edge on any T2 input (T2IN, T2EUD)"/>
									</combo>
								</radiobutton>
								<radiobutton label="Inc. Interface Mode, edge detection" value="7" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T2CON_T2I_INC_EDGE" svd="0">
										<item label="None. Counter T2 stopped"/>
										<item label="Rising or Falling edge on T2IN"/>
										<item label="Rising or Falling edge on T2EUD"/>
										<item label="Rising or Falling edge on any T2 input (T2IN, T2EUD)"/>
									</combo>
								</radiobutton>
							</radio>
							<math label="T2I" define="GPT12E.T2CON.T2I" formula="GPT12E.T2CON.T2M&lt;1?GPT12E.T2CON_T2I_TIMER:GPT12E.T2CON.T2M&lt;2?GPT12E.T2CON_T2I_COUNTER:GPT12E.T2CON.T2M&lt;3?GPT12E.T2CON_T2I_GATED_TIMER_LOW:GPT12E.T2CON.T2M&lt;4?GPT12E.T2CON_T2I_GATED_TIMER_HIGH:GPT12E.T2CON.T2M&lt;5?GPT12E.T2CON_T2I_RELOAD:GPT12E.T2CON.T2M&lt;6?GPT12E.T2CON_T2I_CAPTURE:GPT12E.T2CON.T2M&lt;7?GPT12E.T2CON_T2I_INC_ROT:GPT12E.T2CON_T2I_INC_EDGE"/>
						</branch>
						<checkbox label="Remote Run Control by T3" define="GPT12E.T2CON.T2RC"/>
						<branch label="Direction Control">
							<radio define="GPT12E.T2CON.T2UDE">
								<radiobutton label="Software Direction Control" uielement="branch">
									<combo label="Count Direction" define="GPT12E.T2CON.T2UD">
										<item label="up counting" override="Up"/>
										<item label="down counting" override="Down"/>
									</combo>
								</radiobutton>
								<radiobutton label="Hardware Direction Control, by T2EUD input" uielement="branch">
									<combo label="T2EUD Input Pin Select" define="GPT12E.PISEL.IST2EUD" default="label=T2EUDA (P0.2)">
										<item label="T2EUDA (P0.2)" override="T2EUDA" lockon="PORT.P0_DIR.PP2.label=Input"/>
										<item label="T2EUDB (P2.3)" override="T2EUDB"/>
									</combo>
								</radiobutton>
							</radio>
						</branch>
						<branch label="Timer Value">
							<radio define="GPT12E.TEMP_T2_SEL" svd="0">
								<radiobutton label="...as clock ticks" lockon="GPT12E.T2_TIME=0" uielement="branch">
									<spinbox label="T2 Value [ticks]" define="GPT12E.T2_TICK[15:0]" svd="0" default="1"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="GPT12E.T2_TICK[15:0]=0" uielement="branch">
									<doublespinbox label="Time [us]" define="GPT12E.T2_TIME" svd="0" default="1.00"/>
								</radiobutton>
							</radio>
							<math label="Timer Value" unit="ticks" define="GPT12E.T2.T2" formula="GPT12E.T2CON.T2UD>0?(GPT12E.T2_TICK[15:0]+GPT1.T2_CLK*GPT12E.T2_TIME):(0x10000-(GPT12E.T2_TICK[15:0]+GPT1.T2_CLK*GPT12E.T2_TIME))"/>
						</branch>
						<checkbox label="Pin Select" define="GPT12E.TEMP_T2_PISEL" svd="0" uielement="branch">
							<combo label="T2IN Pin Select" define="GPT12E.PISEL.IST2IN" default="label=T2INA (P1.2)">
								<item label="T2INA (P1.2)" override="T2INA" lockon="PORT.P1_DIR.PP2.label=Input"/>
								<item label="T2INB (P1.4)" override="T2INB" lockon="PORT.P1_DIR.PP4.label=Input"/>
							</combo>
						</checkbox>
						<checkbox label="Interrupt" define="GPT12E.T2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_GPT1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T2IE" header="int_defines.h"/>
							<edit label="Call Back" define="GPT1.T2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Core Timer3">
						<math label="GPT1 Timer3 Clock" unit="MHz" define="GPT1.T3_CLK" svd="0" formula="GPT12E.T3CON.T3M&lt;1?(GPT1.BASE_CLK/2^(GPT12E.T3CON_T3I_TIMER)):(GPT12E.T3CON.T3M&lt;2?GPT1.BASE_CLK:(GPT12E.T3CON.T3M&lt;3?(GPT1.BASE_CLK/2^(GPT12E.T3CON_T3I_GATED_TIMER_LOW)):(GPT12E.T3CON.T3M&lt;6?(GPT1.BASE_CLK/2^(GPT12E.T3CON_T3I_GATED_TIMER_HIGH)):GPT1.BASE_CLK)))"/>
						<branch label="Mode Select">
							<radio define="GPT12E.T3CON.T3M">
								<radiobutton label="Timer Mode" value="0" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T3CON_T3I_TIMER" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Counter Mode" value="1" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T3CON_T3I_COUNTER" svd="0">
										<item label="None. Counter T3 is disabled"/>
										<item label="Rising edge on T3IN"/>
										<item label="Falling edge on T3IN"/>
										<item label="Rising or Falling edge on T3IN"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T3CON_T3I_GATED_TIMER_LOW" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T3CON_T3I_GATED_TIMER_HIGH" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Inc. Interface Mode, rotation detection" value="6" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T3CON_T3I_INC_ROT" svd="0">
										<item label="None. Counter T3 stopped"/>
										<item label="Rising or Falling edge on T3IN"/>
										<item label="Rising or Falling edge on T3EUD"/>
										<item label="Rising or Falling edge on any T3 input (T3IN, T3EUD)"/>
									</combo>
								</radiobutton>
								<radiobutton label="Inc. Interface Mode, edge detection" value="7" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T3CON_T3I_INC_EDGE" svd="0">
										<item label="None. Counter T3 stopped"/>
										<item label="Rising or Falling edge on T3IN"/>
										<item label="Rising or Falling edge on T3EUD"/>
										<item label="Rising or Falling edge on any T3 input (T3IN, T3EUD)"/>
									</combo>
								</radiobutton>
							</radio>
							<math label="T3I" define="GPT12E.T3CON.T3I" formula="GPT12E.T3CON.T3M&lt;1?GPT12E.T3CON_T3I_TIMER:GPT12E.T3CON.T3M&lt;2?GPT12E.T3CON_T3I_COUNTER:GPT12E.T3CON.T3M&lt;3?GPT12E.T3CON_T3I_GATED_TIMER_LOW:GPT12E.T3CON.T3M&lt;4?GPT12E.T3CON_T3I_GATED_TIMER_HIGH:GPT12E.T3CON.T3M&lt;7?GPT12E.T3CON_T3I_INC_ROT:GPT12E.T3CON_T3I_INC_EDGE"/>
						</branch>
						<branch label="Direction Control">
							<radio define="GPT12E.T3CON.T3UDE">
								<radiobutton label="Software Direction Control" uielement="branch">
									<combo label="Count Direction" define="GPT12E.T3CON.T3UD">
										<item label="up counting" override="Up"/>
										<item label="down counting" override="Down"/>
									</combo>
								</radiobutton>
								<radiobutton label="Hardware Direction Control, by T3EUD input" uielement="branch">
									<combo label="T3EUD Input Pin Select" define="GPT12E.PISEL.IST3EUD" default="label=T3EUDA (P0.4)">
										<item label="T3EUDA (P0.4)" override="T3EUDA" lockon="PORT.P0_DIR.PP4.label=Input"/>
										<item label="T3EUDB (P2.7)" override="T3EUDB"/>
										<item label="T3EUDC (P1.1)" override="T3EUDC" lockon="PORT.P1_DIR.PP1.label=Input"/>
										<item label="T3EUDD (P0.3)" override="T3EUDD" lockon="PORT.P0_DIR.PP3.label=Input"/>
									</combo>
								</radiobutton>
							</radio>
						</branch>
						<checkbox label="Output Toggle Latch (T3OTL) preset" define="GPT12E.T3CON.T3OTL"/>
						<checkbox label="Overflow/Underflow Output Enable - T3OUT" define="GPT12E.T3CON.T3OE" uielement="branch">
							<combo label="T3OUT Pin Select" define="GPT12E.TEMP_T3OUT" svd="0" default="label=T3OUT (P0.0)">
								<item label="T3OUT (P0.0)" lockon="PORT.P0_DIR.PP0.label=Output;PORT.P0_0_ALT[1:0].label=T3OUT_0"/>
								<item label="T3OUT (P1.2)" lockon="PORT.P1_DIR.PP2.label=Output;PORT.P1_2_ALT[1:0].label=T3OUT_1"/>
							</combo>
						</checkbox>
						<branch label="Timer Value">
							<radio define="GPT12E.TEMP_T3_SEL" svd="0">
								<radiobutton label="...as clock ticks" lockon="GPT12E.T3_TIME=0" uielement="branch">
									<spinbox label="T3 Value [ticks]" define="GPT12E.T3_TICK[15:0]" svd="0" default="1"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="GPT12E.T3_TICK[15:0]=0" uielement="branch">
									<doublespinbox label="Time [us]" define="GPT12E.T3_TIME" svd="0" default="1.00"/>
								</radiobutton>
							</radio>
							<math label="Timer Value" unit="ticks" define="GPT12E.T3.T3" formula="GPT12E.T3CON.T3UD>0?(GPT12E.T3_TICK[15:0]+GPT1.T3_CLK*GPT12E.T3_TIME):(0x10000-(GPT12E.T3_TICK[15:0]+GPT1.T3_CLK*GPT12E.T3_TIME))"/>
						</branch>
						<checkbox label="Pin Select" define="GPT12E.TEMP_T3_PISEL" svd="0" uielement="branch">
							<combo label="T3IN Pin Select" define="GPT12E.PISEL.IST3IN" default="label=T3INA (CCU6 - CC60)">
								<item label="T3INA (CCU6 - CC60)" override="T3INA"/>
								<item label="T3INB (T3INB/T4IND Input Selector from CCU6)" override="T3INB"/>
								<item label="T3INC (P1.0)" lockon="PORT.P1_DIR.PP0.label=Input" override="T3INC"/>
								<item label="T3IND (P2.3)" override="T3IND"/>
							</combo>
						</checkbox>
						<checkbox label="Interrupt" define="GPT12E.T3_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_GPT1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T3IE" header="int_defines.h"/>
							<edit label="Call Back" define="GPT1.T3_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Aux. Timer4">
						<math label="GPT1 Timer4 Clock" unit="MHz" define="GPT1.T4_CLK" svd="0" formula="GPT12E.T4CON.T4M&lt;1?(GPT1.BASE_CLK/2^(GPT12E.T4CON_T4I_TIMER)):(GPT12E.T4CON.T4M&lt;2?GPT1.BASE_CLK:(GPT12E.T4CON.T4M&lt;3?(GPT1.BASE_CLK/2^(GPT12E.T4CON_T4I_GATED_TIMER_LOW)):(GPT12E.T4CON.T4M&lt;4?(GPT1.BASE_CLK/2^(GPT12E.T4CON_T4I_GATED_TIMER_HIGH)):GPT1.BASE_CLK)))"/>
						<branch label="Mode Select">
							<radio define="GPT12E.T4CON.T4M">
								<radiobutton label="Timer Mode" value="0" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T4CON_T4I_TIMER" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Counter Mode" value="1" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T4CON_T4I_COUNTER" svd="0">
										<item label="None. Counter T4 is disabled" value="0"/>
										<item label="Rising edge on T4IN" value="1"/>
										<item label="Falling edge on T4IN" value="2"/>
										<item label="Rising or Falling edge on T4IN" value="3"/>
										<item label="Rising edge on T3OTL" value="5"/>
										<item label="Falling edge on T3OTL" value="6"/>
										<item label="Rising or Falling edge on T3OTL" value="7"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T4CON_T4I_GATED_TIMER_LOW" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T4CON_T4I_GATED_TIMER_HIGH" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Reload Mode" value="4" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T4CON_T4I_RELOAD" svd="0">
										<item label="None. Counter T4 is disabled" value="0"/>
										<item label="Rising edge on T4IN" value="1"/>
										<item label="Falling edge on T4IN" value="2"/>
										<item label="Rising or Falling edge on T4IN" value="3"/>
										<item label="Rising edge on T3OTL" value="5"/>
										<item label="Falling edge on T3OTL" value="6"/>
										<item label="Rising or Falling edge on T3OTL" value="7"/>
									</combo>
								</radiobutton>
								<radiobutton label="Capture Mode" value="5" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T4CON_T4I_CAPTURE" svd="0">
										<item label="None. Counter T4 is disabled" value="0"/>
										<item label="Rising edge on T4IN" value="1"/>
										<item label="Falling edge on T4IN" value="2"/>
										<item label="Rising or Falling edge on T4IN" value="3"/>
										<item label="Rising edge on T3OTL" value="5"/>
										<item label="Falling edge on T3OTL" value="6"/>
										<item label="Rising or Falling edge on T3OTL" value="7"/>
									</combo>
								</radiobutton>
								<radiobutton label="Inc. Interface Mode, rotation detection" value="6" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T4CON_T4I_INC_ROT" svd="0">
										<item label="None. Counter T4 stopped"/>
										<item label="Rising or Falling edge on T4IN"/>
										<item label="Rising or Falling edge on T4EUD"/>
										<item label="Rising or Falling edge on any T4 input (T4IN, T4EUD)"/>
									</combo>
								</radiobutton>
								<radiobutton label="Inc. Interface Mode, edge detection" value="7" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T4CON_T4I_INC_EDGE" svd="0">
										<item label="None. Counter T4 stopped"/>
										<item label="Rising or Falling edge on T4IN"/>
										<item label="Rising or Falling edge on T4EUD"/>
										<item label="Rising or Falling edge on any T4 input (T4IN, T4EUD)"/>
									</combo>
								</radiobutton>
							</radio>
							<math label="T4I" define="GPT12E.T4CON.T4I" formula="GPT12E.T4CON.T4M&lt;1?GPT12E.T4CON_T4I_TIMER:GPT12E.T4CON.T4M&lt;2?GPT12E.T4CON_T4I_COUNTER:GPT12E.T4CON.T4M&lt;3?GPT12E.T4CON_T4I_GATED_TIMER_LOW:GPT12E.T4CON.T4M&lt;4?GPT12E.T4CON_T4I_GATED_TIMER_HIGH:GPT12E.T4CON.T4M&lt;5?GPT12E.T4CON_T4I_RELOAD:GPT12E.T4CON.T4M&lt;6?GPT12E.T4CON_T4I_CAPTURE:GPT12E.T4CON.T4M&lt;7?GPT12E.T4CON_T4I_INC_ROT:GPT12E.T4CON_T4I_INC_EDGE"/>
						</branch>
						<checkbox label="Remote Run Control by T3" define="GPT12E.T4CON.T4RC"/>
						<combo label="Clear Timer T2 Enable" define="GPT12E.T4CON.CLRT2EN">
							<item label="No effect on Timer T2" override="No effect"/>
							<item label="A falling edge on T4EUD clears Timer T2" override="Clear"/>
						</combo>
						<combo label="Clear Timer T3 Enable" define="GPT12E.T4CON.CLRT3EN">
							<item label="No effect on Timer T3" override="No effect"/>
							<item label="A falling edge on T4EUD clears Timer T3" override="Clear"/>
						</combo>
						<branch label="Direction Control">
							<radio define="GPT12E.T4CON.T4UDE">
								<radiobutton label="Software Direction Control" uielement="branch">
									<combo label="Count Direction" define="GPT12E.T4CON.T4UD">
										<item label="up counting" override="Up"/>
										<item label="down counting" override="Down"/>
									</combo>
								</radiobutton>
								<radiobutton label="Hardware Direction Control, by T4EUD input" uielement="branch">
									<combo label="T4EUD Input Pin Select" define="GPT12E.PISEL.IST4EUD" default="label=T4EUDA (P0.3)">
										<item label="T4EUDA (P0.3)" lockon="PORT.P0_DIR.PP3.label=Input" override="T4EUDA"/>
										<item label="T4EUDB (P1.0)" lockon="PORT.P1_DIR.PP0.label=Input" override="T4EUDB"/>
										<item label="T4EUDC (P2.7)" override="T4EUDC"/>
										<item label="T4EUDD (P2.1)" override="T4EUDD"/>
									</combo>
								</radiobutton>
							</radio>
						</branch>
						<branch label="Timer Value">
							<radio define="GPT12E.TEMP_T4_SEL" svd="0">
								<radiobutton label="...as clock ticks" lockon="GPT12E.T4_TIME=0" uielement="branch">
									<spinbox label="T4 Value [ticks]" define="GPT12E.T4_TICK[15:0]" svd="0" default="1"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="GPT12E.T4_TICK[15:0]=0" uielement="branch">
									<doublespinbox label="Time [us]" define="GPT12E.T4_TIME" svd="0" default="1.00"/>
								</radiobutton>
							</radio>
							<math label="Timer Value" unit="ticks" define="GPT12E.T4.T4" formula="GPT12E.T4CON.T4UD>0?(GPT12E.T4_TICK[15:0]+GPT1.T4_CLK*GPT12E.T4_TIME):(0x10000-(GPT12E.T4_TICK[15:0]+GPT1.T4_CLK*GPT12E.T4_TIME))"/>
						</branch>
						<checkbox label="Pin Select" define="GPT12E.TEMP_T4_PISEL" svd="0" uielement="branch">
							<combo label="T4IN Pin Select" define="GPT12E.PISEL.IST4IN" default="label=T4INA (P0.0)">
								<item label="T4INA (P0.0)" lockon="PORT.P0_DIR.PP0.label=Input" override="T4INA"/>
								<item label="T4INB (CCU6 - CC60)" override="T4INB"/>
								<item label="T4INC (P0.1)" lockon="PORT.P0_DIR.PP1.label=Input" override="T4INC"/>
								<item label="T4IND (T3INB/T4IND Input Selector from CCU6)" override="T4IND"/>
							</combo>
						</checkbox>
						<checkbox label="Interrupt" define="GPT12E.T4_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_GPT1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T4IE" header="int_defines.h"/>
							<edit label="Call Back" define="GPT1.T4_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="T3INB/T4IND Input Selector from CCU6">
						<combo label="Input Selector" define="SCU.GPT12PISEL.GPT12" header="scu_defines.h">
							<item label="CC60" override="CC60"/>
							<item label="CC61" override="CC61"/>
							<item label="CC62" override="CC62"/>
							<item label="T12 Zero Match" override="T12 ZM"/>
							<item label="T12 Period Match" override="T12 PM"/>
							<item label="T12 Compare Match Ch0" override="T12 CM0"/>
							<item label="T12 Compare Match Ch1" override="T12 CM1"/>
							<item label="T12 Compare Match Ch2" override="T12 CM2"/>
							<item label="T13 Period Match" override="T13 PM"/>
							<item label="T13 Zero Match" override="T13 ZM"/>
							<item label="T13 Compare Match" override="T13 CM"/>
							<item label="any rising/falling edge on CC60/61/62" override="Edge"/>
						</combo>
					</branch>
				</branch>
				<branch label="GPT2">
					<branch label="Clock">
						<combo label="Block Prescaler" define="GPT12E.T6CON.BPS2" default="label=fGPT / 2">
							<item label="fGPT / 2" override="2"/>
							<item label="fGPT / 4" override="4"/>
							<item label="fGPT / 8" override="8"/>
							<item label="fGPT / 16" override="16"/>
						</combo>
						<math label="GPT2 Clock" unit="MHz" define="GPT2.BASE_CLK" svd="0" formula="SCU.PLL_fPLL/(2*(2^(GPT12E.T6CON.BPS2.^1)))"/>
					</branch>
					<branch label="Aux. Timer5">
						<math label="GPT2 Timer5 Clock" unit="MHz" define="GPT2.T5_CLK" svd="0" formula="GPT12E.T5CON.T5M&lt;1?(GPT2.BASE_CLK/2^(GPT12E.T5CON_T5I_TIMER)):(GPT12E.T5CON.T5M&lt;2?GPT2.BASE_CLK:(GPT12E.T5CON.T5M&lt;3?(GPT2.BASE_CLK/2^(GPT12E.T5CON_T5I_GATED_TIMER_LOW)):(GPT2.BASE_CLK/2^(GPT12E.T5CON_T5I_GATED_TIMER_HIGH))))"/>
						<branch label="Mode Select">
							<radio define="GPT12E.T5CON.T5M">
								<radiobutton label="Timer Mode" value="0" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T5CON_T5I_TIMER" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Counter Mode" value="1" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T5CON_T5I_COUNTER" svd="0">
										<item label="None. Counter T5 is disabled" value="0"/>
										<item label="Rising edge on T5IN" value="1"/>
										<item label="Falling edge on T5IN" value="2"/>
										<item label="Rising or Falling edge on T5IN" value="3"/>
										<item label="Rising edge on T6OTL" value="5"/>
										<item label="Falling edge on T6OTL" value="6"/>
										<item label="Rising or Falling edge on T6OTL" value="7"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T5CON_T5I_GATED_TIMER_LOW" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T5CON_T5I_GATED_TIMER_HIGH" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
							</radio>
							<math label="T5I" define="GPT12E.T5CON.T5I" formula="GPT12E.T5CON.T5M&lt;1?GPT12E.T5CON_T5I_TIMER:GPT12E.T5CON.T5M&lt;2?GPT12E.T5CON_T5I_COUNTER:GPT12E.T5CON.T5M&lt;3?GPT12E.T5CON_T5I_GATED_TIMER_LOW:GPT12E.T5CON_T5I_GATED_TIMER_HIGH"/>
						</branch>
						<checkbox label="Capture into CAPREL enabled" define="GPT12E.T5CON.T5SC" uielement="branch">
							<combo label="CAPREL Capture Trigger Selection" define="GPT12E.T5CON[13:10]" default="label=Capture disabled">
								<item label="Capture disabled" value="0"/>
								<item label="rising edge on CAPIN" value="4"/>
								<item label="falling edge on CAPIN" value="8"/>
								<item label="rising or falling edge on CAPIN" value="12"/>
								<item label="any edge on T3IN" value="5"/>
								<item label="any edge on T3EUD" value="9"/>
								<item label="any edge on T3IN or T3EUD" value="13"/>
							</combo>
							<checkbox label="T5 cleared on capture event" define="GPT12E.T5CON.T5CLR"/>
						</checkbox>
						<checkbox label="Remote Run Control by T6" define="GPT12E.T5CON.T5RC"/>
						<branch label="Direction Control">
							<radio define="GPT12E.T5CON.T5UDE">
								<radiobutton label="Software Direction Control" uielement="branch">
									<combo label="Count Direction" define="GPT12E.T5CON.T5UD">
										<item label="up counting" override="Up"/>
										<item label="down counting" override="Down"/>
									</combo>
								</radiobutton>
								<radiobutton label="Hardware Direction Control, by T5EUD input" uielement="branch">
									<combo label="T5EUD Input Pin Select" define="GPT12E.PISEL.IST5EUD" default="label=T5EUDA (P1.4)">
										<item label="T5EUDA (P1.4)" lockon="PORT.P1_DIR.PP4.label=Input" override="T5EUDA"/>
										<item label="T5EUDB (P2.0)" override="T5EUDB"/>
									</combo>
								</radiobutton>
							</radio>
						</branch>
						<branch label="Timer Value">
							<radio define="GPT12E.TEMP_T5_SEL" svd="0">
								<radiobutton label="...as clock ticks" lockon="GPT12E.T5_TIME=0" uielement="branch">
									<spinbox label="T5 Value [ticks]" define="GPT12E.T5_TICK[15:0]" svd="0" default="1"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="GPT12E.T5_TICK[15:0]=0" uielement="branch">
									<doublespinbox label="Time [us]" define="GPT12E.T5_TIME" svd="0" default="1.00"/>
								</radiobutton>
							</radio>
							<math label="Timer Value" unit="ticks" define="GPT12E.T5.T5" formula="GPT12E.T5CON.T5UD>0?(GPT12E.T5_TICK[15:0]+GPT2.T5_CLK*GPT12E.T5_TIME):(0x10000-(GPT12E.T5_TICK[15:0]+GPT2.T5_CLK*GPT12E.T5_TIME))"/>
						</branch>
						<checkbox label="T5/CAPIN Pin Select" define="GPT12E.T5_CAPIN_PISEL" svd="0" uielement="branch">
							<combo label="T5IN Pin Select" define="GPT12E.PISEL.IST5IN" default="label=T5INA (P0.5)">
								<item label="T5INA (P0.5)" lockon="PORT.P0_DIR.PP5.label=Input" override="T5INA"/>
								<item label="T5INB (P1.1)" lockon="PORT.P1_DIR.PP1.label=Input" override="T5INB"/>
							</combo>
							<combo label="CAPIN Input Pin Select" define="GPT12E.PISEL.ISCAPIN" default="label=CAPINA (P0.1)">
								<item label="CAPINA (P0.1)" lockon="PORT.P0_DIR.PP1.label=Input" override="CAPINA"/>
								<item label="CAPINB (P0.3)" lockon="PORT.P0_DIR.PP3.label=Input" override="CAPINB"/>
								<item label="CAPINC (read of T3)" override="CAPINC"/>
								<item label="CAPIND (read of T2, T3, T4)" override="CAPIND"/>
							</combo>
						</checkbox>
						<checkbox label="Interrupt" define="GPT12E.T5_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_GPT2=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T5IE" header="int_defines.h"/>
							<edit label="Call Back" define="GPT2.T5_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="CAPREL">
						<radio define="GPT12E.TEMP_CAPREL_SEL" svd="0">
							<radiobutton label="...as clock ticks" lockon="GPT12E.CAPREL_TIME=0" uielement="branch">
								<spinbox label="CAPREL Value [ticks]" define="GPT12E.CAPREL_TICK[15:0]" svd="0" default="1"/>
							</radiobutton>
							<radiobutton label="...as time" lockon="GPT12E.CAPREL_TICK[15:0]=0" uielement="branch">
								<doublespinbox label="Time [us]" define="GPT12E.CAPREL_TIME" svd="0" default="1.00"/>
							</radiobutton>
						</radio>
						<math label="CAPREL Timer Value" unit="ticks" define="GPT12E.CAPREL.CAPREL" formula="GPT12E.T6CON.T6UD>0?(GPT12E.CAPREL_TICK[15:0]+GPT2.T6_CLK*GPT12E.CAPREL_TIME):(0x10000-(GPT12E.CAPREL_TICK[15:0]+GPT2.T6_CLK*GPT12E.CAPREL_TIME))"/>
						<checkbox label="Capture Interrupt" define="GPT12E.CAP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_GPT2=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.GPT12IEN.CRIE" header="int_defines.h"/>
							<edit label="Call Back" define="GPT2.CAPREL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Core Timer6">
						<math label="GPT2 Timer6 Clock" unit="MHz" define="GPT2.T6_CLK" svd="0" formula="GPT12E.T6CON.T6M&lt;1?(GPT2.BASE_CLK/2^(GPT12E.T6CON_T6I_TIMER)):(GPT12E.T6CON.T6M&lt;2?GPT2.BASE_CLK:(GPT12E.T6CON.T6M&lt;3?(GPT2.BASE_CLK/2^(GPT12E.T6CON_T6I_GATED_TIMER_LOW)):(GPT2.BASE_CLK/2^(GPT12E.T6CON_T6I_GATED_TIMER_HIGH))))"/>
						<branch label="Mode Select">
							<radio define="GPT12E.T6CON.T6M">
								<radiobutton label="Timer Mode" value="0" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T6CON_T6I_TIMER" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Counter Mode" value="1" uielement="branch">
									<combo label="Input Edge Select" define="GPT12E.T6CON_T6I_COUNTER" svd="0">
										<item label="None. Counter T6 is disabled"/>
										<item label="Rising edge on T6IN"/>
										<item label="Falling edge on T6IN"/>
										<item label="Rising or Falling edge on T6IN"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T6CON_T6I_GATED_TIMER_LOW" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
								<radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
									<combo label="Individual Prescaler" define="GPT12E.T6CON_T6I_GATED_TIMER_HIGH" svd="0">
										<item label="Block Prescaler / 1"/>
										<item label="Block Prescaler / 2"/>
										<item label="Block Prescaler / 4"/>
										<item label="Block Prescaler / 8"/>
										<item label="Block Prescaler / 16"/>
										<item label="Block Prescaler / 32"/>
										<item label="Block Prescaler / 64"/>
										<item label="Block Prescaler / 128"/>
									</combo>
								</radiobutton>
							</radio>
							<math label="T6I" define="GPT12E.T6CON.T6I" formula="GPT12E.T6CON.T6M&lt;1?GPT12E.T6CON_T6I_TIMER:GPT12E.T6CON.T6M&lt;2?GPT12E.T6CON_T6I_COUNTER:GPT12E.T6CON.T6M&lt;3?GPT12E.T6CON_T6I_GATED_TIMER_LOW:GPT12E.T6CON_T6I_GATED_TIMER_HIGH"/>
						</branch>
						<checkbox label="T6 cleared on capture event" define="GPT12E.T6CON.T6CLR"/>
						<checkbox label="T6 reload by CAPREL" define="GPT12E.T6CON.T6SR"/>
						<branch label="Direction Control">
							<radio define="GPT12E.T6CON.T6UDE">
								<radiobutton label="Software Direction Control" uielement="branch">
									<combo label="Count Direction" define="GPT12E.T6CON.T6UD">
										<item label="up counting" override="Up"/>
										<item label="down counting" override="Down"/>
									</combo>
								</radiobutton>
								<radiobutton label="Hardware Direction Control, by T6EUD input" uielement="branch">
									<combo label="T6EUD Input Pin Select" define="GPT12E.PISEL.IST6EUD" default="label=T6EUDA (P1.1)">
										<item label="T6EUDA (P1.1)" lockon="PORT.P1_DIR.PP1.label=Input" override="T6EUDA"/>
										<item label="T6EUDB (P2.2)" override="T6EUDB"/>
									</combo>
								</radiobutton>
							</radio>
						</branch>
						<checkbox label="Output Toggle Latch (T6OTL) preset" define="GPT12E.T6CON.T6OTL"/>
						<checkbox label="Overflow/Underflow Output Enable - T6OUT" define="GPT12E.T6CON.T6OE" uielement="branch">
							<combo label="T6OUT Pin Select" define="GPT12E.TEMP_T6OUT" svd="0" default="label=T6OUT (P0.3)">
								<item label="T6OUT (P0.3)" lockon="PORT.P0_DIR.PP3.label=Output;PORT.P0_3_ALT[1:0].label=T6OUT_1"/>
								<item label="T6OUT (P0.1)" lockon="PORT.P0_DIR.PP1.label=Output;PORT.P0_1_ALT[1:0].label=T6OUT_0"/>
							</combo>
						</checkbox>
						<branch label="Timer Value">
							<radio define="GPT12E.TEMP_T6_SEL" svd="0">
								<radiobutton label="...as clock ticks" lockon="GPT12E.T6_TIME=0" uielement="branch">
									<spinbox label="T6 Value [ticks]" define="GPT12E.T6_TICK[15:0]" svd="0" default="1"/>
								</radiobutton>
								<radiobutton label="...as time" lockon="GPT12E.T6_TICK[15:0]=0" uielement="branch">
									<doublespinbox label="Time [us]" define="GPT12E.T6_TIME" svd="0" default="1.00"/>
								</radiobutton>
							</radio>
							<math label="Timer Value" unit="ticks" define="GPT12E.T6.T6" formula="GPT12E.T6CON.T6UD>0?(GPT12E.T6_TICK[15:0]+GPT2.T6_CLK*GPT12E.T6_TIME):(0x10000-(GPT12E.T6_TICK[15:0]+GPT2.T6_CLK*GPT12E.T6_TIME))"/>
						</branch>
						<checkbox label="Pin Select" define="GPT12E.TEMP_T6_PISEL" svd="0" uielement="branch">
							<combo label="T6IN Pin Select" define="GPT12E.PISEL.IST6IN" default="label=T6INA (CC61)">
								<item label="T6INA (CC61)" override="T6INA"/>
								<item label="T6INB (COUT61)" override="T6INB"/>
							</combo>
						</checkbox>
						<checkbox label="Interrupt" define="GPT12E.T6_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_GPT2=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T6IE" header="int_defines.h"/>
							<edit label="Call Back" define="GPT2.T6_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
				</branch>
			</header>
		</treecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="Timer2x" desc="Timer 2x" columnwidths="300;250">
			<header file="timer2x_defines.h">
				<checkbox label="Configure Timer2" define="TIMER2.Configuration_En" svd="0" uielement="branch">
					<math label="Timer2 Clock" unit="MHz" define="TIMER2.CLK" svd="0" formula="TIMER2.MOD.PREN?SCU.PLL_fPLL/(2^(TIMER2.MOD.T2PRE)):SCU.PLL_fPLL/12"/>
					<math label="Max. Period" unit="us" define="TIMER2.MAX_PERIOD" svd="0" formula="65535/TIMER2.CLK"/>
					<branch label="Clock Setting">
						<radio label="Timer / Counter Select" define="TIMER2.CON.C_T2">
							<radiobutton label="Timer" uielement="branch">
								<checkbox label="Prescaler Enable" define="TIMER2.MOD.PREN" uielement="branch">
									<combo label="Prescaler" define="TIMER2.MOD.T2PRE">
										<item label="divide by 1" override="DIV1"/>
										<item label="divide by 2" override="DIV2"/>
										<item label="divide by 4" override="DIV4"/>
										<item label="divide by 8" override="DIV8"/>
										<item label="divide by 16" override="DIV16"/>
										<item label="divide by 32" override="DIV32"/>
										<item label="divide by 64" override="DIV64"/>
										<item label="divide by 128" override="DIV128"/>
									</combo>
								</checkbox>
							</radiobutton>
							<radiobutton label="Counter"/>
						</radio>
					</branch>
					<branch label="Mode Select">
						<radio define="TIMER2.CON.CP_RL2">
							<radiobutton label="Auto-Reload Mode" uielement="branch">
								<combo label="Up/Down Counter Enable" define="TIMER2.MOD.DCEN">
									<item label="Disabled" override="DISABLED"/>
									<item label="Enabled" override="ENABLED"/>
								</combo>
							</radiobutton>
							<radiobutton label="Capture Mode"/>
						</radio>
					</branch>
					<checkbox label="External Capture/Reload Event Enable" define="TIMER2.CON.EXEN2" uielement="branch">
						<combo label="Edge Select in Capture Mode / Reload Mode" define="TIMER2.MOD.EDGESEL">
							<item label="Falling edge at pin T2EX" override="FALLING"/>
							<item label="Rising edge at pin T2EX" override="RISING"/>
						</combo>
					</checkbox>
					<checkbox label="External Start Enable" define="TIMER2.MOD.T2RHEN" uielement="branch">
						<combo label="Edge Select for External Start" define="TIMER2.MOD.T2REGS">
							<item label="Falling edge at pin T2EX" override="FALLING"/>
							<item label="Rising edge at pin T2EX" override="RISING"/>
						</combo>
					</checkbox>
					<branch label="Timer Register">
						<radio define="TIMER2.TEMP_TIMER2_TIME_SEL" svd="0">
							<radiobutton label="...as clock ticks" uielement="branch">
								<spinbox label="Value [ticks]" define="TIMER2.TEMP_TIME_TICK[15:0]" svd="0" default="1"/>
							</radiobutton>
							<radiobutton label="...as time" uielement="branch">
								<doublespinbox label="Time [us]" define="TIMER2.TEMP_TIME_TIME" svd="0" default="1.00"/>
							</radiobutton>
						</radio>
						<math label="Timer Value" unit="ticks" define="TIMER2.T2[15:0]" svd="0" format="%04X" formula="TIMER2.TEMP_TIMER2_TIME_SEL?floor(0x10000-TIMER2.TEMP_TIME_TIME*TIMER2.CLK):(0x10000-TIMER2.TEMP_TIME_TICK[15:0])"/>
					</branch>
					<branch label="Reload / Capture Register">
						<radio define="TIMER2.TEMP_TIMER2_SEL" svd="0">
							<radiobutton label="...as clock ticks" uielement="branch">
								<spinbox label="Value [ticks]" define="TIMER2.TEMP_TIMER2_TICK[15:0]" svd="0" default="1"/>
							</radiobutton>
							<radiobutton label="...as time" uielement="branch">
								<doublespinbox label="Time [us]" define="TIMER2.TEMP_TIMER2_TIME" svd="0" default="1.00"/>
							</radiobutton>
						</radio>
						<math label="Reload Value" unit="ticks" format="%04X" define="TIMER2.RC2[15:0]" svd="0" formula="TIMER2.TEMP_TIMER2_SEL?floor(0x10000-TIMER2.TEMP_TIMER2_TIME*TIMER2.CLK):(0x10000-TIMER2.TEMP_TIMER2_TICK[15:0])"/>
					</branch>
					<branch label="Interrupt">
						<checkbox label="External Interrupt" define="TIMER2.EXF2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="TIMER2.CON1.EXF2EN"/>
							<edit label="Call Back" define="TIMER2.EXF2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Overflow / Underflow Interrupt" define="TIMER2.TF2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="TIMER2.CON1.TF2EN"/>
							<edit label="Call Back" define="TIMER2.TF2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Pin Select">
						<combo label="External Counter Input (T2IN)" define="SCU.MODPISEL2.T2IS" header="scu_defines.h" default="label=P2.3 (T2_2)">
							<item label="P0.0 (T2_0)" override="T2_0" lockon="PORT.P0_DIR.PP0.label=Input"/>
							<item label="P2.7 (T2_1)" override="T2_1"/>
							<item label="P2.3 (T2_2)" override="T2_2"/>
						</combo>
						<branch label="External Control Input (T2EX)">
							<radio define="SCU.MODPISEL1.T2EXCON" header="scu_defines.h">
								<radiobutton label="Pin Select" uielement="branch">
									<combo label="External Control Input (T2EX)" define="SCU.T2EX_Sel[3:0]" svd="0" header="scu_defines.h" default="label=P2.2 (T2EX_0)">
										<item label="P2.2 (T2EX_0)"/>
										<item label="P0.1 (T2EX_1)" lockon="PORT.P0_DIR.PP1.label=Input;SCU.MODPISEL.URIOS1=1"/>
										<item label="P2.3 (T2EX_2)"/>
										<item label="P2.1 (T2EX_3)"/>
										<item label="MON1"/>
										<item label="MON2"/>
										<item label="MON3"/>
										<item label="MON4"/>
										<item label="lin_rxd_i"/>
										<item label="reserved"/>
										<item label="cc6_cout60"/>
										<item label="cc6_cout61"/>
										<item label="cc6_ch0"/>
										<item label="cc6_ch1"/>
										<item label="cc6_ch2"/>
										<item label="cc6_ch3"/>
									</combo>
									<math define="SCU.MODPISEL2.T2EXIS" visible="false" formula="SCU.T2EX_Sel[3:0].*0x3" header="scu_defines.h"/>
									<math define="SCU.MODPISEL2.T2EXISCNF" visible="false" formula="SCU.T2EX_Sel[3:0]/4" header="scu_defines.h"/>
								</radiobutton>
								<radiobutton label="CCU6-CC60 (Ch0)"/>
							</radio>
						</branch>
						<combo label="External Flag Output (EXF2)" define="TIMER2.EXF2_PINSEL" svd="0" default="label=none">
							<item label="none"/>
							<item label="P0.2 (EXF2_0)" lockon="PORT.P0_DIR.PP2.label=Output;PORT.P0_2_ALT[1:0].label=EXF2_0"/>
						</combo>
					</branch>
				</checkbox>
				<checkbox label="Configure Timer21" define="TIMER21.Configuration_En" svd="0" uielement="branch">
					<math label="Timer21 Clock" unit="MHz" define="TIMER21.CLK" svd="0" formula="TIMER21.MOD.PREN?SCU.PLL_fPLL/(2^(TIMER21.MOD.T2PRE)):SCU.PLL_fPLL/12"/>
					<math label="Max. Period" unit="us" define="TIMER21.MAX_PERIOD" svd="0" formula="65535/TIMER21.CLK"/>
					<branch label="Clock Setting">
						<radio label="Timer / Counter Select" define="TIMER21.CON.C_T2">
							<radiobutton label="Timer" uielement="branch">
								<checkbox label="Prescaler Enable" define="TIMER21.MOD.PREN" uielement="branch">
									<combo label="Prescaler" define="TIMER21.MOD.T2PRE">
										<item label="divide by 1" override="DIV1"/>
										<item label="divide by 2" override="DIV2"/>
										<item label="divide by 4" override="DIV4"/>
										<item label="divide by 8" override="DIV8"/>
										<item label="divide by 16" override="DIV16"/>
										<item label="divide by 32" override="DIV32"/>
										<item label="divide by 64" override="DIV64"/>
										<item label="divide by 128" override="DIV128"/>
									</combo>
								</checkbox>
							</radiobutton>
							<radiobutton label="Counter"/>
						</radio>
					</branch>
					<branch label="Mode Select">
						<radio define="TIMER21.CON.CP_RL2">
							<radiobutton label="Auto-Reload Mode" uielement="branch">
								<combo label="Up/Down Counter Enable" define="TIMER21.MOD.DCEN">
									<item label="Disabled" override="DISABLED"/>
									<item label="Enabled" override="ENABLED"/>
								</combo>
							</radiobutton>
							<radiobutton label="Capture Mode"/>
						</radio>
					</branch>
					<checkbox label="External Capture/Reload Event Enable" define="TIMER21.CON.EXEN2" uielement="branch">
						<combo label="Edge Select in Capture Mode / Reload Mode" define="TIMER21.MOD.EDGESEL">
							<item label="Falling edge at pin T21EX" override="FALLING"/>
							<item label="Rising edge at pin T21EX" override="RISING"/>
						</combo>
					</checkbox>
					<checkbox label="External Start Enable" define="TIMER21.MOD.T2RHEN" uielement="branch">
						<combo label="Edge Select for External Start" define="TIMER21.MOD.T2REGS">
							<item label="Falling edge at pin T21EX" override="FALLING"/>
							<item label="Rising edge at pin T21EX" override="RISING"/>
						</combo>
					</checkbox>
					<branch label="Timer Register">
						<radio define="TIMER21.TEMP_TIMER2_TIME_SEL" svd="0">
							<radiobutton label="...as clock ticks" uielement="branch">
								<spinbox label="Value [ticks]" define="TIMER21.TEMP_TIME_TICK[15:0]" svd="0" default="1"/>
							</radiobutton>
							<radiobutton label="...as time" uielement="branch">
								<doublespinbox label="Time [us]" define="TIMER21.TEMP_TIME_TIME" svd="0" default="1.00"/>
							</radiobutton>
						</radio>
						<math label="Timer Value" unit="ticks" format="%04X" define="TIMER21.T2[15:0]" svd="0" formula="TIMER21.TEMP_TIMER2_TIME_SEL?floor(0x10000-TIMER21.TEMP_TIME_TIME*TIMER21.CLK):(0x10000-TIMER21.TEMP_TIME_TICK[15:0])"/>
					</branch>
					<branch label="Reload / Capture Register">
						<radio define="TIMER21.TEMP_TIMER2_SEL" svd="0">
							<radiobutton label="...as clock ticks" uielement="branch">
								<spinbox label="Value [ticks]" define="TIMER21.TEMP_TIMER2_TICK[15:0]" svd="0" default="1"/>
							</radiobutton>
							<radiobutton label="...as time" uielement="branch">
								<doublespinbox label="Time [us]" define="TIMER21.TEMP_TIMER2_TIME" svd="0" default="1.00"/>
							</radiobutton>
						</radio>
						<math label="Reload Value" unit="ticks" define="TIMER21.RC2[15:0]" svd="0" format="%04X" formula="TIMER21.TEMP_TIMER2_SEL?floor(0x10000-TIMER21.TEMP_TIMER2_TIME*TIMER21.CLK):(0x10000-TIMER21.TEMP_TIMER2_TICK[15:0])"/>
					</branch>
					<branch label="Interrupt">
						<checkbox label="External Interrupt" define="TIMER21.EXF2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART2=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="TIMER21.CON1.EXF2EN"/>
							<edit label="Call Back" define="TIMER21.EXF2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
						<checkbox label="Overflow / Underflow Interrupt" define="TIMER21.TF2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART2=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="TIMER21.CON1.TF2EN"/>
							<edit label="Call Back" define="TIMER21.TF2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
						</checkbox>
					</branch>
					<branch label="Pin Select">
						<checkbox label="External Counter Input (T21)" define="TIMER21.T21IN_EN" svd="0" uielement="branch">
							<combo label="External Counter Input (T21)" define="SCU.MODPISEL2.T21IS" header="scu_defines.h" default="label=P0.1 (T21_0)">
								<item label="P0.1 (T21_0)" override="T21_0" lockon="PORT.P0_DIR.PP1.label=Input"/>
								<item label="P1.2 (T21_1)" override="T21_1" lockon="PORT.P1_DIR.PP2.label=Input"/>
								<item label="P0.4 (T21_2)" override="T21_2" lockon="PORT.P0_DIR.PP4.label=Input"/>
							</combo>
						</checkbox>
						<checkbox define="SCU_T21_External_Input_Sel" svd="0" label="External Control Input (T21EX)" uielement="branch">
							<radio define="SCU.MODPISEL1.T21EXCON" header="scu_defines.h">
								<radiobutton label="Pin Select" uielement="branch">
									<combo label="External Control Input (T21EX)" define="SCU.T21EX_Sel[3:0]" svd="0" header="scu_defines.h" default="label=P0.2 (T21EX_0)">
										<item label="P0.2 (T21EX_0)" lockon="PORT.P0_DIR.PP2.label=Input"/>
										<item label="P1.4 (T21EX_1)" lockon="PORT.P1_DIR.PP4.label=Input"/>
										<item label="P0.5 (T21EX_2)" lockon="PORT.P0_DIR.PP5.label=Input"/>
										<item label="P1.1 (T21EX_3)" lockon="PORT.P1_DIR.PP1.label=Input"/>
										<item label="MON1"/>
										<item label="MON2"/>
										<item label="MON3"/>
										<item label="MON4"/>
										<item label="lin_rxd_i"/>
										<item label="reserved"/>
										<item label="cc6_ch0"/>
										<item label="cc6_ch1"/>
										<item label="cc6_cout60"/>
										<item label="cc6_cout61"/>
										<item label="cc6_cout62"/>
										<item label="cc6_cout63"/>
									</combo>
									<math define="SCU.MODPISEL2.T21EXIS" visible="false" formula="SCU.T21EX_Sel[3:0].*0x3" header="scu_defines.h" />
									<math define="SCU.MODPISEL2.T21EXISCNF" visible="false" formula="SCU.T21EX_Sel[3:0]/4" header="scu_defines.h" />
								</radiobutton>
								<radiobutton label="CCU6-COUT60 (Ch0)"/>
							</radio>
						</checkbox>
						<combo label="External Flag Output (EXF21)" define="TIMER21.EXF21_PINSEL" svd="0" default="label=none">
							<item label="none"/>
							<item label="P0.0 (EXF21_0)" lockon="PORT.P0_DIR.PP0.label=Output;PORT.P0_0_ALT[1:0].label=EXF21_0"/>
							<item label="P1.1 (EXF21_1)" lockon="PORT.P1_DIR.PP1.label=Output;PORT.P1_1_ALT[1:0].label=EXF21_1"/>
						</combo>
					</branch>
				</checkbox>
			</header>
		</treecontainer>
		<tabcontainer label="UART" desc="Asynchronous Serial Communication" color="255;255;255;255">
			<header file="uart_defines.h">
				<absolutecontainer label="UART1">
					<gridcontainer columns="3">
						<verticalcontainer>
							<groupcontainer label="Clock">
								<horizontalcontainer color="240;240;240;240">
									<gridcontainer columns="2">
										<text label="Clock Speed:"/>
										<math unit="MHz" define="UART1.CLK" svd="0" formula="SCU.PLL_fPLL/(2^(SCU.BCON1.BR1_PRE))"/>
										<text label="Prescaler"/>
										<combo define="SCU.BCON1.BR1_PRE" header="scu_defines.h" default="label=fSYS / 1">
											<item label="fSYS / 1" override="div 1"/>
											<item label="fSYS / 2" override="div 2"/>
											<item label="fSYS / 4" override="div 4"/>
											<item label="fSYS / 8" override="div 8"/>
											<item label="fSYS / 16" override="div 16"/>
											<item label="fSYS / 32" override="div 32"/>
										</combo>
										<text/>
										<text/>
									</gridcontainer>
									<text/>
									<dial size="90;90" min="0" max="40" data="UART1.CLK"/>
									<text/>
								</horizontalcontainer>
							</groupcontainer>
							<groupcontainer label="Mode">
								<verticalcontainer color="240;240;240;240">
									<text label="Mode Select:"/>
									<combo define="UART1.SCON[7:6]" default="label=Mode 0: 8-bit shift register, fixed Baudrate fSYS/2">
										<item label="Mode 0: 8-bit shift register, fixed Baudrate fSYS/2"/>
										<item label="Mode 1: 8-bit UART, variable Baudrate"/>
										<item label="Mode 2: 9-bit UART, fixed Baudrate (fSYS/64 or fSYS/32)"/>
										<item label="Mode 3: 9-bit UART, variable Baudrate"/>
									</combo>
									<checkbox label="No Receive Interrupt if no StopBit was received (SM2)" define="UART1.SCON.SM2"/>
									<checkbox label="Receiver enabled" define="UART1.SCON.REN"/>
									<checkbox label="STDIN/STDOUT enabled" define="UART1.STD_EN" svd="0"/>
								</verticalcontainer>
							</groupcontainer>
						</verticalcontainer>
						<verticalcontainer>
							<groupcontainer label="Baudrate">
								<verticalcontainer color="240;240;240;240">
									<checkbox label="Baudrate Generator running" define="SCU.BCON1.BR1_R" default="0" header="scu_defines.h"/>
									<gridcontainer columns="2">
										<text label="Configured Baudrate [Baud]"/>
										<spinbox define="UART1.MAN_BAUDRATE" svd="0" range="0;2000000" default="19200"/>
										<text label="Baudrate Value:"/>
										<math define="UART1.BRVAL[10:0]" svd="0" formula="trunc((UART1.CLK*1000000)/(16*UART1.MAN_BAUDRATE))"/>
										<text label="Fractional Divider:"/>
										<math define="UART1.FD[4:0]" svd="0" formula="trunc((((UART1.CLK*1000000)/(16*UART1.MAN_BAUDRATE))-UART1.BRVAL[10:0])*32)"/>
										<text label="Effective Baudrate:"/>
										<math define="UART1.BAUDRATE" svd="0" formula="(UART1.CLK*1000000)/(16*(UART1.BRVAL[10:0]+(UART1.FD[4:0]/32)))"/>
									</gridcontainer>
								</verticalcontainer>
							</groupcontainer>
							<groupcontainer label="Pins">
								<verticalcontainer color="240;240;240;240">
                    <combo label="TxD/RxD Pin Select" define="SCU.MODPISEL.URIOS1" default="label=UART1 connected to LIN Trx" header="scu_defines.h">
                      <item override="Enable" label="UART1 connected to LIN Trx"/>
                      <item override="Disable" label="TxD1 (P0.2), RxD1 (P0.1)" lockon="PORT.P0_DIR.PP1.label=Input;PORT.P0_DIR.PP2.label=Output;PORT.P0_2_ALT[1:0].label=UART1_TXD"/>
                    </combo>
                    <math visible="false" define="SCU.MODPISEL.U_TX_CONDIS" header="scu_defines.h" formula="0"/>
                    <text label="Note: When using GPIOs, "/>
                    <text label="          send LIN Trx to Sleep Mode to avoid "/>
                    <text label="          sending data via LIN pin!"/>
                </verticalcontainer>
							</groupcontainer>
						</verticalcontainer>
						<verticalcontainer>
							<groupcontainer label="Interrupts">
								<verticalcontainer>
									<groupcontainer label="Receive">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable Interrupt Code" define="UART1.RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1"/>
											<checkbox label="Enable Interrupt" define="SCU.MODIEN2.RIEN1" header="int_defines.h" lockon="UART1.RX_INT_EN=1"/>
											<text label="Callback:"/>
											<edit define="UART1.RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</verticalcontainer>
									</groupcontainer>
									<groupcontainer label="Transmit">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="UART1.TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1"/>
											<checkbox label="Enable Interrupt" define="SCU.MODIEN2.TIEN1" header="int_defines.h" lockon="UART1.TX_INT_EN=1"/>
											<text label="Callback:"/>
											<edit define="UART1.TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</verticalcontainer>
									</groupcontainer>
								</verticalcontainer>
							</groupcontainer>
						</verticalcontainer>
					</gridcontainer>
				</absolutecontainer>
				<absolutecontainer label="UART2">
					<gridcontainer columns="3">
						<verticalcontainer>
							<groupcontainer label="Clock">
								<horizontalcontainer color="240;240;240;240">
									<gridcontainer columns="2">
										<text label="Clock Speed:"/>
										<math unit="MHz" define="UART2.CLK" svd="0" formula="SCU.PLL_fPLL/(2^(SCU.BCON2.BR2_PRE))"/>
										<text label="Prescaler"/>
										<combo define="SCU.BCON2.BR2_PRE" header="scu_defines.h" default="label=fSYS / 1">
											<item label="fSYS / 1" override="div 1"/>
											<item label="fSYS / 2" override="div 2"/>
											<item label="fSYS / 4" override="div 4"/>
											<item label="fSYS / 8" override="div 8"/>
											<item label="fSYS / 16" override="div 16"/>
											<item label="fSYS / 32" override="div 32"/>
										</combo>
										<text/>
										<text/>
									</gridcontainer>
									<text/>
									<dial size="90;90" min="0" max="40" data="UART2.CLK"/>
									<text/>
								</horizontalcontainer>
							</groupcontainer>
							<groupcontainer label="Mode">
								<verticalcontainer color="240;240;240;240">
									<text label="Mode Select:"/>
									<combo define="UART2.SCON[7:6]" default="label=Mode 0: 8-bit shift register, fixed Baudrate fSYS/2">
										<item label="Mode 0: 8-bit shift register, fixed Baudrate fSYS/2"/>
										<item label="Mode 1: 8-bit UART, variable Baudrate"/>
										<item label="Mode 2: 9-bit UART, fixed Baudrate (fSYS/64 or fSYS/32)"/>
										<item label="Mode 3: 9-bit UART, variable Baudrate"/>
									</combo>
									<checkbox label="No Receive Interrupt if no StopBit was received (SM2)" define="UART2.SCON.SM2"/>
									<checkbox label="Receiver enabled" define="UART2.SCON.REN"/>
									<checkbox label="STDIN/STDOUT enabled" define="UART2.STD_EN" svd="0"/>
								</verticalcontainer>
							</groupcontainer>
						</verticalcontainer>
						<verticalcontainer>
							<groupcontainer label="Baudrate">
								<verticalcontainer color="240;240;240;240">
									<checkbox label="Baudrate Generator running" define="SCU.BCON2.BR2_R" default="0" header="scu_defines.h"/>
									<gridcontainer columns="2">
										<text label="Configured Baudrate [Baud]"/>
										<spinbox define="UART2.MAN_BAUDRATE" svd="0" range="0;2000000" default="19200"/>
										<text label="Baudrate Value:"/>
										<math define="UART2.BRVAL[10:0]" svd="0" formula="trunc((UART2.CLK*1000000)/(16*UART2.MAN_BAUDRATE))"/>
										<text label="Fractional Divider:"/>
										<math define="UART2.FD[4:0]" svd="0" formula="trunc((((UART2.CLK*1000000)/(16*UART2.MAN_BAUDRATE))-UART2.BRVAL[10:0])*32)"/>
										<text label="Effective Baudrate:"/>
										<math define="UART2.BAUDRATE" svd="0" formula="(UART2.CLK*1000000)/(16*(UART2.BRVAL[10:0]+(UART2.FD[4:0]/32)))"/>
									</gridcontainer>
								</verticalcontainer>
							</groupcontainer>
							<groupcontainer label="Pins">
								<verticalcontainer color="240;240;240;240">
									<checkbox label="TXD2 (P1.0) UART sending" define="UART2.TXD_PINSEL" svd="0" lockon="PORT.P1_DIR.PP0.label=Output;PORT.P1_0_ALT[1:0].label=UART2_TXD"/>
									<checkbox label="RXD2 (P1.1) UART receiving" define="UART2.RXD_PINSEL" svd="0" lockon="PORT.P1_DIR.PP1.label=Input"/>
									<text/>
									<text/>
								</verticalcontainer>
							</groupcontainer>
						</verticalcontainer>
						<verticalcontainer>
							<groupcontainer label="Interrupts">
								<verticalcontainer>
									<groupcontainer label="Receive">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="UART2.RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART2=1"/>
											<checkbox label="Enable Interrupt" define="SCU.MODIEN2.RIEN2" header="int_defines.h" lockon="UART2.RX_INT_EN=1"/>
											<text label="Callback:"/>
											<edit define="UART2.RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</verticalcontainer>
									</groupcontainer>
									<groupcontainer label="Transmit">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="UART2.TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART2=1"/>
											<checkbox label="Enable Interrupt" define="SCU.MODIEN2.TIEN2" header="int_defines.h" lockon="UART2.TX_INT_EN=1"/>
											<text label="Callback:"/>
											<edit define="UART2.TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</verticalcontainer>
									</groupcontainer>
								</verticalcontainer>
							</groupcontainer>
						</verticalcontainer>
					</gridcontainer>
				</absolutecontainer>
			</header>
		</tabcontainer>
		<tabcontainer label="SSC" desc="High-Speed Synchronous Serial Interface" color="255;255;255;255">
			<header file="ssc_defines.h">
				<absolutecontainer label="SSC1">
					<gridcontainer columns="2">
						<verticalcontainer>
							<checkbox label="Enable SSC1" define="SSC1.CON.EN"/>
							<groupcontainer label="Interrupts">
								<verticalcontainer>
									<groupcontainer label="Receive">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="SSC1.RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_SSC1=1"/>
											<checkbox label="Enable interrupt" define="SCU.MODIEN1.RIREN1" header="int_defines.h" lockon="SSC1.RX_INT_EN=1"/>
											<horizontalcontainer>
												<text label="Callback:"/>
												<edit define="SSC1.RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
											</horizontalcontainer>
										</verticalcontainer>
									</groupcontainer>
									<groupcontainer label="Transmit">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="SSC1.TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_SSC1=1"/>
											<checkbox label="Enable interrupt" define="SCU.MODIEN1.TIREN1" header="int_defines.h" lockon="SSC1.TX_INT_EN=1"/>
											<horizontalcontainer>
												<text label="Callback:"/>
												<edit define="SSC1.TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
											</horizontalcontainer>
										</verticalcontainer>
									</groupcontainer>
									<groupcontainer label="Error">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="SSC1.ERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_SSC1=1"/>                                <!-- author <<Joey42>> -->
											<checkbox label="Enable interrupt" define="SCU.MODIEN1.EIREN1" header="int_defines.h" lockon="SSC1.ERR_INT_EN=1"/>
											<horizontalcontainer>
												<text label="Callback:"/>
												<edit define="SSC1.ERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
											</horizontalcontainer>
										</verticalcontainer>
									</groupcontainer>
								</verticalcontainer>
							</groupcontainer>
							<groupcontainer label="Baudrate for Master mode">
								<gridcontainer columns="2" color="240;240;240;240">
									<text label="Configured Baudrate [kBaud]:"/>
									<spinbox define="SSC1.MAN_BAUDRATE" svd="0" default="1000"/>
									<text label="Reload value:"/>
									<math define="SSC1.BR.BR_VALUE" formula="trunc((SSC1.TEMP_CLK/(2000*SSC1.MAN_BAUDRATE)*1000000)-0.5)"/>
									<text/>
									<text/>
								</gridcontainer>
							</groupcontainer>
						</verticalcontainer>
						<verticalcontainer>
							<horizontalcontainer>
								<groupcontainer label="Clock Overview">
									<gridcontainer columns="2" color="240;240;240;240">
										<text label="Clock speed:"/>
										<math unit="MHz" define="SSC1.TEMP_CLK" svd="0" formula="SCU.PLL_fPLL"/>
										<text label="Max. Baudrate:"/>
										<math unit="kBaud" formula="1000*SCU.PLL_fPLL/2"/>
										<text label="Effective Baudrate:"/>
										<math unit="kBaud" define="SSC1.TEMP_BR" svd="0" formula="1000*SCU.PLL_fPLL/(2*(SSC1.BR.BR_VALUE+1))"/>
										<text/>
										<text/>
									</gridcontainer>
								</groupcontainer>
								<groupcontainer label="Enable Error Detection">
									<verticalcontainer color="240;240;240;240">
										<gridcontainer columns="2">
											<checkbox label="Transmit (Slave mode)" define="SSC1.CON.TE"/>
											<checkbox label="Receive" define="SSC1.CON.RE"/>
											<checkbox label="Baudrate (Slave mode)" define="SSC1.CON.BE"/>
											<checkbox label="Phase" define="SSC1.CON.PE"/>
										</gridcontainer>
										<verticalcontainer>
											<text label="Automatic reset upon Baudrate error:"/>
											<combo define="SSC1.CON.BSY">
												<item label="No additional action"/>
												<item label="The SSC is automatically reset" lockon="SSC1.CON.BE=1"/>
											</combo>
										</verticalcontainer>
									</verticalcontainer>
								</groupcontainer>
							</horizontalcontainer>
							<groupcontainer label="Mode">
								<gridcontainer columns="2" color="240;240;240;240">
									<text label="Data width:"/>
									<combo define="SSC1.CON.BM">
										<item label="2 bits" value="1"/>
										<item label="3 bits" value="2"/>
										<item label="4 bits" value="3"/>
										<item label="5 bits" value="4"/>
										<item label="6 bits" value="5"/>
										<item label="7 bits" value="6"/>
										<item label="8 bits" value="7"/>
										<item label="9 bits" value="8"/>
										<item label="10 bits" value="9"/>
										<item label="11 bits" value="10"/>
										<item label="12 bits" value="11"/>
										<item label="13 bits" value="12"/>
										<item label="14 bits" value="13"/>
										<item label="15 bits" value="14"/>
										<item label="16 bits" value="15"/>
										<item hide="2"/>
										<item hide="16"/>
									</combo>
									<text label="Heading:"/>
									<combo define="SSC1.CON.HB">
										<item label="Transmit/Receive LSB First" override="LSB"/>
										<item label="Transmit/Receive MSB First" override="MSB"/>
									</combo>
									<text label="Clock phase:"/>
									<combo define="SSC1.CON.PH">
										<item label="Shift transmit data on the leading clock edge, latch on trailing edge" override="SHIFT"/>
										<item label="Latch receive data on leading clock edge, shift on trailing edge" override="LATCH"/>
									</combo>
									<text label="Clock polarity:"/>
									<combo define="SSC1.CON.PO">
										<item label="Idle clock line is low, leading clock edge is low-to-high transition" override="LOW"/>
										<item label="Idle clock line is high, leading clock edge is high-to-low transition" override="HIGH"/>
									</combo>
									<text label="Loop back:"/>
									<combo define="SSC1.CON.LB">
										<item label="Normal output" override="NORMAL"/>
										<item label="Receive input is connected with transmit output (half-duplex mode)" override="LB"/>
									</combo>
									<text label="Selected:"/>
									<combo define="SSC1.CON.MS">
										<item label="Slave Mode" override="SLAVE" lockon="SSC1.TEMP_MS=0"/>
										<item label="Master Mode" override="MASTER" lockon="SSC1.CON.TE=0;SSC1.CON.BE=0;SSC1.TEMP_MS=1"/>
									</combo>
								</gridcontainer>
							</groupcontainer>
							<treecontainer headerlabels="Pins;;" columnwidths="180;200;0">
								<radio define="SSC1.TEMP_MS" svd="0">
									<radiobutton label="Slave Mode" uielement="branch">
										<horizontalcontainer label="Transmitter Output Pin">
											<radio define="SSC1.TEMP_SOS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P0.2" lockon="PORT.P0_DIR.PP2.label=Output;PORT.P0_2_ALT[1:0].label=SSC12_S_MRST" value="1"/>
												<radiobutton label="P0.5" lockon="PORT.P0_DIR.PP5.label=Output;PORT.P0_5_ALT[1:0].label=SSC1_S_MRST" value="0"/>
											</radio>
										</horizontalcontainer>
										<horizontalcontainer label="Receiver Input Pin">
											<radio define="SSC1.TEMP_SIS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P0.4" lockon="PORT.P0_DIR.PP4.label=Input" value="0"/>
												<radiobutton label="P1.4" lockon="PORT.P1_DIR.PP4.label=Input" value="1"/>
												<radiobutton label="P2.3" value="3"/>
											</radio>
										</horizontalcontainer>
										<horizontalcontainer label="Clock Input Pin">
											<radio define="SSC1.TEMP_CIS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P0.3" lockon="PORT.P0_DIR.PP3.label=Input" value="0"/>
												<radiobutton label="P0.1" lockon="PORT.P0_DIR.PP1.label=Input" value="1"/>
												<radiobutton label="P2.1" value="3"/>
											</radio>
										</horizontalcontainer>
									</radiobutton>
									<radiobutton label="Master Mode" uielement="branch">
										<horizontalcontainer label="Transmitter Output Pin">
											<radio define="SSC1.TEMP_MOS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P1.4" lockon="PORT.P1_DIR.PP4.label=Output;PORT.P1_4_ALT[1:0].label=SSC12_M_MTSR" value="1"/>
												<radiobutton label="P0.4" lockon="PORT.P0_DIR.PP4.label=Output;PORT.P0_4_ALT[1:0].label=SSC1_M_MTSR" value="0"/>
											</radio>
										</horizontalcontainer>
										<horizontalcontainer label="Receiver Input Pin">
											<radio define="SSC1.TEMP_MIS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P0.5" lockon="PORT.P0_DIR.PP5.label=Input" value="0"/>
												<radiobutton label="P0.2" lockon="PORT.P0_DIR.PP2.label=Input" value="1"/>
												<radiobutton label="P2.7" value="3"/>
											</radio>
										</horizontalcontainer>
										<horizontalcontainer label="Clock Output Pin">
											<radio define="SSC1.TEMP_COS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P0.3" lockon="PORT.P0_DIR.PP3.label=Output;PORT.P0_3_ALT[1:0].label=SSC1_M_SCK" value="0"/>
												<radiobutton label="P0.1" lockon="PORT.P0_DIR.PP1.label=Output;PORT.P0_1_ALT[1:0].label=SSC12_M_SCK" value="1"/>
											</radio>
										</horizontalcontainer>
									</radiobutton>
								</radio>
								<math visible="false" define="SSC1.PISEL" formula="(SSC1.TEMP_CIS.value.*0x2)*8.+(SSC1.TEMP_SIS.value.*0x2)*8.+(SSC1.TEMP_MIS.value.*0x2)*8+(SSC1.TEMP_CIS.value.*0x1)*4+(SSC1.TEMP_SIS.value.*0x1)*2+(SSC1.TEMP_MIS.value.*0x1)"/>
							</treecontainer>
						</verticalcontainer>
					</gridcontainer>
				</absolutecontainer>
				<absolutecontainer label="SSC2">
					<gridcontainer columns="2">
						<verticalcontainer>
							<checkbox label="Enable SSC2" define="SSC2.CON.EN"/>
							<groupcontainer label="Interrupts">
								<verticalcontainer>
									<groupcontainer label="Receive">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="SSC2.RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_SSC2=1"/>
											<checkbox label="Enable interrupt" define="SCU.MODIEN1.RIREN2" header="int_defines.h" lockon="SSC2.RX_INT_EN=1"/>
											<horizontalcontainer>
												<text label="Callback:"/>
												<edit define="SSC2.RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
											</horizontalcontainer>
										</verticalcontainer>
									</groupcontainer>
									<groupcontainer label="Transmit">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="SSC2.TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_SSC2=1"/>
											<checkbox label="Enable interrupt" define="SCU.MODIEN1.TIREN2" header="int_defines.h" lockon="SSC2.TX_INT_EN=1"/>
											<horizontalcontainer>
												<text label="Callback:"/>
												<edit define="SSC2.TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
											</horizontalcontainer>
										</verticalcontainer>
									</groupcontainer>
									<groupcontainer label="Error">
										<verticalcontainer color="240;240;240;240">
											<checkbox label="Enable interrupt code" define="SSC2.ERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_SSC2=1"/>
											<checkbox label="Enable interrupt" define="SCU.MODIEN1.EIREN2" header="int_defines.h" lockon="SSC2.ERR_INT_EN=1"/>
											<horizontalcontainer>
												<text label="Callback:"/>
												<edit define="SSC2.ERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
											</horizontalcontainer>
										</verticalcontainer>
									</groupcontainer>
								</verticalcontainer>
							</groupcontainer>
							<groupcontainer label="Baudrate for Master mode">
								<gridcontainer columns="2" color="240;240;240;240">
									<text label="Configured Baudrate [kBaud]:"/>
									<spinbox define="SSC2.MAN_BAUDRATE" svd="0" default="1000"/>
									<text label="Reload value:"/>
									<math define="SSC2.BR.BR_VALUE" formula="trunc((SSC2.TEMP_CLK/(2000*SSC2.MAN_BAUDRATE)*1000000)-0.5)"/>
									<text/>
									<text/>
								</gridcontainer>
							</groupcontainer>
						</verticalcontainer>
						<verticalcontainer>
							<horizontalcontainer>
								<groupcontainer label="Clock Overview">
									<gridcontainer columns="2" color="240;240;240;240">
										<text label="Clock speed:"/>
										<math unit="MHz" define="SSC2.TEMP_CLK" svd="0" formula="SCU.PLL_fPLL"/>
										<text label="Max. Baudrate:"/>
										<math unit="kBaud" formula="1000*SCU.PLL_fPLL/2"/>
										<text label="Effective Baudrate:"/>
										<math unit="kBaud" define="SSC2.TEMP_BR" svd="0" formula="1000*SCU.PLL_fPLL/(2*(SSC2.BR.BR_VALUE+1))"/>
										<text/>
										<text/>
									</gridcontainer>
								</groupcontainer>
								<groupcontainer label="Enable Error Detection">
									<verticalcontainer color="240;240;240;240">
										<gridcontainer columns="2">
											<checkbox label="Transmit (Slave mode)" define="SSC2.CON.TE"/>
											<checkbox label="Receive" define="SSC2.CON.RE"/>
											<checkbox label="Baudrate (Slave mode)" define="SSC2.CON.BE"/>
											<checkbox label="Phase" define="SSC2.CON.PE"/>
										</gridcontainer>
										<verticalcontainer>
											<text label="Automatic reset upon Baudrate error:"/>
											<combo define="SSC2.CON.BSY">
												<item label="No additional action"/>
												<item label="The SSC is automatically reset" lockon="SSC2.CON.BE=1"/>
											</combo>
										</verticalcontainer>
									</verticalcontainer>
								</groupcontainer>
							</horizontalcontainer>
							<groupcontainer label="Mode">
								<gridcontainer columns="2" color="240;240;240;240">
									<text label="Data width:"/>
									<combo define="SSC2.CON.BM">
										<item label="2 bits" value="1"/>
										<item label="3 bits" value="2"/>
										<item label="4 bits" value="3"/>
										<item label="5 bits" value="4"/>
										<item label="6 bits" value="5"/>
										<item label="7 bits" value="6"/>
										<item label="8 bits" value="7"/>
										<item label="9 bits" value="8"/>
										<item label="10 bits" value="9"/>
										<item label="11 bits" value="10"/>
										<item label="12 bits" value="11"/>
										<item label="13 bits" value="12"/>
										<item label="14 bits" value="13"/>
										<item label="15 bits" value="14"/>
										<item label="16 bits" value="15"/>
										<item hide="2"/>
										<item hide="16"/>
									</combo>
									<text label="Heading:"/>
									<combo define="SSC2.CON.HB">
										<item label="Transmit/Receive LSB First" override="LSB"/>
										<item label="Transmit/Receive MSB First" override="MSB"/>
									</combo>
									<text label="Clock phase:"/>
									<combo define="SSC2.CON.PH">
										<item label="Shift transmit data on the leading clock edge, latch on trailing edge" override="SHIFT"/>
										<item label="Latch receive data on leading clock edge, shift on trailing edge" override="LATCH"/>
									</combo>
									<text label="Clock polarity:"/>
									<combo define="SSC2.CON.PO">
										<item label="Idle clock line is low, leading clock edge is low-to-high transition" override="LOW"/>
										<item label="Idle clock line is high, leading clock edge is high-to-low transition" override="HIGH"/>
									</combo>
									<text label="Loop back:"/>
									<combo define="SSC2.CON.LB">
										<item label="Normal output" override="NORMAL"/>
										<item label="Receive input is connected with transmit output (half-duplex mode)" override="LB"/>
									</combo>
									<text label="Selected:"/>
									<combo define="SSC2.CON.MS">
										<item label="Slave mode" override="SLAVE" lockon="SSC2.TEMP_MS=0"/>
										<item label="Master mode" override="MASTER" lockon="SSC2.CON.TE=0;SSC2.CON.BE=0;SSC2.TEMP_MS=1"/>
									</combo>
								</gridcontainer>
							</groupcontainer>
							<treecontainer headerlabels="Pins;;" columnwidths="180;200;0">
								<radio define="SSC2.TEMP_MS" svd="0">
									<radiobutton label="Slave Mode" uielement="branch">
										<horizontalcontainer label="Transmitter Output Pin">
											<radio define="SSC2.TEMP_SOS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P0.2" lockon="PORT.P0_DIR.PP2.label=Output;PORT.P0_2_ALT[1:0].label=SSC12_S_MRST" value="1"/>
												<radiobutton label="P1.2" lockon="PORT.P1_DIR.PP2.label=Output;PORT.P1_2_ALT[1:0].label=SSC2_S_MRST" value="0"/>
											</radio>
										</horizontalcontainer>
										<horizontalcontainer label="Receiver Input Pin">
											<radio define="SSC2.TEMP_SIS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P1.1" lockon="PORT.P1_DIR.PP1.label=Input" value="0"/>
												<radiobutton label="P1.4" lockon="PORT.P1_DIR.PP4.label=Input" value="1"/>
												<radiobutton label="P2.3"  value="3"/>
											</radio>
										</horizontalcontainer>
										<horizontalcontainer label="Clock input pin">
											<radio define="SSC2.TEMP_CIS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P1.0" lockon="PORT.P1_DIR.PP0.label=Input" value="0"/>
												<radiobutton label="P0.1" lockon="PORT.P0_DIR.PP1.label=Input" value="1"/>
												<radiobutton label="P2.1" value="3"/>
											</radio>
										</horizontalcontainer>
									</radiobutton>
									<radiobutton label="Master Mode" uielement="branch">
										<horizontalcontainer label="Transmitter Output Pin">
											<radio define="SSC2.TEMP_MOS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P1.4" lockon="PORT.P1_DIR.PP4.label=Output;PORT.P1_4_ALT[1:0].label=SSC12_M_MTSR" value="1"/>
												<radiobutton label="P1.1" lockon="PORT.P1_DIR.PP1.label=Output;PORT.P1_1_ALT[1:0].label=SSC2_M_MTSR" value="0"/>
											</radio>
										</horizontalcontainer>
										<horizontalcontainer label="Receiver Input Pin">
											<radio define="SSC2.TEMP_MIS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P1.2" lockon="PORT.P1_DIR.PP2.label=Input" value="0"/>
												<radiobutton label="P0.2" lockon="PORT.P0_DIR.PP2.label=Input" value="1"/>
												<radiobutton label="P2.7" value="3"/>
											</radio>
										</horizontalcontainer>
										<horizontalcontainer label="Clock Output Pin">
											<radio define="SSC2.TEMP_COS" svd="0" default="label=none">
												<radiobutton label="none" value="4"/>
												<radiobutton label="P1.0" lockon="PORT.P1_DIR.PP0.label=Output;PORT.P1_0_ALT[1:0].label=SSC2_M_SCK" value="0"/>
												<radiobutton label="P0.1" lockon="PORT.P0_DIR.PP1.label=Output;PORT.P0_1_ALT[1:0].label=SSC12_M_SCK" value="1"/>
											</radio>
										</horizontalcontainer>
									</radiobutton>
								</radio>
								<math visible="false" define="SSC2.PISEL" formula="(SSC2.TEMP_CIS.*0x2)*8.+(SSC2.TEMP_SIS.*0x2)*8.+(SSC2.TEMP_MIS.*0x2)*8+(SSC2.TEMP_CIS.*0x1)*4+(SSC2.TEMP_SIS.*0x1)*2+(SSC2.TEMP_MIS.*0x1)"/>
							</treecontainer>
						</verticalcontainer>
					</gridcontainer>
				</absolutecontainer>
			</header>
		</tabcontainer>
		<absolutecontainer label="LIN" desc="Local Interconnect Network Transceiver" color="255;255;255;255">
			<header file="lin_defines.h">
				<verticalcontainer  sizepolicy="fixed;fixed">
					<checkbox label="Enable LIN" define="LIN.CTRL.EN"/>
					<horizontalcontainer>
						<groupcontainer label="Mode">
							<verticalcontainer color="240;240;240;240">
								<gridcontainer columns="2">
									<text label="Transceiver"/>
									<combo define="LIN.CTRL.MODE" default="label=Normal">
										<item label="Sleep Mode" override="LIN Sleep Mode"/>
										<item label="Receive-Only" override="LIN Receive-Only Mode"/>
										<item label="Normal" override="LIN Normal Mode"/>
									</combo>
									<text label="Slope"/>
									<combo define="LIN.CTRL.SM" default="label=Normal - 20 kBaud">
										<item label="Normal - 20 kBaud" override="Normal Slope Mode"/>
										<item label="Fast - 40 kBaud" override="Fast Slope Mode"/>
										<item label="Low - 10.4 kBaud" override="Low Slope Mode"/>
										<item label="Flash - 150 kBaud" override="Flash Mode"/>
									</combo>
								</gridcontainer>
								<checkbox label="High Voltage I/O Mode enable" define="LIN.CTRL.HV_MODE"/>
								<text/>
							</verticalcontainer>
						</groupcontainer>
						<groupcontainer label="LIN Synch Detection">
							<gridcontainer columns="2">
								<horizontalcontainer>
									<text label="Master Baudrate [Baud]:"/>
									<spinbox define="LIN.MASTER_BAUDRATE" svd="0" default="19200"/>
									<math visible="false" define="SCU.LINST.BGSEL" formula="SCU.FSYS/LIN.MASTER_BAUDRATE>576?3:SCU.FSYS/LIN.MASTER_BAUDRATE>288?2:SCU.FSYS/LIN.MASTER_BAUDRATE>144?1:0"/>
									<text/>
								</horizontalcontainer>
								<checkbox define="LIN.AUTOBAUD_EN" svd="0" label="Baudrate detection (Timer2)" lockon="TIMER2.Configuration_En=1;TIMER2.CON.C_T2=0;TIMER2.CON.CP_RL2=1;TIMER2.CON.EXEN2=1;TIMER2.MOD.EDGESEL=0;TIMER2.MOD.T2RHEN=1;TIMER2.MOD.T2REGS=0;TIMER2.MOD.PREN=1;TIMER2.MOD.T2PRE.label=divide by 1;SCU.MODPISEL1.T2EXCON=0;SCU.T2EX_Sel[3:0]=8"/>
								<groupcontainer label="End of Synch Interrupt">
									<verticalcontainer color="240;240;240;240">
										<checkbox label="Enable interrupt code" define="LIN.EOF_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1"/>
										<checkbox label="Enable interrupt" define="LIN.SYNC[0]" svd="0" lockon="LIN.EOF_INT_EN=1"/>
										<horizontalcontainer>
											<text label="Callback:"/>
											<edit define="LIN.EOF_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</horizontalcontainer>
									</verticalcontainer>
								</groupcontainer>
								<groupcontainer label="Error in Synch Interrupt">
									<verticalcontainer  color="240;240;240;240">
										<checkbox label="Enable interrupt code" define="LIN.ERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1"/>
										<checkbox label="Enable interrupt" define="LIN.SYNC[1]" svd="0" lockon="LIN.ERR_INT_EN=1"/>
										<horizontalcontainer>
											<text label="Callback:"/>
											<edit define="LIN.ERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</horizontalcontainer>
									</verticalcontainer>
								</groupcontainer>
								<math visible="false" define="SCU.LINST.SYNEN" formula="LIN.SYNC[0].+LIN.SYNC[1]"/>
							</gridcontainer>
						</groupcontainer>
					</horizontalcontainer>
					<horizontalcontainer>
						<groupcontainer label="Diagnostic Interrupts">
							<gridcontainer columns="2">
								<groupcontainer label="Over Current">
									<verticalcontainer color="240;240;240;240">
										<checkbox label="Enable interrupt code" define="LIN.OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1"/>
										<checkbox label="Enable interrupt" define="LIN.IRQEN.OC_IEN" lockon="LIN.OC_INT_EN=1"/>
										<horizontalcontainer>
											<text label="Callback:"/>
											<edit define="LIN.OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</horizontalcontainer>
									</verticalcontainer>
								</groupcontainer>
								<groupcontainer label="Over Temperature">
									<verticalcontainer color="240;240;240;240">
										<checkbox label="Enable interrupt code" define="LIN.OT_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1"/>
										<checkbox label="Enable interrupt" define="LIN.IRQEN.OT_IEN" lockon="LIN.OT_INT_EN=1"/>
										<horizontalcontainer>
											<text label="Callback:"/>
											<edit define="LIN.OT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</horizontalcontainer>
									</verticalcontainer>
								</groupcontainer>
								<groupcontainer label="TxD Timeout">
									<verticalcontainer color="240;240;240;240">
										<checkbox label="Enable interrupt code" define="LIN.TMOUT_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1"/>
										<checkbox label="Enable interrupt" define="LIN.IRQEN.TXD_TMOUT_IEN" lockon="LIN.TMOUT_INT_EN=1"/>
										<horizontalcontainer>
											<text label="Callback:"/>
											<edit define="LIN.TMOUT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</horizontalcontainer>
									</verticalcontainer>
								</groupcontainer>
								<groupcontainer label="Slope Mode Error">
									<verticalcontainer color="240;240;240;240">
										<checkbox label="Enable interrupt code" define="LIN.M_SM_ERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_UART1=1"/>
										<checkbox label="Enable interrupt" define="LIN.IRQEN.M_SM_ERR_IEN" lockon="LIN.M_SM_ERR_INT_EN=1"/>
										<horizontalcontainer>
											<text label="Callback:"/>
											<edit define="LIN.M_SM_ERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
										</horizontalcontainer>
									</verticalcontainer>
								</groupcontainer>
							</gridcontainer>
						</groupcontainer>
					</horizontalcontainer>
				</verticalcontainer>
			</header>
		</absolutecontainer>
		<treecontainer headerlabels="Structure;Settings;" label="MATH" desc="MATH DIVIDER MODULE" columnwidths="300;250">
			<header file="math_defines.h">
				<checkbox label="Configure MATH DIV" define="MATH.GLBCON.MATH_EN" uielement="branch">
					<combo label="Suspend Mode" define="MATH.GLBCON.SUSCFG" default="label=None">
						<item label="None" override="no suspend"/>
						<item label="HARD SUSPEND" override="hard suspend"/>
						<item label="SOFT SUSPEND" override="soft suspend"/>
					</combo>
					<branch label="Dividend Configuration">
						<combo label="Dividend Chaining" define="MATH.GLBCON.DVDRC" default="label=Disable">
							<item label="Disable" override="disabled"/>
							<item label="QUOT" override="QUOT"/>
							<item label="RMD" override="RMD"/>
						</combo>
						<spinbox label="Dividend Value" define="MATH.DVD.VAL" range="0;0xFFFF"/>
					</branch>
					<branch label="Divisor Configuration">
						<combo label="Divisor Chaining" define="MATH.GLBCON.DVSRC" default="label=Disable">
							<item label="Disable" override="disabled"/>
							<item label="QUOT" override="QUOT"/>
							<item label="RMD" override="RMD"/>
						</combo>
						<spinbox label="Divisor Value" define="MATH.DVS.VAL" range="0;0xFFFF"/>
					</branch>
					<combo label="Division Mode" define="MATH.DIVCON.DIVMODE" default="label=32-bit divide by 32-bit">
						<item label="32-bit divide by 32-bit" override="32-32"/>
						<item label="32-bit divide by 16-bit" override="32-16"/>
						<item label="16-bit divide by 16-bit" override="16-16"/>
					</combo>
					<combo label="Start Mode" define="MATH.DIVCON.STMODE" default="label=AUTO">
						<item label="AUTO" override="Auto"/>
						<item label="MANUAL" override="Manual"/>
					</combo>
					<checkbox label="START" define="MATH.DIVCON.ST" lockon="MATH.DIVCON.STMODE=1"/>
					<branch label="MATH DIV Interrupt">
						<checkbox label="Divider Error" define="MATH.DIVERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_MATHDIV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="MATH.EVIER.DIVERRIEN"/>
							<edit label="Call Back" define="MATH.DIVERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
							<checkbox label="Generate Interrupt" define="MATH.EVSFR.DIVERRS" lockon="MATH.EVIER.DIVERRIEN=1"/>
						</checkbox>
						<checkbox label="Divider End of Calculation" define="MATH.DIVEOC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER.Int_MATHDIV=1" uielement="branch">
							<checkbox label="Enable Interrupt" define="MATH.EVIER.DIVEOCIEN"/>
							<edit label="Call Back" define="MATH.DIVEOC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
							<checkbox label="Generate Interrupt" define="MATH.EVSFR.DIVEOCS" lockon="MATH.EVIER.DIVEOCIEN=1"/>
						</checkbox>
					</branch>
				</checkbox>
			</header>
		</treecontainer>
		<absolutecontainer label="CSA" desc="Current Sense Amplifier" color="255;255;255;255">
			<header file="csa_defines.h">
				<groupcontainer label="CSA">
					<verticalcontainer color="240;240;240;240">
						<text label="Not applicable for TLE9852QX"/>
						<checkbox label="Enable" define="MF.CSA_CTRL.CSA_EN"/>
						<gridcontainer columns="2">
							<text label="Gain"/>
							<combo define="MF.CSA_CTRL.CSA_GAIN" default="label=10">
								<item label="10" override="10"/>
								<item label="20" override="20"/>
								<item label="40" override="40"/>
								<item label="60" override="60"/>
							</combo>
						</gridcontainer>
					</verticalcontainer>
				</groupcontainer>
			</header>
		</absolutecontainer>
	</tabcontainer>
</ifxmlcfg>